import{l as it,L as ln,w as an,x as cn,Q as hn,$ as Ye,M as un,a0 as dn,y as Ue,a1 as $e}from"./three.module.da3d5bd6.js";class J{constructor(t){t===void 0&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){t===void 0&&(t=new d);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){e===void 0&&(e=new d);const n=this.elements,s=t.x,i=t.y,r=t.z;return e.x=n[0]*s+n[1]*i+n[2]*r,e.y=n[3]*s+n[4]*i+n[5]*r,e.z=n[6]*s+n[7]*i+n[8]*r,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){e===void 0&&(e=new J);const n=this.elements,s=t.elements,i=e.elements,r=n[0],l=n[1],o=n[2],a=n[3],h=n[4],u=n[5],c=n[6],f=n[7],p=n[8],m=s[0],y=s[1],w=s[2],v=s[3],b=s[4],E=s[5],x=s[6],A=s[7],B=s[8];return i[0]=r*m+l*v+o*x,i[1]=r*y+l*b+o*A,i[2]=r*w+l*E+o*B,i[3]=a*m+h*v+u*x,i[4]=a*y+h*b+u*A,i[5]=a*w+h*E+u*B,i[6]=c*m+f*v+p*x,i[7]=c*y+f*b+p*A,i[8]=c*w+f*E+p*B,e}scale(t,e){e===void 0&&(e=new J);const n=this.elements,s=e.elements;for(let i=0;i!==3;i++)s[3*i+0]=t.x*n[3*i+0],s[3*i+1]=t.y*n[3*i+1],s[3*i+2]=t.z*n[3*i+2];return e}solve(t,e){e===void 0&&(e=new d);const n=3,s=4,i=[];let r,l;for(r=0;r<n*s;r++)i.push(0);for(r=0;r<3;r++)for(l=0;l<3;l++)i[r+s*l]=this.elements[r+3*l];i[3+4*0]=t.x,i[3+4*1]=t.y,i[3+4*2]=t.z;let o=3;const a=o;let h;const u=4;let c;do{if(r=a-o,i[r+s*r]===0){for(l=r+1;l<a;l++)if(i[r+s*l]!==0){h=u;do c=u-h,i[c+s*r]+=i[c+s*l];while(--h);break}}if(i[r+s*r]!==0)for(l=r+1;l<a;l++){const f=i[r+s*l]/i[r+s*r];h=u;do c=u-h,i[c+s*l]=c<=r?0:i[c+s*l]-i[c+s*r]*f;while(--h)}}while(--o);if(e.z=i[2*s+3]/i[2*s+2],e.y=(i[1*s+3]-i[1*s+2]*e.z)/i[1*s+1],e.x=(i[0*s+3]-i[0*s+2]*e.z-i[0*s+1]*e.y)/i[0*s+0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,n){if(n===void 0)return this.elements[e+3*t];this.elements[e+3*t]=n}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";const e=",";for(let n=0;n<9;n++)t+=this.elements[n]+e;return t}reverse(t){t===void 0&&(t=new J);const e=3,n=6,s=fn;let i,r;for(i=0;i<3;i++)for(r=0;r<3;r++)s[i+n*r]=this.elements[i+3*r];s[3+6*0]=1,s[3+6*1]=0,s[3+6*2]=0,s[4+6*0]=0,s[4+6*1]=1,s[4+6*2]=0,s[5+6*0]=0,s[5+6*1]=0,s[5+6*2]=1;let l=3;const o=l;let a;const h=n;let u;do{if(i=o-l,s[i+n*i]===0){for(r=i+1;r<o;r++)if(s[i+n*r]!==0){a=h;do u=h-a,s[u+n*i]+=s[u+n*r];while(--a);break}}if(s[i+n*i]!==0)for(r=i+1;r<o;r++){const c=s[i+n*r]/s[i+n*i];a=h;do u=h-a,s[u+n*r]=u<=i?0:s[u+n*r]-s[u+n*i]*c;while(--a)}}while(--l);i=2;do{r=i-1;do{const c=s[i+n*r]/s[i+n*i];a=n;do u=n-a,s[u+n*r]=s[u+n*r]-s[u+n*i]*c;while(--a)}while(r--)}while(--i);i=2;do{const c=1/s[i+n*i];a=n;do u=n-a,s[u+n*i]=s[u+n*i]*c;while(--a)}while(i--);i=2;do{r=2;do{if(u=s[e+r+n*i],isNaN(u)||u===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(i,r,u)}while(r--)}while(i--);return t}setRotationFromQuaternion(t){const e=t.x,n=t.y,s=t.z,i=t.w,r=e+e,l=n+n,o=s+s,a=e*r,h=e*l,u=e*o,c=n*l,f=n*o,p=s*o,m=i*r,y=i*l,w=i*o,v=this.elements;return v[3*0+0]=1-(c+p),v[3*0+1]=h-w,v[3*0+2]=u+y,v[3*1+0]=h+w,v[3*1+1]=1-(a+p),v[3*1+2]=f-m,v[3*2+0]=u-y,v[3*2+1]=f+m,v[3*2+2]=1-(a+c),this}transpose(t){t===void 0&&(t=new J);const e=this.elements,n=t.elements;let s;return n[0]=e[0],n[4]=e[4],n[8]=e[8],s=e[1],n[1]=e[3],n[3]=s,s=e[2],n[2]=e[6],n[6]=s,s=e[5],n[5]=e[7],n[7]=s,t}}const fn=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class d{constructor(t,e,n){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),this.x=t,this.y=e,this.z=n}cross(t,e){e===void 0&&(e=new d);const n=t.x,s=t.y,i=t.z,r=this.x,l=this.y,o=this.z;return e.x=l*i-o*s,e.y=o*n-r*i,e.z=r*s-l*n,e}set(t,e,n){return this.x=t,this.y=e,this.z=n,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(e)e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z;else return new d(this.x+t.x,this.y+t.y,this.z+t.z)}vsub(t,e){if(e)e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z;else return new d(this.x-t.x,this.y-t.y,this.z-t.z)}crossmat(){return new J([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,n=this.z,s=Math.sqrt(t*t+e*e+n*n);if(s>0){const i=1/s;this.x*=i,this.y*=i,this.z*=i}else this.x=0,this.y=0,this.z=0;return s}unit(t){t===void 0&&(t=new d);const e=this.x,n=this.y,s=this.z;let i=Math.sqrt(e*e+n*n+s*s);return i>0?(i=1/i,t.x=e*i,t.y=n*i,t.z=s*i):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,n=this.z;return Math.sqrt(t*t+e*e+n*n)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,n=this.y,s=this.z,i=t.x,r=t.y,l=t.z;return Math.sqrt((i-e)*(i-e)+(r-n)*(r-n)+(l-s)*(l-s))}distanceSquared(t){const e=this.x,n=this.y,s=this.z,i=t.x,r=t.y,l=t.z;return(i-e)*(i-e)+(r-n)*(r-n)+(l-s)*(l-s)}scale(t,e){e===void 0&&(e=new d);const n=this.x,s=this.y,i=this.z;return e.x=t*n,e.y=t*s,e.z=t*i,e}vmul(t,e){return e===void 0&&(e=new d),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,n){return n===void 0&&(n=new d),n.x=this.x+t*e.x,n.y=this.y+t*e.y,n.z=this.z+t*e.z,n}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(t){return t===void 0&&(t=new d),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const n=this.length();if(n>0){const s=pn,i=1/n;s.set(this.x*i,this.y*i,this.z*i);const r=mn;Math.abs(s.x)<.9?(r.set(1,0,0),s.cross(r,t)):(r.set(0,1,0),s.cross(r,t)),s.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,n){const s=this.x,i=this.y,r=this.z;n.x=s+(t.x-s)*e,n.y=i+(t.y-i)*e,n.z=r+(t.z-r)*e}almostEquals(t,e){return e===void 0&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return t===void 0&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(ue),ue.almostEquals(t,e)}clone(){return new d(this.x,this.y,this.z)}}d.ZERO=new d(0,0,0);d.UNIT_X=new d(1,0,0);d.UNIT_Y=new d(0,1,0);d.UNIT_Z=new d(0,0,1);const pn=new d,mn=new d,ue=new d;class H{constructor(t){t===void 0&&(t={}),this.lowerBound=new d,this.upperBound=new d,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,n,s){const i=this.lowerBound,r=this.upperBound,l=n;i.copy(t[0]),l&&l.vmult(i,i),r.copy(i);for(let o=1;o<t.length;o++){let a=t[o];l&&(l.vmult(a,de),a=de),a.x>r.x&&(r.x=a.x),a.x<i.x&&(i.x=a.x),a.y>r.y&&(r.y=a.y),a.y<i.y&&(i.y=a.y),a.z>r.z&&(r.z=a.z),a.z<i.z&&(i.z=a.z)}return e&&(e.vadd(i,i),e.vadd(r,r)),s&&(i.x-=s,i.y-=s,i.z-=s,r.x+=s,r.y+=s,r.z+=s),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return new H().copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,n=this.upperBound,s=t.lowerBound,i=t.upperBound,r=s.x<=n.x&&n.x<=i.x||e.x<=i.x&&i.x<=n.x,l=s.y<=n.y&&n.y<=i.y||e.y<=i.y&&i.y<=n.y,o=s.z<=n.z&&n.z<=i.z||e.z<=i.z&&i.z<=n.z;return r&&l&&o}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,n=this.upperBound,s=t.lowerBound,i=t.upperBound;return e.x<=s.x&&n.x>=i.x&&e.y<=s.y&&n.y>=i.y&&e.z<=s.z&&n.z>=i.z}getCorners(t,e,n,s,i,r,l,o){const a=this.lowerBound,h=this.upperBound;t.copy(a),e.set(h.x,a.y,a.z),n.set(h.x,h.y,a.z),s.set(a.x,h.y,h.z),i.set(h.x,a.y,h.z),r.set(a.x,h.y,a.z),l.set(a.x,a.y,h.z),o.copy(h)}toLocalFrame(t,e){const n=fe,s=n[0],i=n[1],r=n[2],l=n[3],o=n[4],a=n[5],h=n[6],u=n[7];this.getCorners(s,i,r,l,o,a,h,u);for(let c=0;c!==8;c++){const f=n[c];t.pointToLocal(f,f)}return e.setFromPoints(n)}toWorldFrame(t,e){const n=fe,s=n[0],i=n[1],r=n[2],l=n[3],o=n[4],a=n[5],h=n[6],u=n[7];this.getCorners(s,i,r,l,o,a,h,u);for(let c=0;c!==8;c++){const f=n[c];t.pointToWorld(f,f)}return e.setFromPoints(n)}overlapsRay(t){const{direction:e,from:n}=t,s=1/e.x,i=1/e.y,r=1/e.z,l=(this.lowerBound.x-n.x)*s,o=(this.upperBound.x-n.x)*s,a=(this.lowerBound.y-n.y)*i,h=(this.upperBound.y-n.y)*i,u=(this.lowerBound.z-n.z)*r,c=(this.upperBound.z-n.z)*r,f=Math.max(Math.max(Math.min(l,o),Math.min(a,h)),Math.min(u,c)),p=Math.min(Math.min(Math.max(l,o),Math.max(a,h)),Math.max(u,c));return!(p<0||f>p)}}const de=new d,fe=[new d,new d,new d,new d,new d,new d,new d,new d];class pe{constructor(){this.matrix=[]}get(t,e){let{index:n}=t,{index:s}=e;if(s>n){const i=s;s=n,n=i}return this.matrix[(n*(n+1)>>1)+s-1]}set(t,e,n){let{index:s}=t,{index:i}=e;if(i>s){const r=i;i=s,s=r}this.matrix[(s*(s+1)>>1)+i-1]=n?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class Xe{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;return n[t]===void 0&&(n[t]=[]),n[t].includes(e)||n[t].push(e),this}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return!!(n[t]!==void 0&&n[t].includes(e))}hasAnyEventListener(t){return this._listeners===void 0?!1:this._listeners[t]!==void 0}removeEventListener(t,e){if(this._listeners===void 0)return this;const n=this._listeners;if(n[t]===void 0)return this;const s=n[t].indexOf(e);return s!==-1&&n[t].splice(s,1),this}dispatchEvent(t){if(this._listeners===void 0)return this;const n=this._listeners[t.type];if(n!==void 0){t.target=this;for(let s=0,i=n.length;s<i;s++)n[s].call(this,t)}return this}}class G{constructor(t,e,n,s){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),s===void 0&&(s=1),this.x=t,this.y=e,this.z=n,this.w=s}set(t,e,n,s){return this.x=t,this.y=e,this.z=n,this.w=s,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const n=Math.sin(e*.5);return this.x=t.x*n,this.y=t.y*n,this.z=t.z*n,this.w=Math.cos(e*.5),this}toAxisAngle(t){t===void 0&&(t=new d),this.normalize();const e=2*Math.acos(this.w),n=Math.sqrt(1-this.w*this.w);return n<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/n,t.y=this.y/n,t.z=this.z/n),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const n=vn,s=yn;t.tangents(n,s),this.setFromAxisAngle(n,Math.PI)}else{const n=t.cross(e);this.x=n.x,this.y=n.y,this.z=n.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){e===void 0&&(e=new G);const n=this.x,s=this.y,i=this.z,r=this.w,l=t.x,o=t.y,a=t.z,h=t.w;return e.x=n*h+r*l+s*a-i*o,e.y=s*h+r*o+i*l-n*a,e.z=i*h+r*a+n*o-s*l,e.w=r*h-n*l-s*o-i*a,e}inverse(t){t===void 0&&(t=new G);const e=this.x,n=this.y,s=this.z,i=this.w;this.conjugate(t);const r=1/(e*e+n*n+s*s+i*i);return t.x*=r,t.y*=r,t.z*=r,t.w*=r,t}conjugate(t){return t===void 0&&(t=new G),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){e===void 0&&(e=new d);const n=t.x,s=t.y,i=t.z,r=this.x,l=this.y,o=this.z,a=this.w,h=a*n+l*i-o*s,u=a*s+o*n-r*i,c=a*i+r*s-l*n,f=-r*n-l*s-o*i;return e.x=h*a+f*-r+u*-o-c*-l,e.y=u*a+f*-l+c*-r-h*-o,e.z=c*a+f*-o+h*-l-u*-r,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){e===void 0&&(e="YZX");let n,s,i;const r=this.x,l=this.y,o=this.z,a=this.w;switch(e){case"YZX":const h=r*l+o*a;if(h>.499&&(n=2*Math.atan2(r,a),s=Math.PI/2,i=0),h<-.499&&(n=-2*Math.atan2(r,a),s=-Math.PI/2,i=0),n===void 0){const u=r*r,c=l*l,f=o*o;n=Math.atan2(2*l*a-2*r*o,1-2*c-2*f),s=Math.asin(2*h),i=Math.atan2(2*r*a-2*l*o,1-2*u-2*f)}break;default:throw new Error(`Euler order ${e} not supported yet.`)}t.y=n,t.z=s,t.x=i}setFromEuler(t,e,n,s){s===void 0&&(s="XYZ");const i=Math.cos(t/2),r=Math.cos(e/2),l=Math.cos(n/2),o=Math.sin(t/2),a=Math.sin(e/2),h=Math.sin(n/2);return s==="XYZ"?(this.x=o*r*l+i*a*h,this.y=i*a*l-o*r*h,this.z=i*r*h+o*a*l,this.w=i*r*l-o*a*h):s==="YXZ"?(this.x=o*r*l+i*a*h,this.y=i*a*l-o*r*h,this.z=i*r*h-o*a*l,this.w=i*r*l+o*a*h):s==="ZXY"?(this.x=o*r*l-i*a*h,this.y=i*a*l+o*r*h,this.z=i*r*h+o*a*l,this.w=i*r*l-o*a*h):s==="ZYX"?(this.x=o*r*l-i*a*h,this.y=i*a*l+o*r*h,this.z=i*r*h-o*a*l,this.w=i*r*l+o*a*h):s==="YZX"?(this.x=o*r*l+i*a*h,this.y=i*a*l+o*r*h,this.z=i*r*h-o*a*l,this.w=i*r*l-o*a*h):s==="XZY"&&(this.x=o*r*l-i*a*h,this.y=i*a*l-o*r*h,this.z=i*r*h+o*a*l,this.w=i*r*l+o*a*h),this}clone(){return new G(this.x,this.y,this.z,this.w)}slerp(t,e,n){n===void 0&&(n=new G);const s=this.x,i=this.y,r=this.z,l=this.w;let o=t.x,a=t.y,h=t.z,u=t.w,c,f,p,m,y;return f=s*o+i*a+r*h+l*u,f<0&&(f=-f,o=-o,a=-a,h=-h,u=-u),1-f>1e-6?(c=Math.acos(f),p=Math.sin(c),m=Math.sin((1-e)*c)/p,y=Math.sin(e*c)/p):(m=1-e,y=e),n.x=m*s+y*o,n.y=m*i+y*a,n.z=m*r+y*h,n.w=m*l+y*u,n}integrate(t,e,n,s){s===void 0&&(s=new G);const i=t.x*n.x,r=t.y*n.y,l=t.z*n.z,o=this.x,a=this.y,h=this.z,u=this.w,c=e*.5;return s.x+=c*(i*u+r*h-l*a),s.y+=c*(r*u+l*o-i*h),s.z+=c*(l*u+i*a-r*o),s.w+=c*(-i*o-r*a-l*h),s}}const vn=new d,yn=new d,wn={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class F{constructor(t){t===void 0&&(t={}),this.id=F.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=t.collisionResponse?t.collisionResponse:!0,this.collisionFilterGroup=t.collisionFilterGroup!==void 0?t.collisionFilterGroup:1,this.collisionFilterMask=t.collisionFilterMask!==void 0?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,n,s){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}F.idCounter=0;F.types=wn;class O{constructor(t){t===void 0&&(t={}),this.position=new d,this.quaternion=new G,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return O.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return O.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return e===void 0&&(e=new d),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,n,s){return s===void 0&&(s=new d),n.vsub(t,s),e.conjugate(me),me.vmult(s,s),s}static pointToWorldFrame(t,e,n,s){return s===void 0&&(s=new d),e.vmult(n,s),s.vadd(t,s),s}static vectorToWorldFrame(t,e,n){return n===void 0&&(n=new d),t.vmult(e,n),n}static vectorToLocalFrame(t,e,n,s){return s===void 0&&(s=new d),e.w*=-1,e.vmult(n,s),e.w*=-1,s}}const me=new G;class ht extends F{constructor(t){t===void 0&&(t={});const{vertices:e=[],faces:n=[],normals:s=[],axes:i,boundingSphereRadius:r}=t;super({type:F.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=n,this.faceNormals=s,this.faceNormals.length===0&&this.computeNormals(),r?this.boundingSphereRadius=r:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=i?i.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,n=this.uniqueEdges;n.length=0;const s=new d;for(let i=0;i!==t.length;i++){const r=t[i],l=r.length;for(let o=0;o!==l;o++){const a=(o+1)%l;e[r[o]].vsub(e[r[a]],s),s.normalize();let h=!1;for(let u=0;u!==n.length;u++)if(n[u].almostEquals(s)||n[u].almostEquals(s)){h=!0;break}h||n.push(s.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let s=0;s<this.faces[t].length;s++)if(!this.vertices[this.faces[t][s]])throw new Error(`Vertex ${this.faces[t][s]} not found!`);const e=this.faceNormals[t]||new d;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const n=this.vertices[this.faces[t][0]];if(e.dot(n)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let s=0;s<this.faces[t].length;s++)console.warn(`.vertices[${this.faces[t][s]}] = Vec3(${this.vertices[this.faces[t][s]].toString()})`)}}}getFaceNormal(t,e){const n=this.faces[t],s=this.vertices[n[0]],i=this.vertices[n[1]],r=this.vertices[n[2]];ht.computeNormal(s,i,r,e)}static computeNormal(t,e,n,s){const i=new d,r=new d;e.vsub(t,r),n.vsub(e,i),i.cross(r,s),s.isZero()||s.normalize()}clipAgainstHull(t,e,n,s,i,r,l,o,a){const h=new d;let u=-1,c=-Number.MAX_VALUE;for(let p=0;p<n.faces.length;p++){h.copy(n.faceNormals[p]),i.vmult(h,h);const m=h.dot(r);m>c&&(c=m,u=p)}const f=[];for(let p=0;p<n.faces[u].length;p++){const m=n.vertices[n.faces[u][p]],y=new d;y.copy(m),i.vmult(y,y),s.vadd(y,y),f.push(y)}u>=0&&this.clipFaceAgainstHull(r,t,e,f,l,o,a)}findSeparatingAxis(t,e,n,s,i,r,l,o){const a=new d,h=new d,u=new d,c=new d,f=new d,p=new d;let m=Number.MAX_VALUE;const y=this;if(y.uniqueAxes)for(let w=0;w!==y.uniqueAxes.length;w++){n.vmult(y.uniqueAxes[w],a);const v=y.testSepAxis(a,t,e,n,s,i);if(v===!1)return!1;v<m&&(m=v,r.copy(a))}else{const w=l?l.length:y.faces.length;for(let v=0;v<w;v++){const b=l?l[v]:v;a.copy(y.faceNormals[b]),n.vmult(a,a);const E=y.testSepAxis(a,t,e,n,s,i);if(E===!1)return!1;E<m&&(m=E,r.copy(a))}}if(t.uniqueAxes)for(let w=0;w!==t.uniqueAxes.length;w++){i.vmult(t.uniqueAxes[w],h);const v=y.testSepAxis(h,t,e,n,s,i);if(v===!1)return!1;v<m&&(m=v,r.copy(h))}else{const w=o?o.length:t.faces.length;for(let v=0;v<w;v++){const b=o?o[v]:v;h.copy(t.faceNormals[b]),i.vmult(h,h);const E=y.testSepAxis(h,t,e,n,s,i);if(E===!1)return!1;E<m&&(m=E,r.copy(h))}}for(let w=0;w!==y.uniqueEdges.length;w++){n.vmult(y.uniqueEdges[w],c);for(let v=0;v!==t.uniqueEdges.length;v++)if(i.vmult(t.uniqueEdges[v],f),c.cross(f,p),!p.almostZero()){p.normalize();const b=y.testSepAxis(p,t,e,n,s,i);if(b===!1)return!1;b<m&&(m=b,r.copy(p))}}return s.vsub(e,u),u.dot(r)>0&&r.negate(r),!0}testSepAxis(t,e,n,s,i,r){const l=this;ht.project(l,t,n,s,Qt),ht.project(e,t,i,r,Jt);const o=Qt[0],a=Qt[1],h=Jt[0],u=Jt[1];if(o<u||h<a)return!1;const c=o-u,f=h-a;return c<f?c:f}calculateLocalInertia(t,e){const n=new d,s=new d;this.computeLocalAABB(s,n);const i=n.x-s.x,r=n.y-s.y,l=n.z-s.z;e.x=1/12*t*(2*r*2*r+2*l*2*l),e.y=1/12*t*(2*i*2*i+2*l*2*l),e.z=1/12*t*(2*r*2*r+2*i*2*i)}getPlaneConstantOfFace(t){const e=this.faces[t],n=this.faceNormals[t],s=this.vertices[e[0]];return-n.dot(s)}clipFaceAgainstHull(t,e,n,s,i,r,l){const o=new d,a=new d,h=new d,u=new d,c=new d,f=new d,p=new d,m=new d,y=this,w=[],v=s,b=w;let E=-1,x=Number.MAX_VALUE;for(let z=0;z<y.faces.length;z++){o.copy(y.faceNormals[z]),n.vmult(o,o);const M=o.dot(t);M<x&&(x=M,E=z)}if(E<0)return;const A=y.faces[E];A.connectedFaces=[];for(let z=0;z<y.faces.length;z++)for(let M=0;M<y.faces[z].length;M++)A.indexOf(y.faces[z][M])!==-1&&z!==E&&A.connectedFaces.indexOf(z)===-1&&A.connectedFaces.push(z);const B=A.length;for(let z=0;z<B;z++){const M=y.vertices[A[z]],N=y.vertices[A[(z+1)%B]];M.vsub(N,a),h.copy(a),n.vmult(h,h),e.vadd(h,h),u.copy(this.faceNormals[E]),n.vmult(u,u),e.vadd(u,u),h.cross(u,c),c.negate(c),f.copy(M),n.vmult(f,f),e.vadd(f,f);const _=A.connectedFaces[z];p.copy(this.faceNormals[_]);const T=this.getPlaneConstantOfFace(_);m.copy(p),n.vmult(m,m);const P=T-m.dot(e);for(this.clipFaceAgainstPlane(v,b,m,P);v.length;)v.shift();for(;b.length;)v.push(b.shift())}p.copy(this.faceNormals[E]);const S=this.getPlaneConstantOfFace(E);m.copy(p),n.vmult(m,m);const I=S-m.dot(e);for(let z=0;z<v.length;z++){let M=m.dot(v[z])+I;if(M<=i&&(console.log(`clamped: depth=${M} to minDist=${i}`),M=i),M<=r){const N=v[z];if(M<=1e-6){const _={point:N,normal:m,depth:M};l.push(_)}}}}clipFaceAgainstPlane(t,e,n,s){let i,r;const l=t.length;if(l<2)return e;let o=t[t.length-1],a=t[0];i=n.dot(o)+s;for(let h=0;h<l;h++){if(a=t[h],r=n.dot(a)+s,i<0)if(r<0){const u=new d;u.copy(a),e.push(u)}else{const u=new d;o.lerp(a,i/(i-r),u),e.push(u)}else if(r<0){const u=new d;o.lerp(a,i/(i-r),u),e.push(u),e.push(a)}o=a,i=r}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new d);const n=this.vertices,s=this.worldVertices;for(let i=0;i!==this.vertices.length;i++)e.vmult(n[i],s[i]),t.vadd(s[i],s[i]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const n=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let s=0;s<this.vertices.length;s++){const i=n[s];i.x<t.x?t.x=i.x:i.x>e.x&&(e.x=i.x),i.y<t.y?t.y=i.y:i.y>e.y&&(e.y=i.y),i.z<t.z?t.z=i.z:i.z>e.z&&(e.z=i.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new d);const n=this.faceNormals,s=this.worldFaceNormals;for(let i=0;i!==e;i++)t.vmult(n[i],s[i]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let n=0;n!==e.length;n++){const s=e[n].lengthSquared();s>t&&(t=s)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,n,s){const i=this.vertices;let r,l,o,a,h,u,c=new d;for(let f=0;f<i.length;f++){c.copy(i[f]),e.vmult(c,c),t.vadd(c,c);const p=c;(r===void 0||p.x<r)&&(r=p.x),(a===void 0||p.x>a)&&(a=p.x),(l===void 0||p.y<l)&&(l=p.y),(h===void 0||p.y>h)&&(h=p.y),(o===void 0||p.z<o)&&(o=p.z),(u===void 0||p.z>u)&&(u=p.z)}n.set(r,l,o),s.set(a,h,u)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){t===void 0&&(t=new d);const e=this.vertices;for(let n=0;n<e.length;n++)t.vadd(e[n],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const n=this.vertices.length,s=this.vertices;if(e){for(let i=0;i<n;i++){const r=s[i];e.vmult(r,r)}for(let i=0;i<this.faceNormals.length;i++){const r=this.faceNormals[i];e.vmult(r,r)}}if(t)for(let i=0;i<n;i++){const r=s[i];r.vadd(t,r)}}pointIsInside(t){const e=this.vertices,n=this.faces,s=this.faceNormals,i=null,r=new d;this.getAveragePointLocal(r);for(let l=0;l<this.faces.length;l++){let o=s[l];const a=e[n[l][0]],h=new d;t.vsub(a,h);const u=o.dot(h),c=new d;r.vsub(a,c);const f=o.dot(c);if(u<0&&f>0||u>0&&f<0)return!1}return i?1:-1}static project(t,e,n,s,i){const r=t.vertices.length,l=xn;let o=0,a=0;const h=bn,u=t.vertices;h.setZero(),O.vectorToLocalFrame(n,s,e,l),O.pointToLocalFrame(n,s,h,h);const c=h.dot(l);a=o=u[0].dot(l);for(let f=1;f<r;f++){const p=u[f].dot(l);p>o&&(o=p),p<a&&(a=p)}if(a-=c,o-=c,a>o){const f=a;a=o,o=f}i[0]=o,i[1]=a}}const Qt=[],Jt=[],gn=new d,xn=new d,bn=new d;class Ut extends F{constructor(t){super({type:F.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,n=this.halfExtents.z,s=d,i=[new s(-t,-e,-n),new s(t,-e,-n),new s(t,e,-n),new s(-t,e,-n),new s(-t,-e,n),new s(t,-e,n),new s(t,e,n),new s(-t,e,n)],r=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],l=[new s(0,0,1),new s(0,1,0),new s(1,0,0)],o=new ht({vertices:i,faces:r,axes:l});this.convexPolyhedronRepresentation=o,o.material=this.material}calculateLocalInertia(t,e){return e===void 0&&(e=new d),Ut.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,n){const s=t;n.x=1/12*e*(2*s.y*2*s.y+2*s.z*2*s.z),n.y=1/12*e*(2*s.x*2*s.x+2*s.z*2*s.z),n.z=1/12*e*(2*s.y*2*s.y+2*s.x*2*s.x)}getSideNormals(t,e){const n=t,s=this.halfExtents;if(n[0].set(s.x,0,0),n[1].set(0,s.y,0),n[2].set(0,0,s.z),n[3].set(-s.x,0,0),n[4].set(0,-s.y,0),n[5].set(0,0,-s.z),e!==void 0)for(let i=0;i!==n.length;i++)e.vmult(n[i],n[i]);return n}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,n){const s=this.halfExtents,i=[[s.x,s.y,s.z],[-s.x,s.y,s.z],[-s.x,-s.y,s.z],[-s.x,-s.y,-s.z],[s.x,-s.y,-s.z],[s.x,s.y,-s.z],[-s.x,s.y,-s.z],[s.x,-s.y,s.z]];for(let r=0;r<i.length;r++)dt.set(i[r][0],i[r][1],i[r][2]),e.vmult(dt,dt),t.vadd(dt,dt),n(dt.x,dt.y,dt.z)}calculateWorldAABB(t,e,n,s){const i=this.halfExtents;tt[0].set(i.x,i.y,i.z),tt[1].set(-i.x,i.y,i.z),tt[2].set(-i.x,-i.y,i.z),tt[3].set(-i.x,-i.y,-i.z),tt[4].set(i.x,-i.y,-i.z),tt[5].set(i.x,i.y,-i.z),tt[6].set(-i.x,i.y,-i.z),tt[7].set(i.x,-i.y,i.z);const r=tt[0];e.vmult(r,r),t.vadd(r,r),s.copy(r),n.copy(r);for(let l=1;l<8;l++){const o=tt[l];e.vmult(o,o),t.vadd(o,o);const a=o.x,h=o.y,u=o.z;a>s.x&&(s.x=a),h>s.y&&(s.y=h),u>s.z&&(s.z=u),a<n.x&&(n.x=a),h<n.y&&(n.y=h),u<n.z&&(n.z=u)}}}const dt=new d,tt=[new d,new d,new d,new d,new d,new d,new d,new d],le={DYNAMIC:1,STATIC:2,KINEMATIC:4},ae={AWAKE:0,SLEEPY:1,SLEEPING:2};class R extends Xe{constructor(t){t===void 0&&(t={}),super(),this.id=R.idCounter++,this.index=-1,this.world=null,this.vlambda=new d,this.collisionFilterGroup=typeof t.collisionFilterGroup=="number"?t.collisionFilterGroup:1,this.collisionFilterMask=typeof t.collisionFilterMask=="number"?t.collisionFilterMask:-1,this.collisionResponse=typeof t.collisionResponse=="boolean"?t.collisionResponse:!0,this.position=new d,this.previousPosition=new d,this.interpolatedPosition=new d,this.initPosition=new d,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new d,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new d,this.force=new d;const e=typeof t.mass=="number"?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping=typeof t.linearDamping=="number"?t.linearDamping:.01,this.type=e<=0?R.STATIC:R.DYNAMIC,typeof t.type==typeof R.STATIC&&(this.type=t.type),this.allowSleep=typeof t.allowSleep<"u"?t.allowSleep:!0,this.sleepState=R.AWAKE,this.sleepSpeedLimit=typeof t.sleepSpeedLimit<"u"?t.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof t.sleepTimeLimit<"u"?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new d,this.quaternion=new G,this.initQuaternion=new G,this.previousQuaternion=new G,this.interpolatedQuaternion=new G,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new d,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new d,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new d,this.invInertia=new d,this.invInertiaWorld=new J,this.invMassSolve=0,this.invInertiaSolve=new d,this.invInertiaWorldSolve=new J,this.fixedRotation=typeof t.fixedRotation<"u"?t.fixedRotation:!1,this.angularDamping=typeof t.angularDamping<"u"?t.angularDamping:.01,this.linearFactor=new d(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new d(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new H,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new d,this.isTrigger=Boolean(t.isTrigger),t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=R.AWAKE,this.wakeUpAfterNarrowphase=!1,t===R.SLEEPING&&this.dispatchEvent(R.wakeupEvent)}sleep(){this.sleepState=R.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,n=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),s=this.sleepSpeedLimit**2;e===R.AWAKE&&n<s?(this.sleepState=R.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(R.sleepyEvent)):e===R.SLEEPY&&n>s?this.wakeUp():e===R.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(R.sleepEvent))}}updateSolveMassProperties(){this.sleepState===R.SLEEPING||this.type===R.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return e===void 0&&(e=new d),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return e===void 0&&(e=new d),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return e===void 0&&(e=new d),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return e===void 0&&(e=new d),this.quaternion.vmult(t,e),e}addShape(t,e,n){const s=new d,i=new G;return e&&s.copy(e),n&&i.copy(n),this.shapes.push(t),this.shapeOffsets.push(s),this.shapeOrientations.push(i),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return e===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,n=t.length;let s=0;for(let i=0;i!==n;i++){const r=t[i];r.updateBoundingSphereRadius();const l=e[i].length(),o=r.boundingSphereRadius;l+o>s&&(s=l+o)}this.boundingRadius=s}updateAABB(){const t=this.shapes,e=this.shapeOffsets,n=this.shapeOrientations,s=t.length,i=En,r=_n,l=this.quaternion,o=this.aabb,a=zn;for(let h=0;h!==s;h++){const u=t[h];l.vmult(e[h],i),i.vadd(this.position,i),l.mult(n[h],r),u.calculateWorldAABB(i,r,a.lowerBound,a.upperBound),h===0?o.copy(a):o.extend(a)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(!(e.x===e.y&&e.y===e.z&&!t)){const n=An,s=Cn;n.setRotationFromQuaternion(this.quaternion),n.transpose(s),n.scale(e,n),n.mmult(s,this.invInertiaWorld)}}applyForce(t,e){if(e===void 0&&(e=new d),this.type!==R.DYNAMIC)return;this.sleepState===R.SLEEPING&&this.wakeUp();const n=Bn;e.cross(t,n),this.force.vadd(t,this.force),this.torque.vadd(n,this.torque)}applyLocalForce(t,e){if(e===void 0&&(e=new d),this.type!==R.DYNAMIC)return;const n=Tn,s=Sn;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,s),this.applyForce(n,s)}applyTorque(t){this.type===R.DYNAMIC&&(this.sleepState===R.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(e===void 0&&(e=new d),this.type!==R.DYNAMIC)return;this.sleepState===R.SLEEPING&&this.wakeUp();const n=e,s=Pn;s.copy(t),s.scale(this.invMass,s),this.velocity.vadd(s,this.velocity);const i=Nn;n.cross(t,i),this.invInertiaWorld.vmult(i,i),this.angularVelocity.vadd(i,this.angularVelocity)}applyLocalImpulse(t,e){if(e===void 0&&(e=new d),this.type!==R.DYNAMIC)return;const n=In,s=Fn;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,s),this.applyImpulse(n,s)}updateMassProperties(){const t=Rn;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,n=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),Ut.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!n?1/e.x:0,e.y>0&&!n?1/e.y:0,e.z>0&&!n?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const n=new d;return t.vsub(this.position,n),this.angularVelocity.cross(n,e),this.velocity.vadd(e,e),e}integrate(t,e,n){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===R.DYNAMIC||this.type===R.KINEMATIC)||this.sleepState===R.SLEEPING)return;const s=this.velocity,i=this.angularVelocity,r=this.position,l=this.force,o=this.torque,a=this.quaternion,h=this.invMass,u=this.invInertiaWorld,c=this.linearFactor,f=h*t;s.x+=l.x*f*c.x,s.y+=l.y*f*c.y,s.z+=l.z*f*c.z;const p=u.elements,m=this.angularFactor,y=o.x*m.x,w=o.y*m.y,v=o.z*m.z;i.x+=t*(p[0]*y+p[1]*w+p[2]*v),i.y+=t*(p[3]*y+p[4]*w+p[5]*v),i.z+=t*(p[6]*y+p[7]*w+p[8]*v),r.x+=s.x*t,r.y+=s.y*t,r.z+=s.z*t,a.integrate(this.angularVelocity,t,this.angularFactor,a),e&&(n?a.normalizeFast():a.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}R.idCounter=0;R.COLLIDE_EVENT_NAME="collide";R.DYNAMIC=le.DYNAMIC;R.STATIC=le.STATIC;R.KINEMATIC=le.KINEMATIC;R.AWAKE=ae.AWAKE;R.SLEEPY=ae.SLEEPY;R.SLEEPING=ae.SLEEPING;R.wakeupEvent={type:"wakeup"};R.sleepyEvent={type:"sleepy"};R.sleepEvent={type:"sleep"};const En=new d,_n=new G,zn=new H,An=new J,Cn=new J,Mn=new J,Bn=new d,Tn=new d,Sn=new d,Pn=new d,Nn=new d,In=new d,Fn=new d,Rn=new d;class qn{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,n){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return!((t.collisionFilterGroup&e.collisionFilterMask)===0||(e.collisionFilterGroup&t.collisionFilterMask)===0||((t.type&R.STATIC)!==0||t.sleepState===R.SLEEPING)&&((e.type&R.STATIC)!==0||e.sleepState===R.SLEEPING))}intersectionTest(t,e,n,s){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,n,s):this.doBoundingSphereBroadphase(t,e,n,s)}doBoundingSphereBroadphase(t,e,n,s){const i=Ln;e.position.vsub(t.position,i);const r=(t.boundingRadius+e.boundingRadius)**2;i.lengthSquared()<r&&(n.push(t),s.push(e))}doBoundingBoxBroadphase(t,e,n,s){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(n.push(t),s.push(e))}makePairsUnique(t,e){const n=Vn,s=kn,i=On,r=t.length;for(let l=0;l!==r;l++)s[l]=t[l],i[l]=e[l];t.length=0,e.length=0;for(let l=0;l!==r;l++){const o=s[l].id,a=i[l].id,h=o<a?`${o},${a}`:`${a},${o}`;n[h]=l,n.keys.push(h)}for(let l=0;l!==n.keys.length;l++){const o=n.keys.pop(),a=n[o];t.push(s[a]),e.push(i[a]),delete n[o]}}setWorld(t){}static boundingSphereCheck(t,e){const n=new d;t.position.vsub(e.position,n);const s=t.shapes[0],i=e.shapes[0];return Math.pow(s.boundingSphereRadius+i.boundingSphereRadius,2)>n.lengthSquared()}aabbQuery(t,e,n){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const Ln=new d;new d;new G;new d;const Vn={keys:[]},kn=[],On=[];new d;new d;new d;class jn extends qn{constructor(){super()}collisionPairs(t,e,n){const s=t.bodies,i=s.length;let r,l;for(let o=0;o!==i;o++)for(let a=0;a!==o;a++)r=s[o],l=s[a],this.needBroadphaseCollision(r,l)&&this.intersectionTest(r,l,e,n)}aabbQuery(t,e,n){n===void 0&&(n=[]);for(let s=0;s<t.bodies.length;s++){const i=t.bodies[s];i.aabbNeedsUpdate&&i.updateAABB(),i.aabb.overlaps(e)&&n.push(i)}return n}}class Ht{constructor(){this.rayFromWorld=new d,this.rayToWorld=new d,this.hitNormalWorld=new d,this.hitPointWorld=new d,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,n,s,i,r,l){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(s),this.shape=i,this.body=r,this.distance=l}}let Ke,Ze,Qe,Je,tn,en,nn;const ce={CLOSEST:1,ANY:2,ALL:4};Ke=F.types.SPHERE;Ze=F.types.PLANE;Qe=F.types.BOX;Je=F.types.CYLINDER;tn=F.types.CONVEXPOLYHEDRON;en=F.types.HEIGHTFIELD;nn=F.types.TRIMESH;class U{get[Ke](){return this._intersectSphere}get[Ze](){return this._intersectPlane}get[Qe](){return this._intersectBox}get[Je](){return this._intersectConvex}get[tn](){return this._intersectConvex}get[en](){return this._intersectHeightfield}get[nn](){return this._intersectTrimesh}constructor(t,e){t===void 0&&(t=new d),e===void 0&&(e=new d),this.from=t.clone(),this.to=e.clone(),this.direction=new d,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=U.ANY,this.result=new Ht,this.hasHit=!1,this.callback=n=>{}}intersectWorld(t,e){return this.mode=e.mode||U.ANY,this.result=e.result||new Ht,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=typeof e.collisionFilterMask<"u"?e.collisionFilterMask:-1,this.collisionFilterGroup=typeof e.collisionFilterGroup<"u"?e.collisionFilterGroup:-1,this.checkCollisionResponse=typeof e.checkCollisionResponse<"u"?e.checkCollisionResponse:!0,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(ve),te.length=0,t.broadphase.aabbQuery(t,ve,te),this.intersectBodies(te),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const n=this.checkCollisionResponse;if(n&&!t.collisionResponse||(this.collisionFilterGroup&t.collisionFilterMask)===0||(t.collisionFilterGroup&this.collisionFilterMask)===0)return;const s=Wn,i=Hn;for(let r=0,l=t.shapes.length;r<l;r++){const o=t.shapes[r];if(!(n&&!o.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[r],i),t.quaternion.vmult(t.shapeOffsets[r],s),s.vadd(t.position,s),this.intersectShape(o,i,s,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let n=0,s=t.length;!this.result.shouldStop&&n<s;n++)this.intersectBody(t[n])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,n,s){const i=this.from;if(ss(i,this.direction,n)>t.boundingSphereRadius)return;const l=this[t.type];l&&l.call(this,t,e,n,s,t)}_intersectBox(t,e,n,s,i){return this._intersectConvex(t.convexPolyhedronRepresentation,e,n,s,i)}_intersectPlane(t,e,n,s,i){const r=this.from,l=this.to,o=this.direction,a=new d(0,0,1);e.vmult(a,a);const h=new d;r.vsub(n,h);const u=h.dot(a);l.vsub(n,h);const c=h.dot(a);if(u*c>0||r.distanceTo(l)<u)return;const f=a.dot(o);if(Math.abs(f)<this.precision)return;const p=new d,m=new d,y=new d;r.vsub(n,p);const w=-a.dot(p)/f;o.scale(w,m),r.vadd(m,y),this.reportIntersection(a,y,i,s,-1)}getAABB(t){const{lowerBound:e,upperBound:n}=t,s=this.to,i=this.from;e.x=Math.min(s.x,i.x),e.y=Math.min(s.y,i.y),e.z=Math.min(s.z,i.z),n.x=Math.max(s.x,i.x),n.y=Math.max(s.y,i.y),n.z=Math.max(s.z,i.z)}_intersectHeightfield(t,e,n,s,i){t.data,t.elementSize;const r=Gn;r.from.copy(this.from),r.to.copy(this.to),O.pointToLocalFrame(n,e,r.from,r.from),O.pointToLocalFrame(n,e,r.to,r.to),r.updateDirection();const l=Dn;let o,a,h,u;o=a=0,h=u=t.data.length-1;const c=new H;r.getAABB(c),t.getIndexOfPosition(c.lowerBound.x,c.lowerBound.y,l,!0),o=Math.max(o,l[0]),a=Math.max(a,l[1]),t.getIndexOfPosition(c.upperBound.x,c.upperBound.y,l,!0),h=Math.min(h,l[0]+1),u=Math.min(u,l[1]+1);for(let f=o;f<h;f++)for(let p=a;p<u;p++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(f,p,c),!!c.overlapsRay(r)){if(t.getConvexTrianglePillar(f,p,!1),O.pointToWorldFrame(n,e,t.pillarOffset,Nt),this._intersectConvex(t.pillarConvex,e,Nt,s,i,ye),this.result.shouldStop)return;t.getConvexTrianglePillar(f,p,!0),O.pointToWorldFrame(n,e,t.pillarOffset,Nt),this._intersectConvex(t.pillarConvex,e,Nt,s,i,ye)}}}_intersectSphere(t,e,n,s,i){const r=this.from,l=this.to,o=t.radius,a=(l.x-r.x)**2+(l.y-r.y)**2+(l.z-r.z)**2,h=2*((l.x-r.x)*(r.x-n.x)+(l.y-r.y)*(r.y-n.y)+(l.z-r.z)*(r.z-n.z)),u=(r.x-n.x)**2+(r.y-n.y)**2+(r.z-n.z)**2-o**2,c=h**2-4*a*u,f=Yn,p=Un;if(!(c<0))if(c===0)r.lerp(l,c,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,i,s,-1);else{const m=(-h-Math.sqrt(c))/(2*a),y=(-h+Math.sqrt(c))/(2*a);if(m>=0&&m<=1&&(r.lerp(l,m,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,i,s,-1)),this.result.shouldStop)return;y>=0&&y<=1&&(r.lerp(l,y,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,i,s,-1))}}_intersectConvex(t,e,n,s,i,r){const l=$n,o=we,a=r&&r.faceList||null,h=t.faces,u=t.vertices,c=t.faceNormals,f=this.direction,p=this.from,m=this.to,y=p.distanceTo(m),w=a?a.length:h.length,v=this.result;for(let b=0;!v.shouldStop&&b<w;b++){const E=a?a[b]:b,x=h[E],A=c[E],B=e,S=n;o.copy(u[x[0]]),B.vmult(o,o),o.vadd(S,o),o.vsub(p,o),B.vmult(A,l);const I=f.dot(l);if(Math.abs(I)<this.precision)continue;const z=l.dot(o)/I;if(!(z<0)){f.scale(z,Z),Z.vadd(p,Z),Q.copy(u[x[0]]),B.vmult(Q,Q),S.vadd(Q,Q);for(let M=1;!v.shouldStop&&M<x.length-1;M++){et.copy(u[x[M]]),nt.copy(u[x[M+1]]),B.vmult(et,et),B.vmult(nt,nt),S.vadd(et,et),S.vadd(nt,nt);const N=Z.distanceTo(p);!(U.pointInTriangle(Z,Q,et,nt)||U.pointInTriangle(Z,et,Q,nt))||N>y||this.reportIntersection(l,Z,i,s,E)}}}}_intersectTrimesh(t,e,n,s,i,r){const l=Xn,o=es,a=ns,h=we,u=Kn,c=Zn,f=Qn,p=ts,m=Jn,y=t.indices;t.vertices;const w=this.from,v=this.to,b=this.direction;a.position.copy(n),a.quaternion.copy(e),O.vectorToLocalFrame(n,e,b,u),O.pointToLocalFrame(n,e,w,c),O.pointToLocalFrame(n,e,v,f),f.x*=t.scale.x,f.y*=t.scale.y,f.z*=t.scale.z,c.x*=t.scale.x,c.y*=t.scale.y,c.z*=t.scale.z,f.vsub(c,u),u.normalize();const E=c.distanceSquared(f);t.tree.rayQuery(this,a,o);for(let x=0,A=o.length;!this.result.shouldStop&&x!==A;x++){const B=o[x];t.getNormal(B,l),t.getVertex(y[B*3],Q),Q.vsub(c,h);const S=u.dot(l),I=l.dot(h)/S;if(I<0)continue;u.scale(I,Z),Z.vadd(c,Z),t.getVertex(y[B*3+1],et),t.getVertex(y[B*3+2],nt);const z=Z.distanceSquared(c);!(U.pointInTriangle(Z,et,Q,nt)||U.pointInTriangle(Z,Q,et,nt))||z>E||(O.vectorToWorldFrame(e,l,m),O.pointToWorldFrame(n,e,Z,p),this.reportIntersection(m,p,i,s,B))}o.length=0}reportIntersection(t,e,n,s,i){const r=this.from,l=this.to,o=r.distanceTo(e),a=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(a.hitFaceIndex=typeof i<"u"?i:-1,this.mode){case U.ALL:this.hasHit=!0,a.set(r,l,t,e,n,s,o),a.hasHit=!0,this.callback(a);break;case U.CLOSEST:(o<a.distance||!a.hasHit)&&(this.hasHit=!0,a.hasHit=!0,a.set(r,l,t,e,n,s,o));break;case U.ANY:this.hasHit=!0,a.hasHit=!0,a.set(r,l,t,e,n,s,o),a.shouldStop=!0;break}}static pointInTriangle(t,e,n,s){s.vsub(e,vt),n.vsub(e,zt),t.vsub(e,ee);const i=vt.dot(vt),r=vt.dot(zt),l=vt.dot(ee),o=zt.dot(zt),a=zt.dot(ee);let h,u;return(h=o*l-r*a)>=0&&(u=i*a-r*l)>=0&&h+u<i*o-r*r}}U.CLOSEST=ce.CLOSEST;U.ANY=ce.ANY;U.ALL=ce.ALL;const ve=new H,te=[],zt=new d,ee=new d,Wn=new d,Hn=new G,Z=new d,Q=new d,et=new d,nt=new d;new d;new Ht;const ye={faceList:[0]},Nt=new d,Gn=new U,Dn=[],Yn=new d,Un=new d,$n=new d;new d;new d;const we=new d,Xn=new d,Kn=new d,Zn=new d,Qn=new d,Jn=new d,ts=new d;new H;const es=[],ns=new O,vt=new d,It=new d;function ss(g,t,e){e.vsub(g,vt);const n=vt.dot(t);return t.scale(n,It),It.vadd(g,It),e.distanceTo(It)}class sn{static defaults(t,e){t===void 0&&(t={});for(let n in e)n in t||(t[n]=e[n]);return t}}class ge{constructor(){this.spatial=new d,this.rotational=new d}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class Tt{constructor(t,e,n,s){n===void 0&&(n=-1e6),s===void 0&&(s=1e6),this.id=Tt.idCounter++,this.minForce=n,this.maxForce=s,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new ge,this.jacobianElementB=new ge,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,n){const s=e,i=t,r=n;this.a=4/(r*(1+4*s)),this.b=4*s/(1+4*s),this.eps=4/(r*r*i*(1+4*s))}computeB(t,e,n){const s=this.computeGW(),i=this.computeGq(),r=this.computeGiMf();return-i*t-s*e-r*n}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,s=this.bj,i=n.position,r=s.position;return t.spatial.dot(i)+e.spatial.dot(r)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,s=this.bj,i=n.velocity,r=s.velocity,l=n.angularVelocity,o=s.angularVelocity;return t.multiplyVectors(i,l)+e.multiplyVectors(r,o)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,s=this.bj,i=n.vlambda,r=s.vlambda,l=n.wlambda,o=s.wlambda;return t.multiplyVectors(i,l)+e.multiplyVectors(r,o)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,s=this.bj,i=n.force,r=n.torque,l=s.force,o=s.torque,a=n.invMassSolve,h=s.invMassSolve;return i.scale(a,xe),l.scale(h,be),n.invInertiaWorldSolve.vmult(r,Ee),s.invInertiaWorldSolve.vmult(o,_e),t.multiplyVectors(xe,Ee)+e.multiplyVectors(be,_e)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,s=this.bj,i=n.invMassSolve,r=s.invMassSolve,l=n.invInertiaWorldSolve,o=s.invInertiaWorldSolve;let a=i+r;return l.vmult(t.rotational,Ft),a+=Ft.dot(t.rotational),o.vmult(e.rotational,Ft),a+=Ft.dot(e.rotational),a}addToWlambda(t){const e=this.jacobianElementA,n=this.jacobianElementB,s=this.bi,i=this.bj,r=is;s.vlambda.addScaledVector(s.invMassSolve*t,e.spatial,s.vlambda),i.vlambda.addScaledVector(i.invMassSolve*t,n.spatial,i.vlambda),s.invInertiaWorldSolve.vmult(e.rotational,r),s.wlambda.addScaledVector(t,r,s.wlambda),i.invInertiaWorldSolve.vmult(n.rotational,r),i.wlambda.addScaledVector(t,r,i.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}Tt.idCounter=0;const xe=new d,be=new d,Ee=new d,_e=new d,Ft=new d,is=new d;class os extends Tt{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,0,n),this.restitution=0,this.ri=new d,this.rj=new d,this.ni=new d}computeB(t){const e=this.a,n=this.b,s=this.bi,i=this.bj,r=this.ri,l=this.rj,o=rs,a=ls,h=s.velocity,u=s.angularVelocity;s.force,s.torque;const c=i.velocity,f=i.angularVelocity;i.force,i.torque;const p=as,m=this.jacobianElementA,y=this.jacobianElementB,w=this.ni;r.cross(w,o),l.cross(w,a),w.negate(m.spatial),o.negate(m.rotational),y.spatial.copy(w),y.rotational.copy(a),p.copy(i.position),p.vadd(l,p),p.vsub(s.position,p),p.vsub(r,p);const v=w.dot(p),b=this.restitution+1,E=b*c.dot(w)-b*h.dot(w)+f.dot(a)-u.dot(o),x=this.computeGiMf();return-v*e-E*n-t*x}getImpactVelocityAlongNormal(){const t=cs,e=hs,n=us,s=ds,i=fs;return this.bi.position.vadd(this.ri,n),this.bj.position.vadd(this.rj,s),this.bi.getVelocityAtWorldPoint(n,t),this.bj.getVelocityAtWorldPoint(s,e),t.vsub(e,i),this.ni.dot(i)}}const rs=new d,ls=new d,as=new d,cs=new d,hs=new d,us=new d,ds=new d,fs=new d;new d;new d;new d;new d;new d;new d;new d;new d;new d;new d;class ze extends Tt{constructor(t,e,n){super(t,e,-n,n),this.ri=new d,this.rj=new d,this.t=new d}computeB(t){this.a;const e=this.b;this.bi,this.bj;const n=this.ri,s=this.rj,i=ps,r=ms,l=this.t;n.cross(l,i),s.cross(l,r);const o=this.jacobianElementA,a=this.jacobianElementB;l.negate(o.spatial),i.negate(o.rotational),a.spatial.copy(l),a.rotational.copy(r);const h=this.computeGW(),u=this.computeGiMf();return-h*e-t*u}}const ps=new d,ms=new d;class $t{constructor(t,e,n){n=sn.defaults(n,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=$t.idCounter++,this.materials=[t,e],this.friction=n.friction,this.restitution=n.restitution,this.contactEquationStiffness=n.contactEquationStiffness,this.contactEquationRelaxation=n.contactEquationRelaxation,this.frictionEquationStiffness=n.frictionEquationStiffness,this.frictionEquationRelaxation=n.frictionEquationRelaxation}}$t.idCounter=0;class Xt{constructor(t){t===void 0&&(t={});let e="";typeof t=="string"&&(e=t,t={}),this.name=e,this.id=Xt.idCounter++,this.friction=typeof t.friction<"u"?t.friction:-1,this.restitution=typeof t.restitution<"u"?t.restitution:-1}}Xt.idCounter=0;new d;new d;new d;new d;new d;new d;new d;new d;new d;new d;new d;new d;new d;new d;new d;new d;new d;new d;new d;new U;new d;new d;new d;new d(1,0,0),new d(0,1,0),new d(0,0,1);new d;new d;new d;new d;new d;new d;new d;new d;new d;new d;new d;class vs extends F{constructor(t){if(super({type:F.types.SPHERE}),this.radius=t!==void 0?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){e===void 0&&(e=new d);const n=2*t*this.radius*this.radius/5;return e.x=n,e.y=n,e.z=n,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,n,s){const i=this.radius,r=["x","y","z"];for(let l=0;l<r.length;l++){const o=r[l];n[o]=t[o]-i,s[o]=t[o]+i}}}new d;new d;new d;new d;new d;new d;new d;new d;new d;class ys extends ht{constructor(t,e,n,s){if(t===void 0&&(t=1),e===void 0&&(e=1),n===void 0&&(n=1),s===void 0&&(s=8),t<0)throw new Error("The cylinder radiusTop cannot be negative.");if(e<0)throw new Error("The cylinder radiusBottom cannot be negative.");const i=s,r=[],l=[],o=[],a=[],h=[],u=Math.cos,c=Math.sin;r.push(new d(-e*c(0),-n*.5,e*u(0))),a.push(0),r.push(new d(-t*c(0),n*.5,t*u(0))),h.push(1);for(let p=0;p<i;p++){const m=2*Math.PI/i*(p+1),y=2*Math.PI/i*(p+.5);p<i-1?(r.push(new d(-e*c(m),-n*.5,e*u(m))),a.push(2*p+2),r.push(new d(-t*c(m),n*.5,t*u(m))),h.push(2*p+3),o.push([2*p,2*p+1,2*p+3,2*p+2])):o.push([2*p,2*p+1,1,0]),(i%2===1||p<i/2)&&l.push(new d(-c(y),0,u(y)))}o.push(a),l.push(new d(0,1,0));const f=[];for(let p=0;p<h.length;p++)f.push(h[h.length-p-1]);o.push(f),super({vertices:r,faces:o,axes:l}),this.type=F.types.CYLINDER,this.radiusTop=t,this.radiusBottom=e,this.height=n,this.numSegments=s}}class Go extends F{constructor(){super({type:F.types.PLANE}),this.worldNormal=new d,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(t){const e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(t,e){return e===void 0&&(e=new d),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,n,s){ot.set(0,0,1),e.vmult(ot,ot);const i=Number.MAX_VALUE;n.set(-i,-i,-i),s.set(i,i,i),ot.x===1?s.x=t.x:ot.x===-1&&(n.x=t.x),ot.y===1?s.y=t.y:ot.y===-1&&(n.y=t.y),ot.z===1?s.z=t.z:ot.z===-1&&(n.z=t.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const ot=new d;class Do extends F{constructor(t,e){e===void 0&&(e={}),e=sn.defaults(e,{maxValue:null,minValue:null,elementSize:1}),super({type:F.types.HEIGHTFIELD}),this.data=t,this.maxValue=e.maxValue,this.minValue=e.minValue,this.elementSize=e.elementSize,e.minValue===null&&this.updateMinValue(),e.maxValue===null&&this.updateMaxValue(),this.cacheEnabled=!0,this.pillarConvex=new ht,this.pillarOffset=new d,this.updateBoundingSphereRadius(),this._cachedPillars={}}update(){this._cachedPillars={}}updateMinValue(){const t=this.data;let e=t[0][0];for(let n=0;n!==t.length;n++)for(let s=0;s!==t[n].length;s++){const i=t[n][s];i<e&&(e=i)}this.minValue=e}updateMaxValue(){const t=this.data;let e=t[0][0];for(let n=0;n!==t.length;n++)for(let s=0;s!==t[n].length;s++){const i=t[n][s];i>e&&(e=i)}this.maxValue=e}setHeightValueAtIndex(t,e,n){const s=this.data;s[t][e]=n,this.clearCachedConvexTrianglePillar(t,e,!1),t>0&&(this.clearCachedConvexTrianglePillar(t-1,e,!0),this.clearCachedConvexTrianglePillar(t-1,e,!1)),e>0&&(this.clearCachedConvexTrianglePillar(t,e-1,!0),this.clearCachedConvexTrianglePillar(t,e-1,!1)),e>0&&t>0&&this.clearCachedConvexTrianglePillar(t-1,e-1,!0)}getRectMinMax(t,e,n,s,i){i===void 0&&(i=[]);const r=this.data;let l=this.minValue;for(let o=t;o<=n;o++)for(let a=e;a<=s;a++){const h=r[o][a];h>l&&(l=h)}i[0]=this.minValue,i[1]=l}getIndexOfPosition(t,e,n,s){const i=this.elementSize,r=this.data;let l=Math.floor(t/i),o=Math.floor(e/i);return n[0]=l,n[1]=o,s&&(l<0&&(l=0),o<0&&(o=0),l>=r.length-1&&(l=r.length-1),o>=r[0].length-1&&(o=r[0].length-1)),!(l<0||o<0||l>=r.length-1||o>=r[0].length-1)}getTriangleAt(t,e,n,s,i,r){const l=Ae;this.getIndexOfPosition(t,e,l,n);let o=l[0],a=l[1];const h=this.data;n&&(o=Math.min(h.length-2,Math.max(0,o)),a=Math.min(h[0].length-2,Math.max(0,a)));const u=this.elementSize,c=(t/u-o)**2+(e/u-a)**2,f=(t/u-(o+1))**2+(e/u-(a+1))**2,p=c>f;return this.getTriangle(o,a,p,s,i,r),p}getNormalAt(t,e,n,s){const i=bs,r=Es,l=_s,o=zs,a=As;this.getTriangleAt(t,e,n,i,r,l),r.vsub(i,o),l.vsub(i,a),o.cross(a,s),s.normalize()}getAabbAtIndex(t,e,n){let{lowerBound:s,upperBound:i}=n;const r=this.data,l=this.elementSize;s.set(t*l,e*l,r[t][e]),i.set((t+1)*l,(e+1)*l,r[t+1][e+1])}getHeightAt(t,e,n){const s=this.data,i=ws,r=gs,l=xs,o=Ae;this.getIndexOfPosition(t,e,o,n);let a=o[0],h=o[1];n&&(a=Math.min(s.length-2,Math.max(0,a)),h=Math.min(s[0].length-2,Math.max(0,h)));const u=this.getTriangleAt(t,e,n,i,r,l);Cs(t,e,i.x,i.y,r.x,r.y,l.x,l.y,Ce);const c=Ce;return u?s[a+1][h+1]*c.x+s[a][h+1]*c.y+s[a+1][h]*c.z:s[a][h]*c.x+s[a+1][h]*c.y+s[a][h+1]*c.z}getCacheConvexTrianglePillarKey(t,e,n){return`${t}_${e}_${n?1:0}`}getCachedConvexTrianglePillar(t,e,n){return this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,n)]}setCachedConvexTrianglePillar(t,e,n,s,i){this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,n)]={convex:s,offset:i}}clearCachedConvexTrianglePillar(t,e,n){delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,n)]}getTriangle(t,e,n,s,i,r){const l=this.data,o=this.elementSize;n?(s.set((t+1)*o,(e+1)*o,l[t+1][e+1]),i.set(t*o,(e+1)*o,l[t][e+1]),r.set((t+1)*o,e*o,l[t+1][e])):(s.set(t*o,e*o,l[t][e]),i.set((t+1)*o,e*o,l[t+1][e]),r.set(t*o,(e+1)*o,l[t][e+1]))}getConvexTrianglePillar(t,e,n){let s=this.pillarConvex,i=this.pillarOffset;if(this.cacheEnabled){const u=this.getCachedConvexTrianglePillar(t,e,n);if(u){this.pillarConvex=u.convex,this.pillarOffset=u.offset;return}s=new ht,i=new d,this.pillarConvex=s,this.pillarOffset=i}const r=this.data,l=this.elementSize,o=s.faces;s.vertices.length=6;for(let u=0;u<6;u++)s.vertices[u]||(s.vertices[u]=new d);o.length=5;for(let u=0;u<5;u++)o[u]||(o[u]=[]);const a=s.vertices,h=(Math.min(r[t][e],r[t+1][e],r[t][e+1],r[t+1][e+1])-this.minValue)/2+this.minValue;n?(i.set((t+.75)*l,(e+.75)*l,h),a[0].set(.25*l,.25*l,r[t+1][e+1]-h),a[1].set(-.75*l,.25*l,r[t][e+1]-h),a[2].set(.25*l,-.75*l,r[t+1][e]-h),a[3].set(.25*l,.25*l,-Math.abs(h)-1),a[4].set(-.75*l,.25*l,-Math.abs(h)-1),a[5].set(.25*l,-.75*l,-Math.abs(h)-1),o[0][0]=0,o[0][1]=1,o[0][2]=2,o[1][0]=5,o[1][1]=4,o[1][2]=3,o[2][0]=2,o[2][1]=5,o[2][2]=3,o[2][3]=0,o[3][0]=3,o[3][1]=4,o[3][2]=1,o[3][3]=0,o[4][0]=1,o[4][1]=4,o[4][2]=5,o[4][3]=2):(i.set((t+.25)*l,(e+.25)*l,h),a[0].set(-.25*l,-.25*l,r[t][e]-h),a[1].set(.75*l,-.25*l,r[t+1][e]-h),a[2].set(-.25*l,.75*l,r[t][e+1]-h),a[3].set(-.25*l,-.25*l,-Math.abs(h)-1),a[4].set(.75*l,-.25*l,-Math.abs(h)-1),a[5].set(-.25*l,.75*l,-Math.abs(h)-1),o[0][0]=0,o[0][1]=1,o[0][2]=2,o[1][0]=5,o[1][1]=4,o[1][2]=3,o[2][0]=0,o[2][1]=2,o[2][2]=5,o[2][3]=3,o[3][0]=1,o[3][1]=0,o[3][2]=3,o[3][3]=4,o[4][0]=4,o[4][1]=5,o[4][2]=2,o[4][3]=1),s.computeNormals(),s.computeEdges(),s.updateBoundingSphereRadius(),this.setCachedConvexTrianglePillar(t,e,n,s,i)}calculateLocalInertia(t,e){return e===void 0&&(e=new d),e.set(0,0,0),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,n,s){n.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),s.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)}updateBoundingSphereRadius(){const t=this.data,e=this.elementSize;this.boundingSphereRadius=new d(t.length*e,t[0].length*e,Math.max(Math.abs(this.maxValue),Math.abs(this.minValue))).length()}setHeightsFromImage(t,e){const{x:n,z:s,y:i}=e,r=document.createElement("canvas");r.width=t.width,r.height=t.height;const l=r.getContext("2d");l.drawImage(t,0,0);const o=l.getImageData(0,0,t.width,t.height),a=this.data;a.length=0,this.elementSize=Math.abs(n)/o.width;for(let h=0;h<o.height;h++){const u=[];for(let c=0;c<o.width;c++){const f=o.data[(h*o.height+c)*4],p=o.data[(h*o.height+c)*4+1],m=o.data[(h*o.height+c)*4+2],y=(f+p+m)/4/255*s;n<0?u.push(y):u.unshift(y)}i<0?a.unshift(u):a.push(u)}this.updateMaxValue(),this.updateMinValue(),this.update()}}const Ae=[],Ce=new d,ws=new d,gs=new d,xs=new d,bs=new d,Es=new d,_s=new d,zs=new d,As=new d;function Cs(g,t,e,n,s,i,r,l,o){o.x=((i-l)*(g-r)+(r-s)*(t-l))/((i-l)*(e-r)+(r-s)*(n-l)),o.y=((l-n)*(g-r)+(e-r)*(t-l))/((i-l)*(e-r)+(r-s)*(n-l)),o.z=1-o.x-o.y}class st{constructor(t){t===void 0&&(t={}),this.root=t.root||null,this.aabb=t.aabb?t.aabb.clone():new H,this.data=[],this.children=[]}reset(){this.children.length=this.data.length=0}insert(t,e,n){n===void 0&&(n=0);const s=this.data;if(!this.aabb.contains(t))return!1;const i=this.children,r=this.maxDepth||this.root.maxDepth;if(n<r){let l=!1;i.length||(this.subdivide(),l=!0);for(let o=0;o!==8;o++)if(i[o].insert(t,e,n+1))return!0;l&&(i.length=0)}return s.push(e),!0}subdivide(){const t=this.aabb,e=t.lowerBound,n=t.upperBound,s=this.children;s.push(new st({aabb:new H({lowerBound:new d(0,0,0)})}),new st({aabb:new H({lowerBound:new d(1,0,0)})}),new st({aabb:new H({lowerBound:new d(1,1,0)})}),new st({aabb:new H({lowerBound:new d(1,1,1)})}),new st({aabb:new H({lowerBound:new d(0,1,1)})}),new st({aabb:new H({lowerBound:new d(0,0,1)})}),new st({aabb:new H({lowerBound:new d(1,0,1)})}),new st({aabb:new H({lowerBound:new d(0,1,0)})})),n.vsub(e,ft),ft.scale(.5,ft);const i=this.root||this;for(let r=0;r!==8;r++){const l=s[r];l.root=i;const o=l.aabb.lowerBound;o.x*=ft.x,o.y*=ft.y,o.z*=ft.z,o.vadd(e,o),o.vadd(ft,l.aabb.upperBound)}}aabbQuery(t,e){this.data,this.children;const n=[this];for(;n.length;){const s=n.pop();s.aabb.overlaps(t)&&Array.prototype.push.apply(e,s.data),Array.prototype.push.apply(n,s.children)}return e}rayQuery(t,e,n){return t.getAABB(Rt),Rt.toLocalFrame(e,Rt),this.aabbQuery(Rt,n),n}removeEmptyNodes(){for(let t=this.children.length-1;t>=0;t--)this.children[t].removeEmptyNodes(),!this.children[t].children.length&&!this.children[t].data.length&&this.children.splice(t,1)}}class Ms extends st{constructor(t,e){e===void 0&&(e={}),super({root:null,aabb:t}),this.maxDepth=typeof e.maxDepth<"u"?e.maxDepth:8}}const ft=new d,Rt=new H;class Gt extends F{constructor(t,e){super({type:F.types.TRIMESH}),this.vertices=new Float32Array(t),this.indices=new Int16Array(e),this.normals=new Float32Array(e.length),this.aabb=new H,this.edges=null,this.scale=new d(1,1,1),this.tree=new Ms,this.updateEdges(),this.updateNormals(),this.updateAABB(),this.updateBoundingSphereRadius(),this.updateTree()}updateTree(){const t=this.tree;t.reset(),t.aabb.copy(this.aabb);const e=this.scale;t.aabb.lowerBound.x*=1/e.x,t.aabb.lowerBound.y*=1/e.y,t.aabb.lowerBound.z*=1/e.z,t.aabb.upperBound.x*=1/e.x,t.aabb.upperBound.y*=1/e.y,t.aabb.upperBound.z*=1/e.z;const n=new H,s=new d,i=new d,r=new d,l=[s,i,r];for(let o=0;o<this.indices.length/3;o++){const a=o*3;this._getUnscaledVertex(this.indices[a],s),this._getUnscaledVertex(this.indices[a+1],i),this._getUnscaledVertex(this.indices[a+2],r),n.setFromPoints(l),t.insert(n,o)}t.removeEmptyNodes()}getTrianglesInAABB(t,e){qt.copy(t);const n=this.scale,s=n.x,i=n.y,r=n.z,l=qt.lowerBound,o=qt.upperBound;return l.x/=s,l.y/=i,l.z/=r,o.x/=s,o.y/=i,o.z/=r,this.tree.aabbQuery(qt,e)}setScale(t){const e=this.scale.x===this.scale.y&&this.scale.y===this.scale.z,n=t.x===t.y&&t.y===t.z;e&&n||this.updateNormals(),this.scale.copy(t),this.updateAABB(),this.updateBoundingSphereRadius()}updateNormals(){const t=Bs,e=this.normals;for(let n=0;n<this.indices.length/3;n++){const s=n*3,i=this.indices[s],r=this.indices[s+1],l=this.indices[s+2];this.getVertex(i,Te),this.getVertex(r,Se),this.getVertex(l,Pe),Gt.computeNormal(Se,Te,Pe,t),e[s]=t.x,e[s+1]=t.y,e[s+2]=t.z}}updateEdges(){const t={},e=(s,i)=>{const r=s<i?`${s}_${i}`:`${i}_${s}`;t[r]=!0};for(let s=0;s<this.indices.length/3;s++){const i=s*3,r=this.indices[i],l=this.indices[i+1],o=this.indices[i+2];e(r,l),e(l,o),e(o,r)}const n=Object.keys(t);this.edges=new Int16Array(n.length*2);for(let s=0;s<n.length;s++){const i=n[s].split("_");this.edges[2*s]=parseInt(i[0],10),this.edges[2*s+1]=parseInt(i[1],10)}}getEdgeVertex(t,e,n){const s=this.edges[t*2+(e?1:0)];this.getVertex(s,n)}getEdgeVector(t,e){const n=Ts,s=Ss;this.getEdgeVertex(t,0,n),this.getEdgeVertex(t,1,s),s.vsub(n,e)}static computeNormal(t,e,n,s){e.vsub(t,Be),n.vsub(e,Me),Me.cross(Be,s),s.isZero()||s.normalize()}getVertex(t,e){const n=this.scale;return this._getUnscaledVertex(t,e),e.x*=n.x,e.y*=n.y,e.z*=n.z,e}_getUnscaledVertex(t,e){const n=t*3,s=this.vertices;return e.set(s[n],s[n+1],s[n+2])}getWorldVertex(t,e,n,s){return this.getVertex(t,s),O.pointToWorldFrame(e,n,s,s),s}getTriangleVertices(t,e,n,s){const i=t*3;this.getVertex(this.indices[i],e),this.getVertex(this.indices[i+1],n),this.getVertex(this.indices[i+2],s)}getNormal(t,e){const n=t*3;return e.set(this.normals[n],this.normals[n+1],this.normals[n+2])}calculateLocalInertia(t,e){this.computeLocalAABB(pt);const n=pt.upperBound.x-pt.lowerBound.x,s=pt.upperBound.y-pt.lowerBound.y,i=pt.upperBound.z-pt.lowerBound.z;return e.set(1/12*t*(2*s*2*s+2*i*2*i),1/12*t*(2*n*2*n+2*i*2*i),1/12*t*(2*s*2*s+2*n*2*n))}computeLocalAABB(t){const e=t.lowerBound,n=t.upperBound,s=this.vertices.length;this.vertices;const i=Ps;this.getVertex(0,i),e.copy(i),n.copy(i);for(let r=0;r!==s;r++)this.getVertex(r,i),i.x<e.x?e.x=i.x:i.x>n.x&&(n.x=i.x),i.y<e.y?e.y=i.y:i.y>n.y&&(n.y=i.y),i.z<e.z?e.z=i.z:i.z>n.z&&(n.z=i.z)}updateAABB(){this.computeLocalAABB(this.aabb)}updateBoundingSphereRadius(){let t=0;const e=this.vertices,n=new d;for(let s=0,i=e.length/3;s!==i;s++){this.getVertex(s,n);const r=n.lengthSquared();r>t&&(t=r)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,n,s){const i=Ns,r=Is;i.position=t,i.quaternion=e,this.aabb.toWorldFrame(i,r),n.copy(r.lowerBound),s.copy(r.upperBound)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}static createTorus(t,e,n,s,i){t===void 0&&(t=1),e===void 0&&(e=.5),n===void 0&&(n=8),s===void 0&&(s=6),i===void 0&&(i=Math.PI*2);const r=[],l=[];for(let o=0;o<=n;o++)for(let a=0;a<=s;a++){const h=a/s*i,u=o/n*Math.PI*2,c=(t+e*Math.cos(u))*Math.cos(h),f=(t+e*Math.cos(u))*Math.sin(h),p=e*Math.sin(u);r.push(c,f,p)}for(let o=1;o<=n;o++)for(let a=1;a<=s;a++){const h=(s+1)*o+a-1,u=(s+1)*(o-1)+a-1,c=(s+1)*(o-1)+a,f=(s+1)*o+a;l.push(h,u,f),l.push(u,c,f)}return new Gt(r,l)}}const Bs=new d,qt=new H,Ts=new d,Ss=new d,Me=new d,Be=new d,Te=new d,Se=new d,Pe=new d,pt=new H,Ps=new d,Ns=new O,Is=new H;class Fs{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){t.enabled&&!t.bi.isTrigger&&!t.bj.isTrigger&&this.equations.push(t)}removeEquation(t){const e=this.equations,n=e.indexOf(t);n!==-1&&e.splice(n,1)}removeAllEquations(){this.equations.length=0}}class Rs extends Fs{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let n=0;const s=this.iterations,i=this.tolerance*this.tolerance,r=this.equations,l=r.length,o=e.bodies,a=o.length,h=t;let u,c,f,p,m,y;if(l!==0)for(let E=0;E!==a;E++)o[E].updateSolveMassProperties();const w=Ls,v=Vs,b=qs;w.length=l,v.length=l,b.length=l;for(let E=0;E!==l;E++){const x=r[E];b[E]=0,v[E]=x.computeB(h),w[E]=1/x.computeC()}if(l!==0){for(let A=0;A!==a;A++){const B=o[A],S=B.vlambda,I=B.wlambda;S.set(0,0,0),I.set(0,0,0)}for(n=0;n!==s;n++){p=0;for(let A=0;A!==l;A++){const B=r[A];u=v[A],c=w[A],y=b[A],m=B.computeGWlambda(),f=c*(u-m-B.eps*y),y+f<B.minForce?f=B.minForce-y:y+f>B.maxForce&&(f=B.maxForce-y),b[A]+=f,p+=f>0?f:-f,B.addToWlambda(f)}if(p*p<i)break}for(let A=0;A!==a;A++){const B=o[A],S=B.velocity,I=B.angularVelocity;B.vlambda.vmul(B.linearFactor,B.vlambda),S.vadd(B.vlambda,S),B.wlambda.vmul(B.angularFactor,B.wlambda),I.vadd(B.wlambda,I)}let E=r.length;const x=1/h;for(;E--;)r[E].multiplier=b[E]*x}return n}}const qs=[],Ls=[],Vs=[];R.STATIC;class ks{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class Os extends ks{constructor(){super(...arguments),this.type=d}constructObject(){return new d}}const W={sphereSphere:F.types.SPHERE,spherePlane:F.types.SPHERE|F.types.PLANE,boxBox:F.types.BOX|F.types.BOX,sphereBox:F.types.SPHERE|F.types.BOX,planeBox:F.types.PLANE|F.types.BOX,convexConvex:F.types.CONVEXPOLYHEDRON,sphereConvex:F.types.SPHERE|F.types.CONVEXPOLYHEDRON,planeConvex:F.types.PLANE|F.types.CONVEXPOLYHEDRON,boxConvex:F.types.BOX|F.types.CONVEXPOLYHEDRON,sphereHeightfield:F.types.SPHERE|F.types.HEIGHTFIELD,boxHeightfield:F.types.BOX|F.types.HEIGHTFIELD,convexHeightfield:F.types.CONVEXPOLYHEDRON|F.types.HEIGHTFIELD,sphereParticle:F.types.PARTICLE|F.types.SPHERE,planeParticle:F.types.PLANE|F.types.PARTICLE,boxParticle:F.types.BOX|F.types.PARTICLE,convexParticle:F.types.PARTICLE|F.types.CONVEXPOLYHEDRON,cylinderCylinder:F.types.CYLINDER,sphereCylinder:F.types.SPHERE|F.types.CYLINDER,planeCylinder:F.types.PLANE|F.types.CYLINDER,boxCylinder:F.types.BOX|F.types.CYLINDER,convexCylinder:F.types.CONVEXPOLYHEDRON|F.types.CYLINDER,heightfieldCylinder:F.types.HEIGHTFIELD|F.types.CYLINDER,particleCylinder:F.types.PARTICLE|F.types.CYLINDER,sphereTrimesh:F.types.SPHERE|F.types.TRIMESH,planeTrimesh:F.types.PLANE|F.types.TRIMESH};class js{get[W.sphereSphere](){return this.sphereSphere}get[W.spherePlane](){return this.spherePlane}get[W.boxBox](){return this.boxBox}get[W.sphereBox](){return this.sphereBox}get[W.planeBox](){return this.planeBox}get[W.convexConvex](){return this.convexConvex}get[W.sphereConvex](){return this.sphereConvex}get[W.planeConvex](){return this.planeConvex}get[W.boxConvex](){return this.boxConvex}get[W.sphereHeightfield](){return this.sphereHeightfield}get[W.boxHeightfield](){return this.boxHeightfield}get[W.convexHeightfield](){return this.convexHeightfield}get[W.sphereParticle](){return this.sphereParticle}get[W.planeParticle](){return this.planeParticle}get[W.boxParticle](){return this.boxParticle}get[W.convexParticle](){return this.convexParticle}get[W.cylinderCylinder](){return this.convexConvex}get[W.sphereCylinder](){return this.sphereConvex}get[W.planeCylinder](){return this.planeConvex}get[W.boxCylinder](){return this.boxConvex}get[W.convexCylinder](){return this.convexConvex}get[W.heightfieldCylinder](){return this.heightfieldCylinder}get[W.particleCylinder](){return this.particleCylinder}get[W.sphereTrimesh](){return this.sphereTrimesh}get[W.planeTrimesh](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new Os,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,n,s,i,r){let l;this.contactPointPool.length?(l=this.contactPointPool.pop(),l.bi=t,l.bj=e):l=new os(t,e),l.enabled=t.collisionResponse&&e.collisionResponse&&n.collisionResponse&&s.collisionResponse;const o=this.currentContactMaterial;l.restitution=o.restitution,l.setSpookParams(o.contactEquationStiffness,o.contactEquationRelaxation,this.world.dt);const a=n.material||t.material,h=s.material||e.material;return a&&h&&a.restitution>=0&&h.restitution>=0&&(l.restitution=a.restitution*h.restitution),l.si=i||n,l.sj=r||s,l}createFrictionEquationsFromContact(t,e){const n=t.bi,s=t.bj,i=t.si,r=t.sj,l=this.world,o=this.currentContactMaterial;let a=o.friction;const h=i.material||n.material,u=r.material||s.material;if(h&&u&&h.friction>=0&&u.friction>=0&&(a=h.friction*u.friction),a>0){const c=a*(l.frictionGravity||l.gravity).length();let f=n.invMass+s.invMass;f>0&&(f=1/f);const p=this.frictionEquationPool,m=p.length?p.pop():new ze(n,s,c*f),y=p.length?p.pop():new ze(n,s,c*f);return m.bi=y.bi=n,m.bj=y.bj=s,m.minForce=y.minForce=-c*f,m.maxForce=y.maxForce=c*f,m.ri.copy(t.ri),m.rj.copy(t.rj),y.ri.copy(t.ri),y.rj.copy(t.rj),t.ni.tangents(m.t,y.t),m.setSpookParams(o.frictionEquationStiffness,o.frictionEquationRelaxation,l.dt),y.setSpookParams(o.frictionEquationStiffness,o.frictionEquationRelaxation,l.dt),m.enabled=y.enabled=t.enabled,e.push(m,y),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||t===1)return;const n=this.frictionResult[this.frictionResult.length-2],s=this.frictionResult[this.frictionResult.length-1];mt.setZero(),gt.setZero(),xt.setZero();const i=e.bi;e.bj;for(let l=0;l!==t;l++)e=this.result[this.result.length-1-l],e.bi!==i?(mt.vadd(e.ni,mt),gt.vadd(e.ri,gt),xt.vadd(e.rj,xt)):(mt.vsub(e.ni,mt),gt.vadd(e.rj,gt),xt.vadd(e.ri,xt));const r=1/t;gt.scale(r,n.ri),xt.scale(r,n.rj),s.ri.copy(n.ri),s.rj.copy(n.rj),mt.normalize(),mt.tangents(n.t,s.t)}getContacts(t,e,n,s,i,r,l){this.contactPointPool=i,this.frictionEquationPool=l,this.result=s,this.frictionResult=r;const o=Gs,a=Ds,h=Ws,u=Hs;for(let c=0,f=t.length;c!==f;c++){const p=t[c],m=e[c];let y=null;p.material&&m.material&&(y=n.getContactMaterial(p.material,m.material)||null);const w=p.type&R.KINEMATIC&&m.type&R.STATIC||p.type&R.STATIC&&m.type&R.KINEMATIC||p.type&R.KINEMATIC&&m.type&R.KINEMATIC;for(let v=0;v<p.shapes.length;v++){p.quaternion.mult(p.shapeOrientations[v],o),p.quaternion.vmult(p.shapeOffsets[v],h),h.vadd(p.position,h);const b=p.shapes[v];for(let E=0;E<m.shapes.length;E++){m.quaternion.mult(m.shapeOrientations[E],a),m.quaternion.vmult(m.shapeOffsets[E],u),u.vadd(m.position,u);const x=m.shapes[E];if(!(b.collisionFilterMask&x.collisionFilterGroup&&x.collisionFilterMask&b.collisionFilterGroup)||h.distanceTo(u)>b.boundingSphereRadius+x.boundingSphereRadius)continue;let A=null;b.material&&x.material&&(A=n.getContactMaterial(b.material,x.material)||null),this.currentContactMaterial=A||y||n.defaultContactMaterial;const B=b.type|x.type,S=this[B];if(S){let I=!1;b.type<x.type?I=S.call(this,b,x,h,u,o,a,p,m,b,x,w):I=S.call(this,x,b,u,h,a,o,m,p,b,x,w),I&&w&&(n.shapeOverlapKeeper.set(b.id,x.id),n.bodyOverlapKeeper.set(p.id,m.id))}}}}}sphereSphere(t,e,n,s,i,r,l,o,a,h,u){if(u)return n.distanceSquared(s)<(t.radius+e.radius)**2;const c=this.createContactEquation(l,o,t,e,a,h);s.vsub(n,c.ni),c.ni.normalize(),c.ri.copy(c.ni),c.rj.copy(c.ni),c.ri.scale(t.radius,c.ri),c.rj.scale(-e.radius,c.rj),c.ri.vadd(n,c.ri),c.ri.vsub(l.position,c.ri),c.rj.vadd(s,c.rj),c.rj.vsub(o.position,c.rj),this.result.push(c),this.createFrictionEquationsFromContact(c,this.frictionResult)}spherePlane(t,e,n,s,i,r,l,o,a,h,u){const c=this.createContactEquation(l,o,t,e,a,h);if(c.ni.set(0,0,1),r.vmult(c.ni,c.ni),c.ni.negate(c.ni),c.ni.normalize(),c.ni.scale(t.radius,c.ri),n.vsub(s,Lt),c.ni.scale(c.ni.dot(Lt),Ne),Lt.vsub(Ne,c.rj),-Lt.dot(c.ni)<=t.radius){if(u)return!0;const f=c.ri,p=c.rj;f.vadd(n,f),f.vsub(l.position,f),p.vadd(s,p),p.vsub(o.position,p),this.result.push(c),this.createFrictionEquationsFromContact(c,this.frictionResult)}}boxBox(t,e,n,s,i,r,l,o,a,h,u){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,n,s,i,r,l,o,t,e,u)}sphereBox(t,e,n,s,i,r,l,o,a,h,u){const c=this.v3pool,f=yi;n.vsub(s,Vt),e.getSideNormals(f,r);const p=t.radius;let m=!1;const y=gi,w=xi,v=bi;let b=null,E=0,x=0,A=0,B=null;for(let C=0,L=f.length;C!==L&&m===!1;C++){const q=pi;q.copy(f[C]);const k=q.length();q.normalize();const j=Vt.dot(q);if(j<k+p&&j>0){const Y=mi,V=vi;Y.copy(f[(C+1)%3]),V.copy(f[(C+2)%3]);const wt=Y.length(),Pt=V.length();Y.normalize(),V.normalize();const Kt=Vt.dot(Y),Zt=Vt.dot(V);if(Kt<wt&&Kt>-wt&&Zt<Pt&&Zt>-Pt){const he=Math.abs(j-k-p);if((B===null||he<B)&&(B=he,x=Kt,A=Zt,b=k,y.copy(q),w.copy(Y),v.copy(V),E++,u))return!0}}}if(E){m=!0;const C=this.createContactEquation(l,o,t,e,a,h);y.scale(-p,C.ri),C.ni.copy(y),C.ni.negate(C.ni),y.scale(b,y),w.scale(x,w),y.vadd(w,y),v.scale(A,v),y.vadd(v,C.rj),C.ri.vadd(n,C.ri),C.ri.vsub(l.position,C.ri),C.rj.vadd(s,C.rj),C.rj.vsub(o.position,C.rj),this.result.push(C),this.createFrictionEquationsFromContact(C,this.frictionResult)}let S=c.get();const I=wi;for(let C=0;C!==2&&!m;C++)for(let L=0;L!==2&&!m;L++)for(let q=0;q!==2&&!m;q++)if(S.set(0,0,0),C?S.vadd(f[0],S):S.vsub(f[0],S),L?S.vadd(f[1],S):S.vsub(f[1],S),q?S.vadd(f[2],S):S.vsub(f[2],S),s.vadd(S,I),I.vsub(n,I),I.lengthSquared()<p*p){if(u)return!0;m=!0;const k=this.createContactEquation(l,o,t,e,a,h);k.ri.copy(I),k.ri.normalize(),k.ni.copy(k.ri),k.ri.scale(p,k.ri),k.rj.copy(S),k.ri.vadd(n,k.ri),k.ri.vsub(l.position,k.ri),k.rj.vadd(s,k.rj),k.rj.vsub(o.position,k.rj),this.result.push(k),this.createFrictionEquationsFromContact(k,this.frictionResult)}c.release(S),S=null;const z=c.get(),M=c.get(),N=c.get(),_=c.get(),T=c.get(),P=f.length;for(let C=0;C!==P&&!m;C++)for(let L=0;L!==P&&!m;L++)if(C%3!==L%3){f[L].cross(f[C],z),z.normalize(),f[C].vadd(f[L],M),N.copy(n),N.vsub(M,N),N.vsub(s,N);const q=N.dot(z);z.scale(q,_);let k=0;for(;k===C%3||k===L%3;)k++;T.copy(n),T.vsub(_,T),T.vsub(M,T),T.vsub(s,T);const j=Math.abs(q),Y=T.length();if(j<f[k].length()&&Y<p){if(u)return!0;m=!0;const V=this.createContactEquation(l,o,t,e,a,h);M.vadd(_,V.rj),V.rj.copy(V.rj),T.negate(V.ni),V.ni.normalize(),V.ri.copy(V.rj),V.ri.vadd(s,V.ri),V.ri.vsub(n,V.ri),V.ri.normalize(),V.ri.scale(p,V.ri),V.ri.vadd(n,V.ri),V.ri.vsub(l.position,V.ri),V.rj.vadd(s,V.rj),V.rj.vsub(o.position,V.rj),this.result.push(V),this.createFrictionEquationsFromContact(V,this.frictionResult)}}c.release(z,M,N,_,T)}planeBox(t,e,n,s,i,r,l,o,a,h,u){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,n,s,i,r,l,o,t,e,u)}convexConvex(t,e,n,s,i,r,l,o,a,h,u,c,f){const p=qi;if(!(n.distanceTo(s)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,n,i,s,r,p,c,f)){const m=[],y=Li;t.clipAgainstHull(n,i,e,s,r,p,-100,100,m);let w=0;for(let v=0;v!==m.length;v++){if(u)return!0;const b=this.createContactEquation(l,o,t,e,a,h),E=b.ri,x=b.rj;p.negate(b.ni),m[v].normal.negate(y),y.scale(m[v].depth,y),m[v].point.vadd(y,E),x.copy(m[v].point),E.vsub(n,E),x.vsub(s,x),E.vadd(n,E),E.vsub(l.position,E),x.vadd(s,x),x.vsub(o.position,x),this.result.push(b),w++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(b,this.frictionResult)}this.enableFrictionReduction&&w&&this.createFrictionFromAverage(w)}}sphereConvex(t,e,n,s,i,r,l,o,a,h,u){const c=this.v3pool;n.vsub(s,Ei);const f=e.faceNormals,p=e.faces,m=e.vertices,y=t.radius;let w=!1;for(let v=0;v!==m.length;v++){const b=m[v],E=Ci;r.vmult(b,E),s.vadd(E,E);const x=Ai;if(E.vsub(n,x),x.lengthSquared()<y*y){if(u)return!0;w=!0;const A=this.createContactEquation(l,o,t,e,a,h);A.ri.copy(x),A.ri.normalize(),A.ni.copy(A.ri),A.ri.scale(y,A.ri),E.vsub(s,A.rj),A.ri.vadd(n,A.ri),A.ri.vsub(l.position,A.ri),A.rj.vadd(s,A.rj),A.rj.vsub(o.position,A.rj),this.result.push(A),this.createFrictionEquationsFromContact(A,this.frictionResult);return}}for(let v=0,b=p.length;v!==b&&w===!1;v++){const E=f[v],x=p[v],A=Mi;r.vmult(E,A);const B=Bi;r.vmult(m[x[0]],B),B.vadd(s,B);const S=Ti;A.scale(-y,S),n.vadd(S,S);const I=Si;S.vsub(B,I);const z=I.dot(A),M=Pi;if(n.vsub(B,M),z<0&&M.dot(A)>0){const N=[];for(let _=0,T=x.length;_!==T;_++){const P=c.get();r.vmult(m[x[_]],P),s.vadd(P,P),N.push(P)}if(fi(N,A,n)){if(u)return!0;w=!0;const _=this.createContactEquation(l,o,t,e,a,h);A.scale(-y,_.ri),A.negate(_.ni);const T=c.get();A.scale(-z,T);const P=c.get();A.scale(-y,P),n.vsub(s,_.rj),_.rj.vadd(P,_.rj),_.rj.vadd(T,_.rj),_.rj.vadd(s,_.rj),_.rj.vsub(o.position,_.rj),_.ri.vadd(n,_.ri),_.ri.vsub(l.position,_.ri),c.release(T),c.release(P),this.result.push(_),this.createFrictionEquationsFromContact(_,this.frictionResult);for(let C=0,L=N.length;C!==L;C++)c.release(N[C]);return}else for(let _=0;_!==x.length;_++){const T=c.get(),P=c.get();r.vmult(m[x[(_+1)%x.length]],T),r.vmult(m[x[(_+2)%x.length]],P),s.vadd(T,T),s.vadd(P,P);const C=_i;P.vsub(T,C);const L=zi;C.unit(L);const q=c.get(),k=c.get();n.vsub(T,k);const j=k.dot(L);L.scale(j,q),q.vadd(T,q);const Y=c.get();if(q.vsub(n,Y),j>0&&j*j<C.lengthSquared()&&Y.lengthSquared()<y*y){if(u)return!0;const V=this.createContactEquation(l,o,t,e,a,h);q.vsub(s,V.rj),q.vsub(n,V.ni),V.ni.normalize(),V.ni.scale(y,V.ri),V.rj.vadd(s,V.rj),V.rj.vsub(o.position,V.rj),V.ri.vadd(n,V.ri),V.ri.vsub(l.position,V.ri),this.result.push(V),this.createFrictionEquationsFromContact(V,this.frictionResult);for(let wt=0,Pt=N.length;wt!==Pt;wt++)c.release(N[wt]);c.release(T),c.release(P),c.release(q),c.release(Y),c.release(k);return}c.release(T),c.release(P),c.release(q),c.release(Y),c.release(k)}for(let _=0,T=N.length;_!==T;_++)c.release(N[_])}}}planeConvex(t,e,n,s,i,r,l,o,a,h,u){const c=Ni,f=Ii;f.set(0,0,1),i.vmult(f,f);let p=0;const m=Fi;for(let y=0;y!==e.vertices.length;y++)if(c.copy(e.vertices[y]),r.vmult(c,c),s.vadd(c,c),c.vsub(n,m),f.dot(m)<=0){if(u)return!0;const v=this.createContactEquation(l,o,t,e,a,h),b=Ri;f.scale(f.dot(m),b),c.vsub(b,b),b.vsub(n,v.ri),v.ni.copy(f),c.vsub(s,v.rj),v.ri.vadd(n,v.ri),v.ri.vsub(l.position,v.ri),v.rj.vadd(s,v.rj),v.rj.vsub(o.position,v.rj),this.result.push(v),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(v,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,n,s,i,r,l,o,a,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,n,s,i,r,l,o,t,e,u)}sphereHeightfield(t,e,n,s,i,r,l,o,a,h,u){const c=e.data,f=t.radius,p=e.elementSize,m=Xi,y=$i;O.pointToLocalFrame(s,r,n,y);let w=Math.floor((y.x-f)/p)-1,v=Math.ceil((y.x+f)/p)+1,b=Math.floor((y.y-f)/p)-1,E=Math.ceil((y.y+f)/p)+1;if(v<0||E<0||w>c.length||b>c[0].length)return;w<0&&(w=0),v<0&&(v=0),b<0&&(b=0),E<0&&(E=0),w>=c.length&&(w=c.length-1),v>=c.length&&(v=c.length-1),E>=c[0].length&&(E=c[0].length-1),b>=c[0].length&&(b=c[0].length-1);const x=[];e.getRectMinMax(w,b,v,E,x);const A=x[0],B=x[1];if(y.z-f>B||y.z+f<A)return;const S=this.result;for(let I=w;I<v;I++)for(let z=b;z<E;z++){const M=S.length;let N=!1;if(e.getConvexTrianglePillar(I,z,!1),O.pointToWorldFrame(s,r,e.pillarOffset,m),n.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(N=this.sphereConvex(t,e.pillarConvex,n,m,i,r,l,o,t,e,u)),u&&N||(e.getConvexTrianglePillar(I,z,!0),O.pointToWorldFrame(s,r,e.pillarOffset,m),n.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(N=this.sphereConvex(t,e.pillarConvex,n,m,i,r,l,o,t,e,u)),u&&N))return!0;if(S.length-M>2)return}}boxHeightfield(t,e,n,s,i,r,l,o,a,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,n,s,i,r,l,o,t,e,u)}convexHeightfield(t,e,n,s,i,r,l,o,a,h,u){const c=e.data,f=e.elementSize,p=t.boundingSphereRadius,m=Yi,y=Ui,w=Di;O.pointToLocalFrame(s,r,n,w);let v=Math.floor((w.x-p)/f)-1,b=Math.ceil((w.x+p)/f)+1,E=Math.floor((w.y-p)/f)-1,x=Math.ceil((w.y+p)/f)+1;if(b<0||x<0||v>c.length||E>c[0].length)return;v<0&&(v=0),b<0&&(b=0),E<0&&(E=0),x<0&&(x=0),v>=c.length&&(v=c.length-1),b>=c.length&&(b=c.length-1),x>=c[0].length&&(x=c[0].length-1),E>=c[0].length&&(E=c[0].length-1);const A=[];e.getRectMinMax(v,E,b,x,A);const B=A[0],S=A[1];if(!(w.z-p>S||w.z+p<B))for(let I=v;I<b;I++)for(let z=E;z<x;z++){let M=!1;if(e.getConvexTrianglePillar(I,z,!1),O.pointToWorldFrame(s,r,e.pillarOffset,m),n.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(M=this.convexConvex(t,e.pillarConvex,n,m,i,r,l,o,null,null,u,y,null)),u&&M||(e.getConvexTrianglePillar(I,z,!0),O.pointToWorldFrame(s,r,e.pillarOffset,m),n.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(M=this.convexConvex(t,e.pillarConvex,n,m,i,r,l,o,null,null,u,y,null)),u&&M))return!0}}sphereParticle(t,e,n,s,i,r,l,o,a,h,u){const c=ji;if(c.set(0,0,1),s.vsub(n,c),c.lengthSquared()<=t.radius*t.radius){if(u)return!0;const p=this.createContactEquation(o,l,e,t,a,h);c.normalize(),p.rj.copy(c),p.rj.scale(t.radius,p.rj),p.ni.copy(c),p.ni.negate(p.ni),p.ri.set(0,0,0),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}}planeParticle(t,e,n,s,i,r,l,o,a,h,u){const c=Vi;c.set(0,0,1),l.quaternion.vmult(c,c);const f=ki;if(s.vsub(l.position,f),c.dot(f)<=0){if(u)return!0;const m=this.createContactEquation(o,l,e,t,a,h);m.ni.copy(c),m.ni.negate(m.ni),m.ri.set(0,0,0);const y=Oi;c.scale(c.dot(s),y),s.vsub(y,y),m.rj.copy(y),this.result.push(m),this.createFrictionEquationsFromContact(m,this.frictionResult)}}boxParticle(t,e,n,s,i,r,l,o,a,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,n,s,i,r,l,o,t,e,u)}convexParticle(t,e,n,s,i,r,l,o,a,h,u){let c=-1;const f=Hi,p=Gi;let m=null;const y=Wi;if(y.copy(s),y.vsub(n,y),i.conjugate(Ie),Ie.vmult(y,y),t.pointIsInside(y)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(n,i),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(i);for(let w=0,v=t.faces.length;w!==v;w++){const b=[t.worldVertices[t.faces[w][0]]],E=t.worldFaceNormals[w];s.vsub(b[0],Fe);const x=-E.dot(Fe);if(m===null||Math.abs(x)<Math.abs(m)){if(u)return!0;m=x,c=w,f.copy(E)}}if(c!==-1){const w=this.createContactEquation(o,l,e,t,a,h);f.scale(m,p),p.vadd(s,p),p.vsub(n,p),w.rj.copy(p),f.negate(w.ni),w.ri.set(0,0,0);const v=w.ri,b=w.rj;v.vadd(s,v),v.vsub(o.position,v),b.vadd(n,b),b.vsub(l.position,b),this.result.push(w),this.createFrictionEquationsFromContact(w,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,n,s,i,r,l,o,a,h,u){return this.convexHeightfield(e,t,s,n,r,i,o,l,a,h,u)}particleCylinder(t,e,n,s,i,r,l,o,a,h,u){return this.convexParticle(e,t,s,n,r,i,o,l,a,h,u)}sphereTrimesh(t,e,n,s,i,r,l,o,a,h,u){const c=Js,f=ti,p=ei,m=ni,y=si,w=ii,v=ai,b=Qs,E=Ks,x=ci;O.pointToLocalFrame(s,r,n,y);const A=t.radius;v.lowerBound.set(y.x-A,y.y-A,y.z-A),v.upperBound.set(y.x+A,y.y+A,y.z+A),e.getTrianglesInAABB(v,x);const B=Zs,S=t.radius*t.radius;for(let _=0;_<x.length;_++)for(let T=0;T<3;T++)if(e.getVertex(e.indices[x[_]*3+T],B),B.vsub(y,E),E.lengthSquared()<=S){if(b.copy(B),O.pointToWorldFrame(s,r,b,B),B.vsub(n,E),u)return!0;let P=this.createContactEquation(l,o,t,e,a,h);P.ni.copy(E),P.ni.normalize(),P.ri.copy(P.ni),P.ri.scale(t.radius,P.ri),P.ri.vadd(n,P.ri),P.ri.vsub(l.position,P.ri),P.rj.copy(B),P.rj.vsub(o.position,P.rj),this.result.push(P),this.createFrictionEquationsFromContact(P,this.frictionResult)}for(let _=0;_<x.length;_++)for(let T=0;T<3;T++){e.getVertex(e.indices[x[_]*3+T],c),e.getVertex(e.indices[x[_]*3+(T+1)%3],f),f.vsub(c,p),y.vsub(f,w);const P=w.dot(p);y.vsub(c,w);let C=w.dot(p);if(C>0&&P<0&&(y.vsub(c,w),m.copy(p),m.normalize(),C=w.dot(m),m.scale(C,w),w.vadd(c,w),w.distanceTo(y)<t.radius)){if(u)return!0;const q=this.createContactEquation(l,o,t,e,a,h);w.vsub(y,q.ni),q.ni.normalize(),q.ni.scale(t.radius,q.ri),q.ri.vadd(n,q.ri),q.ri.vsub(l.position,q.ri),O.pointToWorldFrame(s,r,w,w),w.vsub(o.position,q.rj),O.vectorToWorldFrame(r,q.ni,q.ni),O.vectorToWorldFrame(r,q.ri,q.ri),this.result.push(q),this.createFrictionEquationsFromContact(q,this.frictionResult)}}const I=oi,z=ri,M=li,N=Xs;for(let _=0,T=x.length;_!==T;_++){e.getTriangleVertices(x[_],I,z,M),e.getNormal(x[_],N),y.vsub(I,w);let P=w.dot(N);if(N.scale(P,w),y.vsub(w,w),P=w.distanceTo(y),U.pointInTriangle(w,I,z,M)&&P<t.radius){if(u)return!0;let C=this.createContactEquation(l,o,t,e,a,h);w.vsub(y,C.ni),C.ni.normalize(),C.ni.scale(t.radius,C.ri),C.ri.vadd(n,C.ri),C.ri.vsub(l.position,C.ri),O.pointToWorldFrame(s,r,w,w),w.vsub(o.position,C.rj),O.vectorToWorldFrame(r,C.ni,C.ni),O.vectorToWorldFrame(r,C.ri,C.ri),this.result.push(C),this.createFrictionEquationsFromContact(C,this.frictionResult)}}x.length=0}planeTrimesh(t,e,n,s,i,r,l,o,a,h,u){const c=new d,f=Ys;f.set(0,0,1),i.vmult(f,f);for(let p=0;p<e.vertices.length/3;p++){e.getVertex(p,c);const m=new d;m.copy(c),O.pointToWorldFrame(s,r,m,c);const y=Us;if(c.vsub(n,y),f.dot(y)<=0){if(u)return!0;const v=this.createContactEquation(l,o,t,e,a,h);v.ni.copy(f);const b=$s;f.scale(y.dot(f),b),c.vsub(b,b),v.ri.copy(b),v.ri.vsub(l.position,v.ri),v.rj.copy(c),v.rj.vsub(o.position,v.rj),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult)}}}}const mt=new d,gt=new d,xt=new d,Ws=new d,Hs=new d,Gs=new G,Ds=new G,Ys=new d,Us=new d,$s=new d,Xs=new d,Ks=new d;new d;const Zs=new d,Qs=new d,Js=new d,ti=new d,ei=new d,ni=new d,si=new d,ii=new d,oi=new d,ri=new d,li=new d,ai=new H,ci=[],Lt=new d,Ne=new d,hi=new d,ui=new d,di=new d;function fi(g,t,e){let n=null;const s=g.length;for(let i=0;i!==s;i++){const r=g[i],l=hi;g[(i+1)%s].vsub(r,l);const o=ui;l.cross(t,o);const a=di;e.vsub(r,a);const h=o.dot(a);if(n===null||h>0&&n===!0||h<=0&&n===!1){n===null&&(n=h>0);continue}else return!1}return!0}const Vt=new d,pi=new d,mi=new d,vi=new d,yi=[new d,new d,new d,new d,new d,new d],wi=new d,gi=new d,xi=new d,bi=new d,Ei=new d,_i=new d,zi=new d,Ai=new d,Ci=new d,Mi=new d,Bi=new d,Ti=new d,Si=new d,Pi=new d;new d;new d;const Ni=new d,Ii=new d,Fi=new d,Ri=new d,qi=new d,Li=new d,Vi=new d,ki=new d,Oi=new d,ji=new d,Ie=new G,Wi=new d;new d;const Hi=new d,Fe=new d,Gi=new d,Di=new d,Yi=new d,Ui=[0],$i=new d,Xi=new d;class Re{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const n=e;e=t,t=n}return t<<16|e}set(t,e){const n=this.getKey(t,e),s=this.current;let i=0;for(;n>s[i];)i++;if(n!==s[i]){for(let r=s.length-1;r>=i;r--)s[r+1]=s[r];s[i]=n}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const n=this.current,s=this.previous,i=n.length,r=s.length;let l=0;for(let o=0;o<i;o++){let a=!1;const h=n[o];for(;h>s[l];)l++;a=h===s[l],a||qe(t,h)}l=0;for(let o=0;o<r;o++){let a=!1;const h=s[o];for(;h>n[l];)l++;a=n[l]===h,a||qe(e,h)}}}function qe(g,t){g.push((t&4294901760)>>16,t&65535)}const ne=(g,t)=>g<t?`${g}-${t}`:`${t}-${g}`;class Ki{constructor(){this.data={keys:[]}}get(t,e){const n=ne(t,e);return this.data[n]}set(t,e,n){const s=ne(t,e);this.get(t,e)||this.data.keys.push(s),this.data[s]=n}delete(t,e){const n=ne(t,e),s=this.data.keys.indexOf(n);s!==-1&&this.data.keys.splice(s,1),delete this.data[n]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){const n=e.pop();delete t[n]}}}class Yo extends Xe{constructor(t){t===void 0&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=t.quatNormalizeSkip!==void 0?t.quatNormalizeSkip:0,this.quatNormalizeFast=t.quatNormalizeFast!==void 0?t.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new d,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new d,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=t.broadphase!==void 0?t.broadphase:new jn,this.bodies=[],this.hasActiveBodies=!1,this.solver=t.solver!==void 0?t.solver:new Rs,this.constraints=[],this.narrowphase=new js(this),this.collisionMatrix=new pe,this.collisionMatrixPrevious=new pe,this.bodyOverlapKeeper=new Re,this.shapeOverlapKeeper=new Re,this.contactmaterials=[],this.contactMaterialTable=new Ki,this.defaultMaterial=new Xt("default"),this.defaultContactMaterial=new $t(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);e!==-1&&this.constraints.splice(e,1)}rayTest(t,e,n){n instanceof Ht?this.raycastClosest(t,e,{skipBackfaces:!0},n):this.raycastAll(t,e,{skipBackfaces:!0},n)}raycastAll(t,e,n,s){return n===void 0&&(n={}),n.mode=U.ALL,n.from=t,n.to=e,n.callback=s,se.intersectWorld(this,n)}raycastAny(t,e,n,s){return n===void 0&&(n={}),n.mode=U.ANY,n.from=t,n.to=e,n.result=s,se.intersectWorld(this,n)}raycastClosest(t,e,n,s){return n===void 0&&(n={}),n.mode=U.CLOSEST,n.from=t,n.to=e,n.result=s,se.intersectWorld(this,n)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof R&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,n=this.bodies,s=n.indexOf(t);if(s!==-1){n.splice(s,1);for(let i=0;i!==n.length;i++)n[i].index=i;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let n=0;n<e.length;n++){const s=e[n].shapes;for(let i=0;i<s.length;i++){const r=s[i];if(r.id===t)return r}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);e!==-1&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){t===void 0&&(t=1/60),e===void 0&&(e=10);const n=$.now()/1e3;if(!this.lastCallTime)this.step(t,void 0,e);else{const s=n-this.lastCallTime;this.step(t,s,e)}this.lastCallTime=n}step(t,e,n){if(n===void 0&&(n=10),e===void 0)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const s=$.now();let i=0;for(;this.accumulator>=t&&i<n&&(this.internalStep(t),this.accumulator-=t,i++,!($.now()-s>t*1e3)););this.accumulator=this.accumulator%t;const r=this.accumulator/t;for(let l=0;l!==this.bodies.length;l++){const o=this.bodies[l];o.previousPosition.lerp(o.position,r,o.interpolatedPosition),o.previousQuaternion.slerp(o.quaternion,r,o.interpolatedQuaternion),o.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,n=eo,s=no,i=this.bodies.length,r=this.bodies,l=this.solver,o=this.gravity,a=this.doProfiling,h=this.profile,u=R.DYNAMIC;let c=-1/0;const f=this.constraints,p=to;o.length();const m=o.x,y=o.y,w=o.z;let v=0;for(a&&(c=$.now()),v=0;v!==i;v++){const _=r[v];if(_.type===u){const T=_.force,P=_.mass;T.x+=P*m,T.y+=P*y,T.z+=P*w}}for(let _=0,T=this.subsystems.length;_!==T;_++)this.subsystems[_].update();a&&(c=$.now()),n.length=0,s.length=0,this.broadphase.collisionPairs(this,n,s),a&&(h.broadphase=$.now()-c);let b=f.length;for(v=0;v!==b;v++){const _=f[v];if(!_.collideConnected)for(let T=n.length-1;T>=0;T-=1)(_.bodyA===n[T]&&_.bodyB===s[T]||_.bodyB===n[T]&&_.bodyA===s[T])&&(n.splice(T,1),s.splice(T,1))}this.collisionMatrixTick(),a&&(c=$.now());const E=Ji,x=e.length;for(v=0;v!==x;v++)E.push(e[v]);e.length=0;const A=this.frictionEquations.length;for(v=0;v!==A;v++)p.push(this.frictionEquations[v]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(n,s,this,e,E,this.frictionEquations,p),a&&(h.narrowphase=$.now()-c),a&&(c=$.now()),v=0;v<this.frictionEquations.length;v++)l.addEquation(this.frictionEquations[v]);const B=e.length;for(let _=0;_!==B;_++){const T=e[_],P=T.bi,C=T.bj,L=T.si,q=T.sj;let k;if(P.material&&C.material?k=this.getContactMaterial(P.material,C.material)||this.defaultContactMaterial:k=this.defaultContactMaterial,k.friction,P.material&&C.material&&(P.material.friction>=0&&C.material.friction>=0&&P.material.friction*C.material.friction,P.material.restitution>=0&&C.material.restitution>=0&&(T.restitution=P.material.restitution*C.material.restitution)),l.addEquation(T),P.allowSleep&&P.type===R.DYNAMIC&&P.sleepState===R.SLEEPING&&C.sleepState===R.AWAKE&&C.type!==R.STATIC){const j=C.velocity.lengthSquared()+C.angularVelocity.lengthSquared(),Y=C.sleepSpeedLimit**2;j>=Y*2&&(P.wakeUpAfterNarrowphase=!0)}if(C.allowSleep&&C.type===R.DYNAMIC&&C.sleepState===R.SLEEPING&&P.sleepState===R.AWAKE&&P.type!==R.STATIC){const j=P.velocity.lengthSquared()+P.angularVelocity.lengthSquared(),Y=P.sleepSpeedLimit**2;j>=Y*2&&(C.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(P,C,!0),this.collisionMatrixPrevious.get(P,C)||(At.body=C,At.contact=T,P.dispatchEvent(At),At.body=P,C.dispatchEvent(At)),this.bodyOverlapKeeper.set(P.id,C.id),this.shapeOverlapKeeper.set(L.id,q.id)}for(this.emitContactEvents(),a&&(h.makeContactConstraints=$.now()-c,c=$.now()),v=0;v!==i;v++){const _=r[v];_.wakeUpAfterNarrowphase&&(_.wakeUp(),_.wakeUpAfterNarrowphase=!1)}for(b=f.length,v=0;v!==b;v++){const _=f[v];_.update();for(let T=0,P=_.equations.length;T!==P;T++){const C=_.equations[T];l.addEquation(C)}}l.solve(t,this),a&&(h.solve=$.now()-c),l.removeAllEquations();const S=Math.pow;for(v=0;v!==i;v++){const _=r[v];if(_.type&u){const T=S(1-_.linearDamping,t),P=_.velocity;P.scale(T,P);const C=_.angularVelocity;if(C){const L=S(1-_.angularDamping,t);C.scale(L,C)}}}this.dispatchEvent(Qi),a&&(c=$.now());const z=this.stepnumber%(this.quatNormalizeSkip+1)===0,M=this.quatNormalizeFast;for(v=0;v!==i;v++)r[v].integrate(t,z,M);this.clearForces(),this.broadphase.dirty=!0,a&&(h.integrate=$.now()-c),this.stepnumber+=1,this.dispatchEvent(Zi);let N=!0;if(this.allowSleep)for(N=!1,v=0;v!==i;v++){const _=r[v];_.sleepTick(this.time),_.sleepState!==R.SLEEPING&&(N=!0)}this.hasActiveBodies=N}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(rt,lt),t){for(let i=0,r=rt.length;i<r;i+=2)Ct.bodyA=this.getBodyById(rt[i]),Ct.bodyB=this.getBodyById(rt[i+1]),this.dispatchEvent(Ct);Ct.bodyA=Ct.bodyB=null}if(e){for(let i=0,r=lt.length;i<r;i+=2)Mt.bodyA=this.getBodyById(lt[i]),Mt.bodyB=this.getBodyById(lt[i+1]),this.dispatchEvent(Mt);Mt.bodyA=Mt.bodyB=null}rt.length=lt.length=0;const n=this.hasAnyEventListener("beginShapeContact"),s=this.hasAnyEventListener("endShapeContact");if((n||s)&&this.shapeOverlapKeeper.getDiff(rt,lt),n){for(let i=0,r=rt.length;i<r;i+=2){const l=this.getShapeById(rt[i]),o=this.getShapeById(rt[i+1]);at.shapeA=l,at.shapeB=o,l&&(at.bodyA=l.body),o&&(at.bodyB=o.body),this.dispatchEvent(at)}at.bodyA=at.bodyB=at.shapeA=at.shapeB=null}if(s){for(let i=0,r=lt.length;i<r;i+=2){const l=this.getShapeById(lt[i]),o=this.getShapeById(lt[i+1]);ct.shapeA=l,ct.shapeB=o,l&&(ct.bodyA=l.body),o&&(ct.bodyB=o.body),this.dispatchEvent(ct)}ct.bodyA=ct.bodyB=ct.shapeA=ct.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let n=0;n!==e;n++){const s=t[n];s.force,s.torque,s.force.set(0,0,0),s.torque.set(0,0,0)}}}new H;const se=new U,$=globalThis.performance||{};if(!$.now){let g=Date.now();$.timing&&$.timing.navigationStart&&(g=$.timing.navigationStart),$.now=()=>Date.now()-g}new d;const Zi={type:"postStep"},Qi={type:"preStep"},At={type:R.COLLIDE_EVENT_NAME,body:null,contact:null},Ji=[],to=[],eo=[],no=[],rt=[],lt=[],Ct={type:"beginContact",bodyA:null,bodyB:null},Mt={type:"endContact",bodyA:null,bodyB:null},at={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},ct={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},ut=11102230246251565e-32,X=134217729,so=(3+8*ut)*ut;function ie(g,t,e,n,s){let i,r,l,o,a=t[0],h=n[0],u=0,c=0;h>a==h>-a?(i=a,a=t[++u]):(i=h,h=n[++c]);let f=0;if(u<g&&c<e)for(h>a==h>-a?(r=a+i,l=i-(r-a),a=t[++u]):(r=h+i,l=i-(r-h),h=n[++c]),i=r,l!==0&&(s[f++]=l);u<g&&c<e;)h>a==h>-a?(r=i+a,o=r-i,l=i-(r-o)+(a-o),a=t[++u]):(r=i+h,o=r-i,l=i-(r-o)+(h-o),h=n[++c]),i=r,l!==0&&(s[f++]=l);for(;u<g;)r=i+a,o=r-i,l=i-(r-o)+(a-o),a=t[++u],i=r,l!==0&&(s[f++]=l);for(;c<e;)r=i+h,o=r-i,l=i-(r-o)+(h-o),h=n[++c],i=r,l!==0&&(s[f++]=l);return(i!==0||f===0)&&(s[f++]=i),f}function io(g,t){let e=t[0];for(let n=1;n<g;n++)e+=t[n];return e}function St(g){return new Float64Array(g)}const oo=(3+16*ut)*ut,ro=(2+12*ut)*ut,lo=(9+64*ut)*ut*ut,bt=St(4),Le=St(8),Ve=St(12),ke=St(16),K=St(4);function ao(g,t,e,n,s,i,r){let l,o,a,h,u,c,f,p,m,y,w,v,b,E,x,A,B,S;const I=g-s,z=e-s,M=t-i,N=n-i;E=I*N,c=X*I,f=c-(c-I),p=I-f,c=X*N,m=c-(c-N),y=N-m,x=p*y-(E-f*m-p*m-f*y),A=M*z,c=X*M,f=c-(c-M),p=M-f,c=X*z,m=c-(c-z),y=z-m,B=p*y-(A-f*m-p*m-f*y),w=x-B,u=x-w,bt[0]=x-(w+u)+(u-B),v=E+w,u=v-E,b=E-(v-u)+(w-u),w=b-A,u=b-w,bt[1]=b-(w+u)+(u-A),S=v+w,u=S-v,bt[2]=v-(S-u)+(w-u),bt[3]=S;let _=io(4,bt),T=ro*r;if(_>=T||-_>=T||(u=g-I,l=g-(I+u)+(u-s),u=e-z,a=e-(z+u)+(u-s),u=t-M,o=t-(M+u)+(u-i),u=n-N,h=n-(N+u)+(u-i),l===0&&o===0&&a===0&&h===0)||(T=lo*r+so*Math.abs(_),_+=I*h+N*l-(M*a+z*o),_>=T||-_>=T))return _;E=l*N,c=X*l,f=c-(c-l),p=l-f,c=X*N,m=c-(c-N),y=N-m,x=p*y-(E-f*m-p*m-f*y),A=o*z,c=X*o,f=c-(c-o),p=o-f,c=X*z,m=c-(c-z),y=z-m,B=p*y-(A-f*m-p*m-f*y),w=x-B,u=x-w,K[0]=x-(w+u)+(u-B),v=E+w,u=v-E,b=E-(v-u)+(w-u),w=b-A,u=b-w,K[1]=b-(w+u)+(u-A),S=v+w,u=S-v,K[2]=v-(S-u)+(w-u),K[3]=S;const P=ie(4,bt,4,K,Le);E=I*h,c=X*I,f=c-(c-I),p=I-f,c=X*h,m=c-(c-h),y=h-m,x=p*y-(E-f*m-p*m-f*y),A=M*a,c=X*M,f=c-(c-M),p=M-f,c=X*a,m=c-(c-a),y=a-m,B=p*y-(A-f*m-p*m-f*y),w=x-B,u=x-w,K[0]=x-(w+u)+(u-B),v=E+w,u=v-E,b=E-(v-u)+(w-u),w=b-A,u=b-w,K[1]=b-(w+u)+(u-A),S=v+w,u=S-v,K[2]=v-(S-u)+(w-u),K[3]=S;const C=ie(P,Le,4,K,Ve);E=l*h,c=X*l,f=c-(c-l),p=l-f,c=X*h,m=c-(c-h),y=h-m,x=p*y-(E-f*m-p*m-f*y),A=o*a,c=X*o,f=c-(c-o),p=o-f,c=X*a,m=c-(c-a),y=a-m,B=p*y-(A-f*m-p*m-f*y),w=x-B,u=x-w,K[0]=x-(w+u)+(u-B),v=E+w,u=v-E,b=E-(v-u)+(w-u),w=b-A,u=b-w,K[1]=b-(w+u)+(u-A),S=v+w,u=S-v,K[2]=v-(S-u)+(w-u),K[3]=S;const L=ie(C,Ve,4,K,ke);return ke[L-1]}function kt(g,t,e,n,s,i){const r=(t-i)*(e-s),l=(g-s)*(n-i),o=r-l;if(r===0||l===0||r>0!=l>0)return o;const a=Math.abs(r+l);return Math.abs(o)>=oo*a?o:-ao(g,t,e,n,s,i,a)}const Oe=Math.pow(2,-52),Ot=new Uint32Array(512);class Dt{static from(t,e=po,n=mo){const s=t.length,i=new Float64Array(s*2);for(let r=0;r<s;r++){const l=t[r];i[2*r]=e(l),i[2*r+1]=n(l)}return new Dt(i)}constructor(t){const e=t.length>>1;if(e>0&&typeof t[0]!="number")throw new Error("Expected coords to contain numbers.");this.coords=t;const n=Math.max(2*e-5,0);this._triangles=new Uint32Array(n*3),this._halfedges=new Int32Array(n*3),this._hashSize=Math.ceil(Math.sqrt(e)),this._hullPrev=new Uint32Array(e),this._hullNext=new Uint32Array(e),this._hullTri=new Uint32Array(e),this._hullHash=new Int32Array(this._hashSize).fill(-1),this._ids=new Uint32Array(e),this._dists=new Float64Array(e),this.update()}update(){const{coords:t,_hullPrev:e,_hullNext:n,_hullTri:s,_hullHash:i}=this,r=t.length>>1;let l=1/0,o=1/0,a=-1/0,h=-1/0;for(let z=0;z<r;z++){const M=t[2*z],N=t[2*z+1];M<l&&(l=M),N<o&&(o=N),M>a&&(a=M),N>h&&(h=N),this._ids[z]=z}const u=(l+a)/2,c=(o+h)/2;let f=1/0,p,m,y;for(let z=0;z<r;z++){const M=oe(u,c,t[2*z],t[2*z+1]);M<f&&(p=z,f=M)}const w=t[2*p],v=t[2*p+1];f=1/0;for(let z=0;z<r;z++){if(z===p)continue;const M=oe(w,v,t[2*z],t[2*z+1]);M<f&&M>0&&(m=z,f=M)}let b=t[2*m],E=t[2*m+1],x=1/0;for(let z=0;z<r;z++){if(z===p||z===m)continue;const M=uo(w,v,b,E,t[2*z],t[2*z+1]);M<x&&(y=z,x=M)}let A=t[2*y],B=t[2*y+1];if(x===1/0){for(let N=0;N<r;N++)this._dists[N]=t[2*N]-t[0]||t[2*N+1]-t[1];_t(this._ids,this._dists,0,r-1);const z=new Uint32Array(r);let M=0;for(let N=0,_=-1/0;N<r;N++){const T=this._ids[N];this._dists[T]>_&&(z[M++]=T,_=this._dists[T])}this.hull=z.subarray(0,M),this.triangles=new Uint32Array(0),this.halfedges=new Uint32Array(0);return}if(kt(w,v,b,E,A,B)<0){const z=m,M=b,N=E;m=y,b=A,E=B,y=z,A=M,B=N}const S=fo(w,v,b,E,A,B);this._cx=S.x,this._cy=S.y;for(let z=0;z<r;z++)this._dists[z]=oe(t[2*z],t[2*z+1],S.x,S.y);_t(this._ids,this._dists,0,r-1),this._hullStart=p;let I=3;n[p]=e[y]=m,n[m]=e[p]=y,n[y]=e[m]=p,s[p]=0,s[m]=1,s[y]=2,i.fill(-1),i[this._hashKey(w,v)]=p,i[this._hashKey(b,E)]=m,i[this._hashKey(A,B)]=y,this.trianglesLen=0,this._addTriangle(p,m,y,-1,-1,-1);for(let z=0,M,N;z<this._ids.length;z++){const _=this._ids[z],T=t[2*_],P=t[2*_+1];if(z>0&&Math.abs(T-M)<=Oe&&Math.abs(P-N)<=Oe||(M=T,N=P,_===p||_===m||_===y))continue;let C=0;for(let Y=0,V=this._hashKey(T,P);Y<this._hashSize&&(C=i[(V+Y)%this._hashSize],!(C!==-1&&C!==n[C]));Y++);C=e[C];let L=C,q;for(;q=n[L],kt(T,P,t[2*L],t[2*L+1],t[2*q],t[2*q+1])>=0;)if(L=q,L===C){L=-1;break}if(L===-1)continue;let k=this._addTriangle(L,_,n[L],-1,-1,s[L]);s[_]=this._legalize(k+2),s[L]=k,I++;let j=n[L];for(;q=n[j],kt(T,P,t[2*j],t[2*j+1],t[2*q],t[2*q+1])<0;)k=this._addTriangle(j,_,q,s[_],-1,s[j]),s[_]=this._legalize(k+2),n[j]=j,I--,j=q;if(L===C)for(;q=e[L],kt(T,P,t[2*q],t[2*q+1],t[2*L],t[2*L+1])<0;)k=this._addTriangle(q,_,L,-1,s[L],s[q]),this._legalize(k+2),s[q]=k,n[L]=L,I--,L=q;this._hullStart=e[_]=L,n[L]=e[j]=_,n[_]=j,i[this._hashKey(T,P)]=_,i[this._hashKey(t[2*L],t[2*L+1])]=L}this.hull=new Uint32Array(I);for(let z=0,M=this._hullStart;z<I;z++)this.hull[z]=M,M=n[M];this.triangles=this._triangles.subarray(0,this.trianglesLen),this.halfedges=this._halfedges.subarray(0,this.trianglesLen)}_hashKey(t,e){return Math.floor(co(t-this._cx,e-this._cy)*this._hashSize)%this._hashSize}_legalize(t){const{_triangles:e,_halfedges:n,coords:s}=this;let i=0,r=0;for(;;){const l=n[t],o=t-t%3;if(r=o+(t+2)%3,l===-1){if(i===0)break;t=Ot[--i];continue}const a=l-l%3,h=o+(t+1)%3,u=a+(l+2)%3,c=e[r],f=e[t],p=e[h],m=e[u];if(ho(s[2*c],s[2*c+1],s[2*f],s[2*f+1],s[2*p],s[2*p+1],s[2*m],s[2*m+1])){e[t]=m,e[l]=c;const w=n[u];if(w===-1){let b=this._hullStart;do{if(this._hullTri[b]===u){this._hullTri[b]=t;break}b=this._hullPrev[b]}while(b!==this._hullStart)}this._link(t,w),this._link(l,n[r]),this._link(r,u);const v=a+(l+1)%3;i<Ot.length&&(Ot[i++]=v)}else{if(i===0)break;t=Ot[--i]}}return r}_link(t,e){this._halfedges[t]=e,e!==-1&&(this._halfedges[e]=t)}_addTriangle(t,e,n,s,i,r){const l=this.trianglesLen;return this._triangles[l]=t,this._triangles[l+1]=e,this._triangles[l+2]=n,this._link(l,s),this._link(l+1,i),this._link(l+2,r),this.trianglesLen+=3,l}}function co(g,t){const e=g/(Math.abs(g)+Math.abs(t));return(t>0?3-e:1+e)/4}function oe(g,t,e,n){const s=g-e,i=t-n;return s*s+i*i}function ho(g,t,e,n,s,i,r,l){const o=g-r,a=t-l,h=e-r,u=n-l,c=s-r,f=i-l,p=o*o+a*a,m=h*h+u*u,y=c*c+f*f;return o*(u*y-m*f)-a*(h*y-m*c)+p*(h*f-u*c)<0}function uo(g,t,e,n,s,i){const r=e-g,l=n-t,o=s-g,a=i-t,h=r*r+l*l,u=o*o+a*a,c=.5/(r*a-l*o),f=(a*h-l*u)*c,p=(r*u-o*h)*c;return f*f+p*p}function fo(g,t,e,n,s,i){const r=e-g,l=n-t,o=s-g,a=i-t,h=r*r+l*l,u=o*o+a*a,c=.5/(r*a-l*o),f=g+(a*h-l*u)*c,p=t+(r*u-o*h)*c;return{x:f,y:p}}function _t(g,t,e,n){if(n-e<=20)for(let s=e+1;s<=n;s++){const i=g[s],r=t[i];let l=s-1;for(;l>=e&&t[g[l]]>r;)g[l+1]=g[l--];g[l+1]=i}else{const s=e+n>>1;let i=e+1,r=n;Bt(g,s,i),t[g[e]]>t[g[n]]&&Bt(g,e,n),t[g[i]]>t[g[n]]&&Bt(g,i,n),t[g[e]]>t[g[i]]&&Bt(g,e,i);const l=g[i],o=t[l];for(;;){do i++;while(t[g[i]]<o);do r--;while(t[g[r]]>o);if(r<i)break;Bt(g,i,r)}g[e+1]=g[r],g[r]=l,n-i+1>=r-e?(_t(g,t,i,n),_t(g,t,e,r-1)):(_t(g,t,e,r-1),_t(g,t,i,n))}}function Bt(g,t,e){const n=g[t];g[t]=g[e],g[e]=n}function po(g){return g[0]}function mo(g){return g[1]}const je=1e-6;class yt{constructor(){this._x0=this._y0=this._x1=this._y1=null,this._=""}moveTo(t,e){this._+=`M${this._x0=this._x1=+t},${this._y0=this._y1=+e}`}closePath(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")}lineTo(t,e){this._+=`L${this._x1=+t},${this._y1=+e}`}arc(t,e,n){t=+t,e=+e,n=+n;const s=t+n,i=e;if(n<0)throw new Error("negative radius");this._x1===null?this._+=`M${s},${i}`:(Math.abs(this._x1-s)>je||Math.abs(this._y1-i)>je)&&(this._+="L"+s+","+i),n&&(this._+=`A${n},${n},0,1,1,${t-n},${e}A${n},${n},0,1,1,${this._x1=s},${this._y1=i}`)}rect(t,e,n,s){this._+=`M${this._x0=this._x1=+t},${this._y0=this._y1=+e}h${+n}v${+s}h${-n}Z`}value(){return this._||null}}class re{constructor(){this._=[]}moveTo(t,e){this._.push([t,e])}closePath(){this._.push(this._[0].slice())}lineTo(t,e){this._.push([t,e])}value(){return this._.length?this._:null}}class vo{constructor(t,[e,n,s,i]=[0,0,960,500]){if(!((s=+s)>=(e=+e))||!((i=+i)>=(n=+n)))throw new Error("invalid bounds");this.delaunay=t,this._circumcenters=new Float64Array(t.points.length*2),this.vectors=new Float64Array(t.points.length*2),this.xmax=s,this.xmin=e,this.ymax=i,this.ymin=n,this._init()}update(){return this.delaunay.update(),this._init(),this}_init(){const{delaunay:{points:t,hull:e,triangles:n},vectors:s}=this,i=this.circumcenters=this._circumcenters.subarray(0,n.length/3*2);for(let f=0,p=0,m=n.length,y,w;f<m;f+=3,p+=2){const v=n[f]*2,b=n[f+1]*2,E=n[f+2]*2,x=t[v],A=t[v+1],B=t[b],S=t[b+1],I=t[E],z=t[E+1],M=B-x,N=S-A,_=I-x,T=z-A,P=(M*T-N*_)*2;if(Math.abs(P)<1e-9){let C=1e9;const L=n[0]*2;C*=Math.sign((t[L]-x)*T-(t[L+1]-A)*_),y=(x+I)/2-C*T,w=(A+z)/2+C*_}else{const C=1/P,L=M*M+N*N,q=_*_+T*T;y=x+(T*L-N*q)*C,w=A+(M*q-_*L)*C}i[p]=y,i[p+1]=w}let r=e[e.length-1],l,o=r*4,a,h=t[2*r],u,c=t[2*r+1];s.fill(0);for(let f=0;f<e.length;++f)r=e[f],l=o,a=h,u=c,o=r*4,h=t[2*r],c=t[2*r+1],s[l+2]=s[o]=u-c,s[l+3]=s[o+1]=h-a}render(t){const e=t==null?t=new yt:void 0,{delaunay:{halfedges:n,inedges:s,hull:i},circumcenters:r,vectors:l}=this;if(i.length<=1)return null;for(let h=0,u=n.length;h<u;++h){const c=n[h];if(c<h)continue;const f=Math.floor(h/3)*2,p=Math.floor(c/3)*2,m=r[f],y=r[f+1],w=r[p],v=r[p+1];this._renderSegment(m,y,w,v,t)}let o,a=i[i.length-1];for(let h=0;h<i.length;++h){o=a,a=i[h];const u=Math.floor(s[a]/3)*2,c=r[u],f=r[u+1],p=o*4,m=this._project(c,f,l[p+2],l[p+3]);m&&this._renderSegment(c,f,m[0],m[1],t)}return e&&e.value()}renderBounds(t){const e=t==null?t=new yt:void 0;return t.rect(this.xmin,this.ymin,this.xmax-this.xmin,this.ymax-this.ymin),e&&e.value()}renderCell(t,e){const n=e==null?e=new yt:void 0,s=this._clip(t);if(s===null||!s.length)return;e.moveTo(s[0],s[1]);let i=s.length;for(;s[0]===s[i-2]&&s[1]===s[i-1]&&i>1;)i-=2;for(let r=2;r<i;r+=2)(s[r]!==s[r-2]||s[r+1]!==s[r-1])&&e.lineTo(s[r],s[r+1]);return e.closePath(),n&&n.value()}*cellPolygons(){const{delaunay:{points:t}}=this;for(let e=0,n=t.length/2;e<n;++e){const s=this.cellPolygon(e);s&&(s.index=e,yield s)}}cellPolygon(t){const e=new re;return this.renderCell(t,e),e.value()}_renderSegment(t,e,n,s,i){let r;const l=this._regioncode(t,e),o=this._regioncode(n,s);l===0&&o===0?(i.moveTo(t,e),i.lineTo(n,s)):(r=this._clipSegment(t,e,n,s,l,o))&&(i.moveTo(r[0],r[1]),i.lineTo(r[2],r[3]))}contains(t,e,n){return e=+e,e!==e||(n=+n,n!==n)?!1:this.delaunay._step(t,e,n)===t}*neighbors(t){const e=this._clip(t);if(e)for(const n of this.delaunay.neighbors(t)){const s=this._clip(n);if(s){t:for(let i=0,r=e.length;i<r;i+=2)for(let l=0,o=s.length;l<o;l+=2)if(e[i]==s[l]&&e[i+1]==s[l+1]&&e[(i+2)%r]==s[(l+o-2)%o]&&e[(i+3)%r]==s[(l+o-1)%o]){yield n;break t}}}}_cell(t){const{circumcenters:e,delaunay:{inedges:n,halfedges:s,triangles:i}}=this,r=n[t];if(r===-1)return null;const l=[];let o=r;do{const a=Math.floor(o/3);if(l.push(e[a*2],e[a*2+1]),o=o%3===2?o-2:o+1,i[o]!==t)break;o=s[o]}while(o!==r&&o!==-1);return l}_clip(t){if(t===0&&this.delaunay.hull.length===1)return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];const e=this._cell(t);if(e===null)return null;const{vectors:n}=this,s=t*4;return n[s]||n[s+1]?this._clipInfinite(t,e,n[s],n[s+1],n[s+2],n[s+3]):this._clipFinite(t,e)}_clipFinite(t,e){const n=e.length;let s=null,i,r,l=e[n-2],o=e[n-1],a,h=this._regioncode(l,o),u,c=0;for(let f=0;f<n;f+=2)if(i=l,r=o,l=e[f],o=e[f+1],a=h,h=this._regioncode(l,o),a===0&&h===0)u=c,c=0,s?s.push(l,o):s=[l,o];else{let p,m,y,w,v;if(a===0){if((p=this._clipSegment(i,r,l,o,a,h))===null)continue;[m,y,w,v]=p}else{if((p=this._clipSegment(l,o,i,r,h,a))===null)continue;[w,v,m,y]=p,u=c,c=this._edgecode(m,y),u&&c&&this._edge(t,u,c,s,s.length),s?s.push(m,y):s=[m,y]}u=c,c=this._edgecode(w,v),u&&c&&this._edge(t,u,c,s,s.length),s?s.push(w,v):s=[w,v]}if(s)u=c,c=this._edgecode(s[0],s[1]),u&&c&&this._edge(t,u,c,s,s.length);else if(this.contains(t,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2))return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];return s}_clipSegment(t,e,n,s,i,r){for(;;){if(i===0&&r===0)return[t,e,n,s];if(i&r)return null;let l,o,a=i||r;a&8?(l=t+(n-t)*(this.ymax-e)/(s-e),o=this.ymax):a&4?(l=t+(n-t)*(this.ymin-e)/(s-e),o=this.ymin):a&2?(o=e+(s-e)*(this.xmax-t)/(n-t),l=this.xmax):(o=e+(s-e)*(this.xmin-t)/(n-t),l=this.xmin),i?(t=l,e=o,i=this._regioncode(t,e)):(n=l,s=o,r=this._regioncode(n,s))}}_clipInfinite(t,e,n,s,i,r){let l=Array.from(e),o;if((o=this._project(l[0],l[1],n,s))&&l.unshift(o[0],o[1]),(o=this._project(l[l.length-2],l[l.length-1],i,r))&&l.push(o[0],o[1]),l=this._clipFinite(t,l))for(let a=0,h=l.length,u,c=this._edgecode(l[h-2],l[h-1]);a<h;a+=2)u=c,c=this._edgecode(l[a],l[a+1]),u&&c&&(a=this._edge(t,u,c,l,a),h=l.length);else this.contains(t,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2)&&(l=[this.xmin,this.ymin,this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax]);return l}_edge(t,e,n,s,i){for(;e!==n;){let r,l;switch(e){case 5:e=4;continue;case 4:e=6,r=this.xmax,l=this.ymin;break;case 6:e=2;continue;case 2:e=10,r=this.xmax,l=this.ymax;break;case 10:e=8;continue;case 8:e=9,r=this.xmin,l=this.ymax;break;case 9:e=1;continue;case 1:e=5,r=this.xmin,l=this.ymin;break}(s[i]!==r||s[i+1]!==l)&&this.contains(t,r,l)&&(s.splice(i,0,r,l),i+=2)}if(s.length>4)for(let r=0;r<s.length;r+=2){const l=(r+2)%s.length,o=(r+4)%s.length;(s[r]===s[l]&&s[l]===s[o]||s[r+1]===s[l+1]&&s[l+1]===s[o+1])&&(s.splice(l,2),r-=2)}return i}_project(t,e,n,s){let i=1/0,r,l,o;if(s<0){if(e<=this.ymin)return null;(r=(this.ymin-e)/s)<i&&(o=this.ymin,l=t+(i=r)*n)}else if(s>0){if(e>=this.ymax)return null;(r=(this.ymax-e)/s)<i&&(o=this.ymax,l=t+(i=r)*n)}if(n>0){if(t>=this.xmax)return null;(r=(this.xmax-t)/n)<i&&(l=this.xmax,o=e+(i=r)*s)}else if(n<0){if(t<=this.xmin)return null;(r=(this.xmin-t)/n)<i&&(l=this.xmin,o=e+(i=r)*s)}return[l,o]}_edgecode(t,e){return(t===this.xmin?1:t===this.xmax?2:0)|(e===this.ymin?4:e===this.ymax?8:0)}_regioncode(t,e){return(t<this.xmin?1:t>this.xmax?2:0)|(e<this.ymin?4:e>this.ymax?8:0)}}const yo=2*Math.PI,Et=Math.pow;function wo(g){return g[0]}function go(g){return g[1]}function xo(g){const{triangles:t,coords:e}=g;for(let n=0;n<t.length;n+=3){const s=2*t[n],i=2*t[n+1],r=2*t[n+2];if((e[r]-e[s])*(e[i+1]-e[s+1])-(e[i]-e[s])*(e[r+1]-e[s+1])>1e-10)return!1}return!0}function bo(g,t,e){return[g+Math.sin(g+t)*e,t+Math.cos(g-t)*e]}class on{static from(t,e=wo,n=go,s){return new on("length"in t?Eo(t,e,n,s):Float64Array.from(_o(t,e,n,s)))}constructor(t){this._delaunator=new Dt(t),this.inedges=new Int32Array(t.length/2),this._hullIndex=new Int32Array(t.length/2),this.points=this._delaunator.coords,this._init()}update(){return this._delaunator.update(),this._init(),this}_init(){const t=this._delaunator,e=this.points;if(t.hull&&t.hull.length>2&&xo(t)){this.collinear=Int32Array.from({length:e.length/2},(c,f)=>f).sort((c,f)=>e[2*c]-e[2*f]||e[2*c+1]-e[2*f+1]);const o=this.collinear[0],a=this.collinear[this.collinear.length-1],h=[e[2*o],e[2*o+1],e[2*a],e[2*a+1]],u=1e-8*Math.hypot(h[3]-h[1],h[2]-h[0]);for(let c=0,f=e.length/2;c<f;++c){const p=bo(e[2*c],e[2*c+1],u);e[2*c]=p[0],e[2*c+1]=p[1]}this._delaunator=new Dt(e)}else delete this.collinear;const n=this.halfedges=this._delaunator.halfedges,s=this.hull=this._delaunator.hull,i=this.triangles=this._delaunator.triangles,r=this.inedges.fill(-1),l=this._hullIndex.fill(-1);for(let o=0,a=n.length;o<a;++o){const h=i[o%3===2?o-2:o+1];(n[o]===-1||r[h]===-1)&&(r[h]=o)}for(let o=0,a=s.length;o<a;++o)l[s[o]]=o;s.length<=2&&s.length>0&&(this.triangles=new Int32Array(3).fill(-1),this.halfedges=new Int32Array(3).fill(-1),this.triangles[0]=s[0],r[s[0]]=1,s.length===2&&(r[s[1]]=0,this.triangles[1]=s[1],this.triangles[2]=s[1]))}voronoi(t){return new vo(this,t)}*neighbors(t){const{inedges:e,hull:n,_hullIndex:s,halfedges:i,triangles:r,collinear:l}=this;if(l){const u=l.indexOf(t);u>0&&(yield l[u-1]),u<l.length-1&&(yield l[u+1]);return}const o=e[t];if(o===-1)return;let a=o,h=-1;do{if(yield h=r[a],a=a%3===2?a-2:a+1,r[a]!==t)return;if(a=i[a],a===-1){const u=n[(s[t]+1)%n.length];u!==h&&(yield u);return}}while(a!==o)}find(t,e,n=0){if(t=+t,t!==t||(e=+e,e!==e))return-1;const s=n;let i;for(;(i=this._step(n,t,e))>=0&&i!==n&&i!==s;)n=i;return i}_step(t,e,n){const{inedges:s,hull:i,_hullIndex:r,halfedges:l,triangles:o,points:a}=this;if(s[t]===-1||!a.length)return(t+1)%(a.length>>1);let h=t,u=Et(e-a[t*2],2)+Et(n-a[t*2+1],2);const c=s[t];let f=c;do{let p=o[f];const m=Et(e-a[p*2],2)+Et(n-a[p*2+1],2);if(m<u&&(u=m,h=p),f=f%3===2?f-2:f+1,o[f]!==t)break;if(f=l[f],f===-1){if(f=i[(r[t]+1)%i.length],f!==p&&Et(e-a[f*2],2)+Et(n-a[f*2+1],2)<u)return f;break}}while(f!==c);return h}render(t){const e=t==null?t=new yt:void 0,{points:n,halfedges:s,triangles:i}=this;for(let r=0,l=s.length;r<l;++r){const o=s[r];if(o<r)continue;const a=i[r]*2,h=i[o]*2;t.moveTo(n[a],n[a+1]),t.lineTo(n[h],n[h+1])}return this.renderHull(t),e&&e.value()}renderPoints(t,e){e===void 0&&(!t||typeof t.moveTo!="function")&&(e=t,t=null),e=e==null?2:+e;const n=t==null?t=new yt:void 0,{points:s}=this;for(let i=0,r=s.length;i<r;i+=2){const l=s[i],o=s[i+1];t.moveTo(l+e,o),t.arc(l,o,e,0,yo)}return n&&n.value()}renderHull(t){const e=t==null?t=new yt:void 0,{hull:n,points:s}=this,i=n[0]*2,r=n.length;t.moveTo(s[i],s[i+1]);for(let l=1;l<r;++l){const o=2*n[l];t.lineTo(s[o],s[o+1])}return t.closePath(),e&&e.value()}hullPolygon(){const t=new re;return this.renderHull(t),t.value()}renderTriangle(t,e){const n=e==null?e=new yt:void 0,{points:s,triangles:i}=this,r=i[t*=3]*2,l=i[t+1]*2,o=i[t+2]*2;return e.moveTo(s[r],s[r+1]),e.lineTo(s[l],s[l+1]),e.lineTo(s[o],s[o+1]),e.closePath(),n&&n.value()}*trianglePolygons(){const{triangles:t}=this;for(let e=0,n=t.length/3;e<n;++e)yield this.trianglePolygon(e)}trianglePolygon(t){const e=new re;return this.renderTriangle(t,e),e.value()}}function Eo(g,t,e,n){const s=g.length,i=new Float64Array(s*2);for(let r=0;r<s;++r){const l=g[r];i[r*2]=t.call(n,l,r,g),i[r*2+1]=e.call(n,l,r,g)}return i}function*_o(g,t,e,n){let s=0;for(const i of g)yield t.call(n,i,s,g),yield e.call(n,i,s,g),++s}var zo=function(){var g=0,t=1,e=new it;function n(){this.tolerance=-1,this.faces=[],this.newFaces=[],this.assigned=new l,this.unassigned=new l,this.vertices=[]}Object.assign(n.prototype,{toJSON:function(){const o=this.faces.map(f=>f.toArray()),a=Array.from(new Set(o.flat())).sort(),h=[];for(let f=0;f<a.length;f++)h.push(this.vertices[a[f]].point.x,this.vertices[a[f]].point.y,this.vertices[a[f]].point.z);const u=new Map;for(let f=0;f<a.length;f++)u.set(a[f],f);const c=[];for(let f=0;f<o.length;f++)c.push([u.get(o[f][0]),u.get(o[f][1]),u.get(o[f][2])]);return[h,c]},setFromPoints:function(o){Array.isArray(o)!==!0&&console.error("THREE.ConvexHull: Points parameter is not an array."),o.length<4&&console.error("THREE.ConvexHull: The algorithm needs at least four points."),this.makeEmpty();for(var a=0,h=o.length;a<h;a++)this.vertices.push(new r(o[a],a));return this.compute(),this},setFromObject:function(o){var a=[];return o.updateMatrixWorld(!0),o.traverse(function(h){var u,c,f,p=h.geometry;if(p!==void 0&&(p.isGeometry&&(p=p.toBufferGeometry?p.toBufferGeometry():new BufferGeometry().fromGeometry(p)),p.isBufferGeometry)){var m=p.attributes.position;if(m!==void 0)for(u=0,c=m.count;u<c;u++)f=new it,f.fromBufferAttribute(m,u).applyMatrix4(h.matrixWorld),a.push(f)}}),this.setFromPoints(a)},containsPoint:function(o){for(var a=this.faces,h=0,u=a.length;h<u;h++){var c=a[h];if(c.distanceToPoint(o)>this.tolerance)return!1}return!0},intersectRay:function(o,a){for(var h=this.faces,u=-1/0,c=1/0,f=0,p=h.length;f<p;f++){var m=h[f],y=m.distanceToPoint(o.origin),w=m.normal.dot(o.direction);if(y>0&&w>=0)return null;var v=w!==0?-y/w:0;if(!(v<=0)&&(w>0?c=Math.min(v,c):u=Math.max(v,u),u>c))return null}return u!==-1/0?o.at(u,a):o.at(c,a),a},intersectsRay:function(o){return this.intersectRay(o,e)!==null},makeEmpty:function(){return this.faces=[],this.vertices=[],this},addVertexToFace:function(o,a){return o.face=a,a.outside===null?this.assigned.append(o):this.assigned.insertBefore(a.outside,o),a.outside=o,this},removeVertexFromFace:function(o,a){return o===a.outside&&(o.next!==null&&o.next.face===a?a.outside=o.next:a.outside=null),this.assigned.remove(o),this},removeAllVerticesFromFace:function(o){if(o.outside!==null){for(var a=o.outside,h=o.outside;h.next!==null&&h.next.face===o;)h=h.next;return this.assigned.removeSubList(a,h),a.prev=h.next=null,o.outside=null,a}},deleteFaceVertices:function(o,a){var h=this.removeAllVerticesFromFace(o);if(h!==void 0)if(a===void 0)this.unassigned.appendChain(h);else{var u=h;do{var c=u.next,f=a.distanceToPoint(u.point);f>this.tolerance?this.addVertexToFace(u,a):this.unassigned.append(u),u=c}while(u!==null)}return this},resolveUnassignedPoints:function(o){if(this.unassigned.isEmpty()===!1){var a=this.unassigned.first();do{for(var h=a.next,u=this.tolerance,c=null,f=0;f<o.length;f++){var p=o[f];if(p.mark===g){var m=p.distanceToPoint(a.point);if(m>u&&(u=m,c=p),u>1e3*this.tolerance)break}}c!==null&&this.addVertexToFace(a,c),a=h}while(a!==null)}return this},computeExtremes:function(){var o=new it,a=new it,h=[],u=[],c,f,p;for(c=0;c<3;c++)h[c]=u[c]=this.vertices[0];for(o.copy(this.vertices[0].point),a.copy(this.vertices[0].point),c=0,f=this.vertices.length;c<f;c++){var m=this.vertices[c],y=m.point;for(p=0;p<3;p++)y.getComponent(p)<o.getComponent(p)&&(o.setComponent(p,y.getComponent(p)),h[p]=m);for(p=0;p<3;p++)y.getComponent(p)>a.getComponent(p)&&(a.setComponent(p,y.getComponent(p)),u[p]=m)}return this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(o.x),Math.abs(a.x))+Math.max(Math.abs(o.y),Math.abs(a.y))+Math.max(Math.abs(o.z),Math.abs(a.z))),{min:h,max:u}},computeInitialHull:function(){var o,a,h;return function(){o===void 0&&(o=new ln,a=new an,h=new it);var c,f=this.vertices,p=this.computeExtremes(),m=p.min,y=p.max,w,v,b,E,x,A,B,S,I=0,z=0;for(x=0;x<3;x++)S=y[x].point.getComponent(x)-m[x].point.getComponent(x),S>I&&(I=S,z=x);for(w=m[z],v=y[z],I=0,o.set(w.point,v.point),x=0,A=this.vertices.length;x<A;x++)c=f[x],c!==w&&c!==v&&(o.closestPointToPoint(c.point,!0,h),S=h.distanceToSquared(c.point),S>I&&(I=S,b=c));for(I=-1,a.setFromCoplanarPoints(w.point,v.point,b.point),x=0,A=this.vertices.length;x<A;x++)c=f[x],c!==w&&c!==v&&c!==b&&(S=Math.abs(a.distanceToPoint(c.point)),S>I&&(I=S,E=c));var M=[];if(a.distanceToPoint(E.point)<0)for(M.push(s.create(w,v,b),s.create(E,v,w),s.create(E,b,v),s.create(E,w,b)),x=0;x<3;x++)B=(x+1)%3,M[x+1].getEdge(2).setTwin(M[0].getEdge(B)),M[x+1].getEdge(1).setTwin(M[B+1].getEdge(0));else for(M.push(s.create(w,b,v),s.create(E,w,v),s.create(E,v,b),s.create(E,b,w)),x=0;x<3;x++)B=(x+1)%3,M[x+1].getEdge(2).setTwin(M[0].getEdge((3-x)%3)),M[x+1].getEdge(0).setTwin(M[B+1].getEdge(1));for(x=0;x<4;x++)this.faces.push(M[x]);for(x=0,A=f.length;x<A;x++)if(c=f[x],c!==w&&c!==v&&c!==b&&c!==E){I=this.tolerance;var N=null;for(B=0;B<4;B++)S=this.faces[B].distanceToPoint(c.point),S>I&&(I=S,N=this.faces[B]);N!==null&&this.addVertexToFace(c,N)}return this}}(),reindexFaces:function(){for(var o=[],a=0;a<this.faces.length;a++){var h=this.faces[a];h.mark===g&&o.push(h)}return this.faces=o,this},nextVertexToAdd:function(){if(this.assigned.isEmpty()===!1){var o,a=0,h=this.assigned.first().face,u=h.outside;do{var c=h.distanceToPoint(u.point);c>a&&(a=c,o=u),u=u.next}while(u!==null&&u.face===h);return o}},computeHorizon:function(o,a,h,u){this.deleteFaceVertices(h),h.mark=t;var c;a===null?c=a=h.getEdge(0):c=a.next;do{var f=c.twin,p=f.face;p.mark===g&&(p.distanceToPoint(o)>this.tolerance?this.computeHorizon(o,f,p,u):u.push(c)),c=c.next}while(c!==a);return this},addAdjoiningFace:function(o,a){var h=s.create(o,a.tail(),a.head());return this.faces.push(h),h.getEdge(-1).setTwin(a.twin),h.getEdge(0)},addNewFaces:function(o,a){this.newFaces=[];for(var h=null,u=null,c=0;c<a.length;c++){var f=a[c],p=this.addAdjoiningFace(o,f);h===null?h=p:p.next.setTwin(u),this.newFaces.push(p.face),u=p}return h.next.setTwin(u),this},addVertexToHull:function(o){var a=[];return this.unassigned.clear(),this.removeVertexFromFace(o,o.face),this.computeHorizon(o.point,null,o.face,a),this.addNewFaces(o,a),this.resolveUnassignedPoints(this.newFaces),this},cleanup:function(){return this.assigned.clear(),this.unassigned.clear(),this.newFaces=[],this},compute:function(){var o;for(this.computeInitialHull();(o=this.nextVertexToAdd())!==void 0;)this.addVertexToHull(o);return this.reindexFaces(),this.cleanup(),this}});function s(){this.normal=new it,this.midpoint=new it,this.area=0,this.constant=0,this.outside=null,this.mark=g,this.edge=null}Object.assign(s,{create:function(o,a,h){var u=new s,c=new i(o,u),f=new i(a,u),p=new i(h,u);return c.next=p.prev=f,f.next=c.prev=p,p.next=f.prev=c,u.edge=c,u.compute()}}),Object.assign(s.prototype,{toArray:function(){const o=[];let a=this.edge;do o.push(a.head().index),a=a.next;while(a!==this.edge);return o},getEdge:function(o){for(var a=this.edge;o>0;)a=a.next,o--;for(;o<0;)a=a.prev,o++;return a},compute:function(){var o;return function(){o===void 0&&(o=new cn);var h=this.edge.tail(),u=this.edge.head(),c=this.edge.next.head();return o.set(h.point,u.point,c.point),o.getNormal(this.normal),o.getMidpoint(this.midpoint),this.area=o.getArea(),this.constant=this.normal.dot(this.midpoint),this}}(),distanceToPoint:function(o){return this.normal.dot(o)-this.constant}});function i(o,a){this.vertex=o,this.prev=null,this.next=null,this.twin=null,this.face=a}Object.assign(i.prototype,{head:function(){return this.vertex},tail:function(){return this.prev?this.prev.vertex:null},length:function(){var o=this.head(),a=this.tail();return a!==null?a.point.distanceTo(o.point):-1},lengthSquared:function(){var o=this.head(),a=this.tail();return a!==null?a.point.distanceToSquared(o.point):-1},setTwin:function(o){return this.twin=o,o.twin=this,this}});function r(o,a){this.point=o,this.index=a,this.prev=null,this.next=null,this.face=null}function l(){this.head=null,this.tail=null}return Object.assign(l.prototype,{first:function(){return this.head},last:function(){return this.tail},clear:function(){return this.head=this.tail=null,this},insertBefore:function(o,a){return a.prev=o.prev,a.next=o,a.prev===null?this.head=a:a.prev.next=a,o.prev=a,this},insertAfter:function(o,a){return a.prev=o,a.next=o.next,a.next===null?this.tail=a:a.next.prev=a,o.next=a,this},append:function(o){return this.head===null?this.head=o:this.tail.next=o,o.prev=this.tail,o.next=null,this.tail=o,this},appendChain:function(o){for(this.head===null?this.head=o:this.tail.next=o,o.prev=this.tail;o.next!==null;)o=o.next;return this.tail=o,this},remove:function(o){return o.prev===null?this.head=o.next:o.prev.next=o.next,o.next===null?this.tail=o.prev:o.next.prev=o.prev,this},removeSubList:function(o,a){return o.prev===null?this.head=a.next:o.prev.next=a.next,a.next===null?this.tail=o.prev:a.next.prev=o.prev,this},isEmpty:function(){return this.head===null}}),n}();const Ao=new it,jt=new it,Co=new hn;function Yt(g){const t=Bo(g);if(t.length===0)return null;if(t.length===1)return We(t[0]);let e;const n=[];for(;e=t.pop();)n.push(To(We(e)));return Mo(n)}function We(g){let t=g.geometry;return t.toBufferGeometry?t=t.toBufferGeometry():t=t.clone(),g.updateMatrixWorld(),g.matrixWorld.decompose(Ao,Co,jt),t.scale(jt.x,jt.y,jt.z),t}function Mo(g){let t=0;for(let s=0;s<g.length;s++){const i=g[s].attributes.position;i&&i.itemSize===3&&(t+=i.count)}const e=new Float32Array(t*3);let n=0;for(let s=0;s<g.length;s++){const i=g[s].attributes.position;if(i&&i.itemSize===3)for(let r=0;r<i.count;r++)e[n++]=i.getX(r),e[n++]=i.getY(r),e[n++]=i.getZ(r)}return new Ue().setAttribute("position",new $e(e,3))}function rn(g){const t=g.attributes.position,e=new Float32Array(t.count*3);for(let n=0;n<t.count;n++)e[n*3]=t.getX(n),e[n*3+1]=t.getY(n),e[n*3+2]=t.getZ(n);return e}function Bo(g){const t=[];return g.traverse(function(e){e.isMesh&&t.push(e)}),t}function Wt(g,t){switch(t){case"x":return g.x;case"y":return g.y;case"z":return g.z}throw new Error(`Unexpected component ${t}`)}function To(g,t=1e-4){t=Math.max(t,Number.EPSILON);const e={},n=g.getIndex(),s=g.getAttribute("position"),i=n?n.count:s.count;let r=0;const l=[],o=[],a=Math.log10(1/t),h=Math.pow(10,a);for(let f=0;f<i;f++){const p=n?n.getX(f):f;let m="";m+=`${~~(s.getX(p)*h)},`,m+=`${~~(s.getY(p)*h)},`,m+=`${~~(s.getZ(p)*h)},`,m in e?l.push(e[m]):(o.push(s.getX(p)),o.push(s.getY(p)),o.push(s.getZ(p)),e[m]=r,l.push(r),r++)}const u=new $e(new Float32Array(o),s.itemSize,s.normalized),c=new Ue;return c.setAttribute("position",u),c.setIndex(l),c}const He=Math.PI/2;var D;(function(g){g.BOX="Box",g.CYLINDER="Cylinder",g.SPHERE="Sphere",g.HULL="ConvexPolyhedron",g.MESH="Trimesh"})(D||(D={}));const So=function(t,e={}){let n;if(e.type===D.BOX)return De(t);if(e.type===D.CYLINDER)return Vo(t,e);if(e.type===D.SPHERE)return jo(t,e);if(e.type===D.HULL)return qo(t);if(e.type===D.MESH)return n=Yt(t),n?Wo(n):null;if(e.type)throw new Error(`[CANNON.getShapeParameters] Invalid type "${e.type}".`);if(n=Yt(t),!n)return null;switch(n.type){case"BoxGeometry":case"BoxBufferGeometry":return Ge(n);case"CylinderGeometry":case"CylinderBufferGeometry":return Lo(n);case"PlaneGeometry":case"PlaneBufferGeometry":return ko(n);case"SphereGeometry":case"SphereBufferGeometry":return Oo(n);case"TubeGeometry":case"BufferGeometry":return De(t);default:return console.warn('Unrecognized geometry: "%s". Using bounding box as shape.',n.type),Ge(n)}},Uo=function(t,e={}){const n=So(t,e);if(!n)return null;const{type:s,params:i,offset:r,orientation:l}=n;let o;return s===D.BOX?o=Po(i):s===D.CYLINDER?o=No(i):s===D.SPHERE?o=Io(i):s===D.HULL?o=Fo(i):o=Ro(i),{shape:o,offset:r,orientation:l}};function Po(g){const{x:t,y:e,z:n}=g;return new Ut(new d(t,e,n))}function No(g){const{radiusTop:t,radiusBottom:e,height:n,segments:s}=g,i=new ys(t,e,n,s);return i.radiusTop=e,i.radiusBottom=e,i.height=n,i.numSegments=s,i}function Io(g){return new vs(g.radius)}function Fo(g){const{faces:t,vertices:e}=g,n=[];for(let i=0;i<e.length;i+=3)n.push(new d(e[i],e[i+1],e[i+2]));return new ht({faces:t,vertices:n})}function Ro(g){const{vertices:t,indices:e}=g;return new Gt(t,e)}function Ge(g){if(!rn(g).length)return null;g.computeBoundingBox();const e=g.boundingBox;return{type:D.BOX,params:{x:(e.max.x-e.min.x)/2,y:(e.max.y-e.min.y)/2,z:(e.max.z-e.min.z)/2}}}function De(g){const t=g.clone();t.quaternion.set(0,0,0,1),t.updateMatrixWorld();const e=new Ye().setFromObject(t);if(!isFinite(e.min.lengthSq()))return null;const n=e.translate(t.position.negate()).getCenter(new it);return{type:D.BOX,params:{x:(e.max.x-e.min.x)/2,y:(e.max.y-e.min.y)/2,z:(e.max.z-e.min.z)/2},offset:n.lengthSq()?new d(n.x,n.y,n.z):void 0}}function qo(g){const t=Yt(g);if(!t)return null;const e=1e-4;for(let i=0;i<t.attributes.position.count;i++)t.attributes.position.setXYZ(i,t.attributes.position.getX(i)+(Math.random()-.5)*e,t.attributes.position.getY(i)+(Math.random()-.5)*e,t.attributes.position.getZ(i)+(Math.random()-.5)*e);const[n,s]=new zo().setFromObject(new un(t)).toJSON();return{type:D.HULL,params:{vertices:new Float32Array(n),faces:s}}}function Lo(g){const t=g.parameters;return{type:D.CYLINDER,params:{radiusTop:t.radiusTop,radiusBottom:t.radiusBottom,height:t.height,segments:t.radialSegments},orientation:new G().setFromEuler(dn.degToRad(-90),0,0,"XYZ").normalize()}}function Vo(g,t){const e=["x","y","z"],n=t.cylinderAxis||"y",s=e.splice(e.indexOf(n),1)&&e,i=new Ye().setFromObject(g);if(!isFinite(i.min.lengthSq()))return null;const r=i.max[n]-i.min[n],l=.5*Math.max(Wt(i.max,s[0])-Wt(i.min,s[0]),Wt(i.max,s[1])-Wt(i.min,s[1])),o=n==="y"?He:0,a=n==="z"?He:0;return{type:D.CYLINDER,params:{radiusTop:l,radiusBottom:l,height:r,segments:12},orientation:new G().setFromEuler(o,a,0,"XYZ").normalize()}}function ko(g){g.computeBoundingBox();const t=g.boundingBox;return{type:D.BOX,params:{x:(t.max.x-t.min.x)/2||.1,y:(t.max.y-t.min.y)/2||.1,z:(t.max.z-t.min.z)/2||.1}}}function Oo(g){return{type:D.SPHERE,params:{radius:g.parameters.radius}}}function jo(g,t){if(t.sphereRadius)return{type:D.SPHERE,params:{radius:t.sphereRadius}};const e=Yt(g);return e?(e.computeBoundingSphere(),{type:D.SPHERE,params:{radius:e.boundingSphere.radius}}):null}function Wo(g){const t=rn(g);if(!t.length)return null;const e=new Uint32Array(t.length);for(let n=0;n<t.length;n++)e[n]=n;return{type:D.MESH,params:{vertices:t,indices:e}}}export{R as B,ys as C,on as D,Do as H,Go as P,G as Q,vs as S,Gt as T,d as V,Yo as W,Ut as a,ht as b,F as c,D as d,Uo as t};
