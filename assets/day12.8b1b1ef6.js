var qn=Object.defineProperty;var Vn=(g,t,e)=>t in g?qn(g,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):g[t]=e;var O=(g,t,e)=>(Vn(g,typeof t!="symbol"?t+"":t,e),e);import{d as Qt,v as Ln,M as tt,l as H,L as wn,w as vn,x as yn,y as xt,z as Ce,Q as kn,H as gn,J as On,K as xn,X as jn,Y as Hn,Z as bn,t as Wn,S as En,e as Gn,c as Dn,i as Yn,j as Un,k as Xn,_ as Ae,$ as Me,B as Te,a0 as Be,a1 as $n,P as Kn,O as Zn,W as Qn,s as Jn}from"./three.module.d3d6ea96.js";import{O as ts}from"./OrbitControls.3e08d4ed.js";import"./stats.min.46d05fb3.js";import{F as es}from"./FXAAShader.b0cf4fbe.js";class st{constructor(t){t===void 0&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){t===void 0&&(t=new f);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){e===void 0&&(e=new f);const n=this.elements,s=t.x,i=t.y,r=t.z;return e.x=n[0]*s+n[1]*i+n[2]*r,e.y=n[3]*s+n[4]*i+n[5]*r,e.z=n[6]*s+n[7]*i+n[8]*r,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){e===void 0&&(e=new st);const n=this.elements,s=t.elements,i=e.elements,r=n[0],l=n[1],o=n[2],a=n[3],h=n[4],u=n[5],c=n[6],d=n[7],p=n[8],m=s[0],v=s[1],y=s[2],w=s[3],b=s[4],E=s[5],x=s[6],C=s[7],T=s[8];return i[0]=r*m+l*w+o*x,i[1]=r*v+l*b+o*C,i[2]=r*y+l*E+o*T,i[3]=a*m+h*w+u*x,i[4]=a*v+h*b+u*C,i[5]=a*y+h*E+u*T,i[6]=c*m+d*w+p*x,i[7]=c*v+d*b+p*C,i[8]=c*y+d*E+p*T,e}scale(t,e){e===void 0&&(e=new st);const n=this.elements,s=e.elements;for(let i=0;i!==3;i++)s[3*i+0]=t.x*n[3*i+0],s[3*i+1]=t.y*n[3*i+1],s[3*i+2]=t.z*n[3*i+2];return e}solve(t,e){e===void 0&&(e=new f);const n=3,s=4,i=[];let r,l;for(r=0;r<n*s;r++)i.push(0);for(r=0;r<3;r++)for(l=0;l<3;l++)i[r+s*l]=this.elements[r+3*l];i[3+4*0]=t.x,i[3+4*1]=t.y,i[3+4*2]=t.z;let o=3;const a=o;let h;const u=4;let c;do{if(r=a-o,i[r+s*r]===0){for(l=r+1;l<a;l++)if(i[r+s*l]!==0){h=u;do c=u-h,i[c+s*r]+=i[c+s*l];while(--h);break}}if(i[r+s*r]!==0)for(l=r+1;l<a;l++){const d=i[r+s*l]/i[r+s*r];h=u;do c=u-h,i[c+s*l]=c<=r?0:i[c+s*l]-i[c+s*r]*d;while(--h)}}while(--o);if(e.z=i[2*s+3]/i[2*s+2],e.y=(i[1*s+3]-i[1*s+2]*e.z)/i[1*s+1],e.x=(i[0*s+3]-i[0*s+2]*e.z-i[0*s+1]*e.y)/i[0*s+0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,n){if(n===void 0)return this.elements[e+3*t];this.elements[e+3*t]=n}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";const e=",";for(let n=0;n<9;n++)t+=this.elements[n]+e;return t}reverse(t){t===void 0&&(t=new st);const e=3,n=6,s=ns;let i,r;for(i=0;i<3;i++)for(r=0;r<3;r++)s[i+n*r]=this.elements[i+3*r];s[3+6*0]=1,s[3+6*1]=0,s[3+6*2]=0,s[4+6*0]=0,s[4+6*1]=1,s[4+6*2]=0,s[5+6*0]=0,s[5+6*1]=0,s[5+6*2]=1;let l=3;const o=l;let a;const h=n;let u;do{if(i=o-l,s[i+n*i]===0){for(r=i+1;r<o;r++)if(s[i+n*r]!==0){a=h;do u=h-a,s[u+n*i]+=s[u+n*r];while(--a);break}}if(s[i+n*i]!==0)for(r=i+1;r<o;r++){const c=s[i+n*r]/s[i+n*i];a=h;do u=h-a,s[u+n*r]=u<=i?0:s[u+n*r]-s[u+n*i]*c;while(--a)}}while(--l);i=2;do{r=i-1;do{const c=s[i+n*r]/s[i+n*i];a=n;do u=n-a,s[u+n*r]=s[u+n*r]-s[u+n*i]*c;while(--a)}while(r--)}while(--i);i=2;do{const c=1/s[i+n*i];a=n;do u=n-a,s[u+n*i]=s[u+n*i]*c;while(--a)}while(i--);i=2;do{r=2;do{if(u=s[e+r+n*i],isNaN(u)||u===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(i,r,u)}while(r--)}while(i--);return t}setRotationFromQuaternion(t){const e=t.x,n=t.y,s=t.z,i=t.w,r=e+e,l=n+n,o=s+s,a=e*r,h=e*l,u=e*o,c=n*l,d=n*o,p=s*o,m=i*r,v=i*l,y=i*o,w=this.elements;return w[3*0+0]=1-(c+p),w[3*0+1]=h-y,w[3*0+2]=u+v,w[3*1+0]=h+y,w[3*1+1]=1-(a+p),w[3*1+2]=d-m,w[3*2+0]=u-v,w[3*2+1]=d+m,w[3*2+2]=1-(a+c),this}transpose(t){t===void 0&&(t=new st);const e=this.elements,n=t.elements;let s;return n[0]=e[0],n[4]=e[4],n[8]=e[8],s=e[1],n[1]=e[3],n[3]=s,s=e[2],n[2]=e[6],n[6]=s,s=e[5],n[5]=e[7],n[7]=s,t}}const ns=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class f{constructor(t,e,n){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),this.x=t,this.y=e,this.z=n}cross(t,e){e===void 0&&(e=new f);const n=t.x,s=t.y,i=t.z,r=this.x,l=this.y,o=this.z;return e.x=l*i-o*s,e.y=o*n-r*i,e.z=r*s-l*n,e}set(t,e,n){return this.x=t,this.y=e,this.z=n,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(e)e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z;else return new f(this.x+t.x,this.y+t.y,this.z+t.z)}vsub(t,e){if(e)e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z;else return new f(this.x-t.x,this.y-t.y,this.z-t.z)}crossmat(){return new st([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,n=this.z,s=Math.sqrt(t*t+e*e+n*n);if(s>0){const i=1/s;this.x*=i,this.y*=i,this.z*=i}else this.x=0,this.y=0,this.z=0;return s}unit(t){t===void 0&&(t=new f);const e=this.x,n=this.y,s=this.z;let i=Math.sqrt(e*e+n*n+s*s);return i>0?(i=1/i,t.x=e*i,t.y=n*i,t.z=s*i):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,n=this.z;return Math.sqrt(t*t+e*e+n*n)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,n=this.y,s=this.z,i=t.x,r=t.y,l=t.z;return Math.sqrt((i-e)*(i-e)+(r-n)*(r-n)+(l-s)*(l-s))}distanceSquared(t){const e=this.x,n=this.y,s=this.z,i=t.x,r=t.y,l=t.z;return(i-e)*(i-e)+(r-n)*(r-n)+(l-s)*(l-s)}scale(t,e){e===void 0&&(e=new f);const n=this.x,s=this.y,i=this.z;return e.x=t*n,e.y=t*s,e.z=t*i,e}vmul(t,e){return e===void 0&&(e=new f),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,n){return n===void 0&&(n=new f),n.x=this.x+t*e.x,n.y=this.y+t*e.y,n.z=this.z+t*e.z,n}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(t){return t===void 0&&(t=new f),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const n=this.length();if(n>0){const s=ss,i=1/n;s.set(this.x*i,this.y*i,this.z*i);const r=is;Math.abs(s.x)<.9?(r.set(1,0,0),s.cross(r,t)):(r.set(0,1,0),s.cross(r,t)),s.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,n){const s=this.x,i=this.y,r=this.z;n.x=s+(t.x-s)*e,n.y=i+(t.y-i)*e,n.z=r+(t.z-r)*e}almostEquals(t,e){return e===void 0&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return t===void 0&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(Se),Se.almostEquals(t,e)}clone(){return new f(this.x,this.y,this.z)}}f.ZERO=new f(0,0,0);f.UNIT_X=new f(1,0,0);f.UNIT_Y=new f(0,1,0);f.UNIT_Z=new f(0,0,1);const ss=new f,is=new f,Se=new f;class D{constructor(t){t===void 0&&(t={}),this.lowerBound=new f,this.upperBound=new f,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,n,s){const i=this.lowerBound,r=this.upperBound,l=n;i.copy(t[0]),l&&l.vmult(i,i),r.copy(i);for(let o=1;o<t.length;o++){let a=t[o];l&&(l.vmult(a,Pe),a=Pe),a.x>r.x&&(r.x=a.x),a.x<i.x&&(i.x=a.x),a.y>r.y&&(r.y=a.y),a.y<i.y&&(i.y=a.y),a.z>r.z&&(r.z=a.z),a.z<i.z&&(i.z=a.z)}return e&&(e.vadd(i,i),e.vadd(r,r)),s&&(i.x-=s,i.y-=s,i.z-=s,r.x+=s,r.y+=s,r.z+=s),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return new D().copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,n=this.upperBound,s=t.lowerBound,i=t.upperBound,r=s.x<=n.x&&n.x<=i.x||e.x<=i.x&&i.x<=n.x,l=s.y<=n.y&&n.y<=i.y||e.y<=i.y&&i.y<=n.y,o=s.z<=n.z&&n.z<=i.z||e.z<=i.z&&i.z<=n.z;return r&&l&&o}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,n=this.upperBound,s=t.lowerBound,i=t.upperBound;return e.x<=s.x&&n.x>=i.x&&e.y<=s.y&&n.y>=i.y&&e.z<=s.z&&n.z>=i.z}getCorners(t,e,n,s,i,r,l,o){const a=this.lowerBound,h=this.upperBound;t.copy(a),e.set(h.x,a.y,a.z),n.set(h.x,h.y,a.z),s.set(a.x,h.y,h.z),i.set(h.x,a.y,h.z),r.set(a.x,h.y,a.z),l.set(a.x,a.y,h.z),o.copy(h)}toLocalFrame(t,e){const n=Fe,s=n[0],i=n[1],r=n[2],l=n[3],o=n[4],a=n[5],h=n[6],u=n[7];this.getCorners(s,i,r,l,o,a,h,u);for(let c=0;c!==8;c++){const d=n[c];t.pointToLocal(d,d)}return e.setFromPoints(n)}toWorldFrame(t,e){const n=Fe,s=n[0],i=n[1],r=n[2],l=n[3],o=n[4],a=n[5],h=n[6],u=n[7];this.getCorners(s,i,r,l,o,a,h,u);for(let c=0;c!==8;c++){const d=n[c];t.pointToWorld(d,d)}return e.setFromPoints(n)}overlapsRay(t){const{direction:e,from:n}=t,s=1/e.x,i=1/e.y,r=1/e.z,l=(this.lowerBound.x-n.x)*s,o=(this.upperBound.x-n.x)*s,a=(this.lowerBound.y-n.y)*i,h=(this.upperBound.y-n.y)*i,u=(this.lowerBound.z-n.z)*r,c=(this.upperBound.z-n.z)*r,d=Math.max(Math.max(Math.min(l,o),Math.min(a,h)),Math.min(u,c)),p=Math.min(Math.min(Math.max(l,o),Math.max(a,h)),Math.max(u,c));return!(p<0||d>p)}}const Pe=new f,Fe=[new f,new f,new f,new f,new f,new f,new f,new f];class Ie{constructor(){this.matrix=[]}get(t,e){let{index:n}=t,{index:s}=e;if(s>n){const i=s;s=n,n=i}return this.matrix[(n*(n+1)>>1)+s-1]}set(t,e,n){let{index:s}=t,{index:i}=e;if(i>s){const r=i;i=s,s=r}this.matrix[(s*(s+1)>>1)+i-1]=n?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class _n{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;return n[t]===void 0&&(n[t]=[]),n[t].includes(e)||n[t].push(e),this}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return!!(n[t]!==void 0&&n[t].includes(e))}hasAnyEventListener(t){return this._listeners===void 0?!1:this._listeners[t]!==void 0}removeEventListener(t,e){if(this._listeners===void 0)return this;const n=this._listeners;if(n[t]===void 0)return this;const s=n[t].indexOf(e);return s!==-1&&n[t].splice(s,1),this}dispatchEvent(t){if(this._listeners===void 0)return this;const n=this._listeners[t.type];if(n!==void 0){t.target=this;for(let s=0,i=n.length;s<i;s++)n[s].call(this,t)}return this}}class Y{constructor(t,e,n,s){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),s===void 0&&(s=1),this.x=t,this.y=e,this.z=n,this.w=s}set(t,e,n,s){return this.x=t,this.y=e,this.z=n,this.w=s,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const n=Math.sin(e*.5);return this.x=t.x*n,this.y=t.y*n,this.z=t.z*n,this.w=Math.cos(e*.5),this}toAxisAngle(t){t===void 0&&(t=new f),this.normalize();const e=2*Math.acos(this.w),n=Math.sqrt(1-this.w*this.w);return n<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/n,t.y=this.y/n,t.z=this.z/n),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const n=os,s=rs;t.tangents(n,s),this.setFromAxisAngle(n,Math.PI)}else{const n=t.cross(e);this.x=n.x,this.y=n.y,this.z=n.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){e===void 0&&(e=new Y);const n=this.x,s=this.y,i=this.z,r=this.w,l=t.x,o=t.y,a=t.z,h=t.w;return e.x=n*h+r*l+s*a-i*o,e.y=s*h+r*o+i*l-n*a,e.z=i*h+r*a+n*o-s*l,e.w=r*h-n*l-s*o-i*a,e}inverse(t){t===void 0&&(t=new Y);const e=this.x,n=this.y,s=this.z,i=this.w;this.conjugate(t);const r=1/(e*e+n*n+s*s+i*i);return t.x*=r,t.y*=r,t.z*=r,t.w*=r,t}conjugate(t){return t===void 0&&(t=new Y),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){e===void 0&&(e=new f);const n=t.x,s=t.y,i=t.z,r=this.x,l=this.y,o=this.z,a=this.w,h=a*n+l*i-o*s,u=a*s+o*n-r*i,c=a*i+r*s-l*n,d=-r*n-l*s-o*i;return e.x=h*a+d*-r+u*-o-c*-l,e.y=u*a+d*-l+c*-r-h*-o,e.z=c*a+d*-o+h*-l-u*-r,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){e===void 0&&(e="YZX");let n,s,i;const r=this.x,l=this.y,o=this.z,a=this.w;switch(e){case"YZX":const h=r*l+o*a;if(h>.499&&(n=2*Math.atan2(r,a),s=Math.PI/2,i=0),h<-.499&&(n=-2*Math.atan2(r,a),s=-Math.PI/2,i=0),n===void 0){const u=r*r,c=l*l,d=o*o;n=Math.atan2(2*l*a-2*r*o,1-2*c-2*d),s=Math.asin(2*h),i=Math.atan2(2*r*a-2*l*o,1-2*u-2*d)}break;default:throw new Error(`Euler order ${e} not supported yet.`)}t.y=n,t.z=s,t.x=i}setFromEuler(t,e,n,s){s===void 0&&(s="XYZ");const i=Math.cos(t/2),r=Math.cos(e/2),l=Math.cos(n/2),o=Math.sin(t/2),a=Math.sin(e/2),h=Math.sin(n/2);return s==="XYZ"?(this.x=o*r*l+i*a*h,this.y=i*a*l-o*r*h,this.z=i*r*h+o*a*l,this.w=i*r*l-o*a*h):s==="YXZ"?(this.x=o*r*l+i*a*h,this.y=i*a*l-o*r*h,this.z=i*r*h-o*a*l,this.w=i*r*l+o*a*h):s==="ZXY"?(this.x=o*r*l-i*a*h,this.y=i*a*l+o*r*h,this.z=i*r*h+o*a*l,this.w=i*r*l-o*a*h):s==="ZYX"?(this.x=o*r*l-i*a*h,this.y=i*a*l+o*r*h,this.z=i*r*h-o*a*l,this.w=i*r*l+o*a*h):s==="YZX"?(this.x=o*r*l+i*a*h,this.y=i*a*l+o*r*h,this.z=i*r*h-o*a*l,this.w=i*r*l-o*a*h):s==="XZY"&&(this.x=o*r*l-i*a*h,this.y=i*a*l-o*r*h,this.z=i*r*h+o*a*l,this.w=i*r*l+o*a*h),this}clone(){return new Y(this.x,this.y,this.z,this.w)}slerp(t,e,n){n===void 0&&(n=new Y);const s=this.x,i=this.y,r=this.z,l=this.w;let o=t.x,a=t.y,h=t.z,u=t.w,c,d,p,m,v;return d=s*o+i*a+r*h+l*u,d<0&&(d=-d,o=-o,a=-a,h=-h,u=-u),1-d>1e-6?(c=Math.acos(d),p=Math.sin(c),m=Math.sin((1-e)*c)/p,v=Math.sin(e*c)/p):(m=1-e,v=e),n.x=m*s+v*o,n.y=m*i+v*a,n.z=m*r+v*h,n.w=m*l+v*u,n}integrate(t,e,n,s){s===void 0&&(s=new Y);const i=t.x*n.x,r=t.y*n.y,l=t.z*n.z,o=this.x,a=this.y,h=this.z,u=this.w,c=e*.5;return s.x+=c*(i*u+r*h-l*a),s.y+=c*(r*u+l*o-i*h),s.z+=c*(l*u+i*a-r*o),s.w+=c*(-i*o-r*a-l*h),s}}const os=new f,rs=new f,ls={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class F{constructor(t){t===void 0&&(t={}),this.id=F.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=t.collisionResponse?t.collisionResponse:!0,this.collisionFilterGroup=t.collisionFilterGroup!==void 0?t.collisionFilterGroup:1,this.collisionFilterMask=t.collisionFilterMask!==void 0?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,n,s){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}F.idCounter=0;F.types=ls;class j{constructor(t){t===void 0&&(t={}),this.position=new f,this.quaternion=new Y,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return j.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return j.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return e===void 0&&(e=new f),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,n,s){return s===void 0&&(s=new f),n.vsub(t,s),e.conjugate(Ne),Ne.vmult(s,s),s}static pointToWorldFrame(t,e,n,s){return s===void 0&&(s=new f),e.vmult(n,s),s.vadd(t,s),s}static vectorToWorldFrame(t,e,n){return n===void 0&&(n=new f),t.vmult(e,n),n}static vectorToLocalFrame(t,e,n,s){return s===void 0&&(s=new f),e.w*=-1,e.vmult(n,s),e.w*=-1,s}}const Ne=new Y;class at extends F{constructor(t){t===void 0&&(t={});const{vertices:e=[],faces:n=[],normals:s=[],axes:i,boundingSphereRadius:r}=t;super({type:F.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=n,this.faceNormals=s,this.faceNormals.length===0&&this.computeNormals(),r?this.boundingSphereRadius=r:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=i?i.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,n=this.uniqueEdges;n.length=0;const s=new f;for(let i=0;i!==t.length;i++){const r=t[i],l=r.length;for(let o=0;o!==l;o++){const a=(o+1)%l;e[r[o]].vsub(e[r[a]],s),s.normalize();let h=!1;for(let u=0;u!==n.length;u++)if(n[u].almostEquals(s)||n[u].almostEquals(s)){h=!0;break}h||n.push(s.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let s=0;s<this.faces[t].length;s++)if(!this.vertices[this.faces[t][s]])throw new Error(`Vertex ${this.faces[t][s]} not found!`);const e=this.faceNormals[t]||new f;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const n=this.vertices[this.faces[t][0]];if(e.dot(n)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let s=0;s<this.faces[t].length;s++)console.warn(`.vertices[${this.faces[t][s]}] = Vec3(${this.vertices[this.faces[t][s]].toString()})`)}}}getFaceNormal(t,e){const n=this.faces[t],s=this.vertices[n[0]],i=this.vertices[n[1]],r=this.vertices[n[2]];at.computeNormal(s,i,r,e)}static computeNormal(t,e,n,s){const i=new f,r=new f;e.vsub(t,r),n.vsub(e,i),i.cross(r,s),s.isZero()||s.normalize()}clipAgainstHull(t,e,n,s,i,r,l,o,a){const h=new f;let u=-1,c=-Number.MAX_VALUE;for(let p=0;p<n.faces.length;p++){h.copy(n.faceNormals[p]),i.vmult(h,h);const m=h.dot(r);m>c&&(c=m,u=p)}const d=[];for(let p=0;p<n.faces[u].length;p++){const m=n.vertices[n.faces[u][p]],v=new f;v.copy(m),i.vmult(v,v),s.vadd(v,v),d.push(v)}u>=0&&this.clipFaceAgainstHull(r,t,e,d,l,o,a)}findSeparatingAxis(t,e,n,s,i,r,l,o){const a=new f,h=new f,u=new f,c=new f,d=new f,p=new f;let m=Number.MAX_VALUE;const v=this;if(v.uniqueAxes)for(let y=0;y!==v.uniqueAxes.length;y++){n.vmult(v.uniqueAxes[y],a);const w=v.testSepAxis(a,t,e,n,s,i);if(w===!1)return!1;w<m&&(m=w,r.copy(a))}else{const y=l?l.length:v.faces.length;for(let w=0;w<y;w++){const b=l?l[w]:w;a.copy(v.faceNormals[b]),n.vmult(a,a);const E=v.testSepAxis(a,t,e,n,s,i);if(E===!1)return!1;E<m&&(m=E,r.copy(a))}}if(t.uniqueAxes)for(let y=0;y!==t.uniqueAxes.length;y++){i.vmult(t.uniqueAxes[y],h);const w=v.testSepAxis(h,t,e,n,s,i);if(w===!1)return!1;w<m&&(m=w,r.copy(h))}else{const y=o?o.length:t.faces.length;for(let w=0;w<y;w++){const b=o?o[w]:w;h.copy(t.faceNormals[b]),i.vmult(h,h);const E=v.testSepAxis(h,t,e,n,s,i);if(E===!1)return!1;E<m&&(m=E,r.copy(h))}}for(let y=0;y!==v.uniqueEdges.length;y++){n.vmult(v.uniqueEdges[y],c);for(let w=0;w!==t.uniqueEdges.length;w++)if(i.vmult(t.uniqueEdges[w],d),c.cross(d,p),!p.almostZero()){p.normalize();const b=v.testSepAxis(p,t,e,n,s,i);if(b===!1)return!1;b<m&&(m=b,r.copy(p))}}return s.vsub(e,u),u.dot(r)>0&&r.negate(r),!0}testSepAxis(t,e,n,s,i,r){const l=this;at.project(l,t,n,s,re),at.project(e,t,i,r,le);const o=re[0],a=re[1],h=le[0],u=le[1];if(o<u||h<a)return!1;const c=o-u,d=h-a;return c<d?c:d}calculateLocalInertia(t,e){const n=new f,s=new f;this.computeLocalAABB(s,n);const i=n.x-s.x,r=n.y-s.y,l=n.z-s.z;e.x=1/12*t*(2*r*2*r+2*l*2*l),e.y=1/12*t*(2*i*2*i+2*l*2*l),e.z=1/12*t*(2*r*2*r+2*i*2*i)}getPlaneConstantOfFace(t){const e=this.faces[t],n=this.faceNormals[t],s=this.vertices[e[0]];return-n.dot(s)}clipFaceAgainstHull(t,e,n,s,i,r,l){const o=new f,a=new f,h=new f,u=new f,c=new f,d=new f,p=new f,m=new f,v=this,y=[],w=s,b=y;let E=-1,x=Number.MAX_VALUE;for(let z=0;z<v.faces.length;z++){o.copy(v.faceNormals[z]),n.vmult(o,o);const M=o.dot(t);M<x&&(x=M,E=z)}if(E<0)return;const C=v.faces[E];C.connectedFaces=[];for(let z=0;z<v.faces.length;z++)for(let M=0;M<v.faces[z].length;M++)C.indexOf(v.faces[z][M])!==-1&&z!==E&&C.connectedFaces.indexOf(z)===-1&&C.connectedFaces.push(z);const T=C.length;for(let z=0;z<T;z++){const M=v.vertices[C[z]],I=v.vertices[C[(z+1)%T]];M.vsub(I,a),h.copy(a),n.vmult(h,h),e.vadd(h,h),u.copy(this.faceNormals[E]),n.vmult(u,u),e.vadd(u,u),h.cross(u,c),c.negate(c),d.copy(M),n.vmult(d,d),e.vadd(d,d);const _=C.connectedFaces[z];p.copy(this.faceNormals[_]);const B=this.getPlaneConstantOfFace(_);m.copy(p),n.vmult(m,m);const P=B-m.dot(e);for(this.clipFaceAgainstPlane(w,b,m,P);w.length;)w.shift();for(;b.length;)w.push(b.shift())}p.copy(this.faceNormals[E]);const S=this.getPlaneConstantOfFace(E);m.copy(p),n.vmult(m,m);const N=S-m.dot(e);for(let z=0;z<w.length;z++){let M=m.dot(w[z])+N;if(M<=i&&(console.log(`clamped: depth=${M} to minDist=${i}`),M=i),M<=r){const I=w[z];if(M<=1e-6){const _={point:I,normal:m,depth:M};l.push(_)}}}}clipFaceAgainstPlane(t,e,n,s){let i,r;const l=t.length;if(l<2)return e;let o=t[t.length-1],a=t[0];i=n.dot(o)+s;for(let h=0;h<l;h++){if(a=t[h],r=n.dot(a)+s,i<0)if(r<0){const u=new f;u.copy(a),e.push(u)}else{const u=new f;o.lerp(a,i/(i-r),u),e.push(u)}else if(r<0){const u=new f;o.lerp(a,i/(i-r),u),e.push(u),e.push(a)}o=a,i=r}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new f);const n=this.vertices,s=this.worldVertices;for(let i=0;i!==this.vertices.length;i++)e.vmult(n[i],s[i]),t.vadd(s[i],s[i]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const n=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let s=0;s<this.vertices.length;s++){const i=n[s];i.x<t.x?t.x=i.x:i.x>e.x&&(e.x=i.x),i.y<t.y?t.y=i.y:i.y>e.y&&(e.y=i.y),i.z<t.z?t.z=i.z:i.z>e.z&&(e.z=i.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new f);const n=this.faceNormals,s=this.worldFaceNormals;for(let i=0;i!==e;i++)t.vmult(n[i],s[i]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let n=0;n!==e.length;n++){const s=e[n].lengthSquared();s>t&&(t=s)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,n,s){const i=this.vertices;let r,l,o,a,h,u,c=new f;for(let d=0;d<i.length;d++){c.copy(i[d]),e.vmult(c,c),t.vadd(c,c);const p=c;(r===void 0||p.x<r)&&(r=p.x),(a===void 0||p.x>a)&&(a=p.x),(l===void 0||p.y<l)&&(l=p.y),(h===void 0||p.y>h)&&(h=p.y),(o===void 0||p.z<o)&&(o=p.z),(u===void 0||p.z>u)&&(u=p.z)}n.set(r,l,o),s.set(a,h,u)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){t===void 0&&(t=new f);const e=this.vertices;for(let n=0;n<e.length;n++)t.vadd(e[n],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const n=this.vertices.length,s=this.vertices;if(e){for(let i=0;i<n;i++){const r=s[i];e.vmult(r,r)}for(let i=0;i<this.faceNormals.length;i++){const r=this.faceNormals[i];e.vmult(r,r)}}if(t)for(let i=0;i<n;i++){const r=s[i];r.vadd(t,r)}}pointIsInside(t){const e=this.vertices,n=this.faces,s=this.faceNormals,i=null,r=new f;this.getAveragePointLocal(r);for(let l=0;l<this.faces.length;l++){let o=s[l];const a=e[n[l][0]],h=new f;t.vsub(a,h);const u=o.dot(h),c=new f;r.vsub(a,c);const d=o.dot(c);if(u<0&&d>0||u>0&&d<0)return!1}return i?1:-1}static project(t,e,n,s,i){const r=t.vertices.length,l=cs;let o=0,a=0;const h=hs,u=t.vertices;h.setZero(),j.vectorToLocalFrame(n,s,e,l),j.pointToLocalFrame(n,s,h,h);const c=h.dot(l);a=o=u[0].dot(l);for(let d=1;d<r;d++){const p=u[d].dot(l);p>o&&(o=p),p<a&&(a=p)}if(a-=c,o-=c,a>o){const d=a;a=o,o=d}i[0]=o,i[1]=a}}const re=[],le=[],as=new f,cs=new f,hs=new f;class Nt extends F{constructor(t){super({type:F.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,n=this.halfExtents.z,s=f,i=[new s(-t,-e,-n),new s(t,-e,-n),new s(t,e,-n),new s(-t,e,-n),new s(-t,-e,n),new s(t,-e,n),new s(t,e,n),new s(-t,e,n)],r=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],l=[new s(0,0,1),new s(0,1,0),new s(1,0,0)],o=new at({vertices:i,faces:r,axes:l});this.convexPolyhedronRepresentation=o,o.material=this.material}calculateLocalInertia(t,e){return e===void 0&&(e=new f),Nt.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,n){const s=t;n.x=1/12*e*(2*s.y*2*s.y+2*s.z*2*s.z),n.y=1/12*e*(2*s.x*2*s.x+2*s.z*2*s.z),n.z=1/12*e*(2*s.y*2*s.y+2*s.x*2*s.x)}getSideNormals(t,e){const n=t,s=this.halfExtents;if(n[0].set(s.x,0,0),n[1].set(0,s.y,0),n[2].set(0,0,s.z),n[3].set(-s.x,0,0),n[4].set(0,-s.y,0),n[5].set(0,0,-s.z),e!==void 0)for(let i=0;i!==n.length;i++)e.vmult(n[i],n[i]);return n}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,n){const s=this.halfExtents,i=[[s.x,s.y,s.z],[-s.x,s.y,s.z],[-s.x,-s.y,s.z],[-s.x,-s.y,-s.z],[s.x,-s.y,-s.z],[s.x,s.y,-s.z],[-s.x,s.y,-s.z],[s.x,-s.y,s.z]];for(let r=0;r<i.length;r++)mt.set(i[r][0],i[r][1],i[r][2]),e.vmult(mt,mt),t.vadd(mt,mt),n(mt.x,mt.y,mt.z)}calculateWorldAABB(t,e,n,s){const i=this.halfExtents;it[0].set(i.x,i.y,i.z),it[1].set(-i.x,i.y,i.z),it[2].set(-i.x,-i.y,i.z),it[3].set(-i.x,-i.y,-i.z),it[4].set(i.x,-i.y,-i.z),it[5].set(i.x,i.y,-i.z),it[6].set(-i.x,i.y,-i.z),it[7].set(i.x,-i.y,i.z);const r=it[0];e.vmult(r,r),t.vadd(r,r),s.copy(r),n.copy(r);for(let l=1;l<8;l++){const o=it[l];e.vmult(o,o),t.vadd(o,o);const a=o.x,h=o.y,u=o.z;a>s.x&&(s.x=a),h>s.y&&(s.y=h),u>s.z&&(s.z=u),a<n.x&&(n.x=a),h<n.y&&(n.y=h),u<n.z&&(n.z=u)}}}const mt=new f,it=[new f,new f,new f,new f,new f,new f,new f,new f],xe={DYNAMIC:1,STATIC:2,KINEMATIC:4},be={AWAKE:0,SLEEPY:1,SLEEPING:2};class R extends _n{constructor(t){t===void 0&&(t={}),super(),this.id=R.idCounter++,this.index=-1,this.world=null,this.vlambda=new f,this.collisionFilterGroup=typeof t.collisionFilterGroup=="number"?t.collisionFilterGroup:1,this.collisionFilterMask=typeof t.collisionFilterMask=="number"?t.collisionFilterMask:-1,this.collisionResponse=typeof t.collisionResponse=="boolean"?t.collisionResponse:!0,this.position=new f,this.previousPosition=new f,this.interpolatedPosition=new f,this.initPosition=new f,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new f,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new f,this.force=new f;const e=typeof t.mass=="number"?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping=typeof t.linearDamping=="number"?t.linearDamping:.01,this.type=e<=0?R.STATIC:R.DYNAMIC,typeof t.type==typeof R.STATIC&&(this.type=t.type),this.allowSleep=typeof t.allowSleep<"u"?t.allowSleep:!0,this.sleepState=R.AWAKE,this.sleepSpeedLimit=typeof t.sleepSpeedLimit<"u"?t.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof t.sleepTimeLimit<"u"?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new f,this.quaternion=new Y,this.initQuaternion=new Y,this.previousQuaternion=new Y,this.interpolatedQuaternion=new Y,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new f,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new f,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new f,this.invInertia=new f,this.invInertiaWorld=new st,this.invMassSolve=0,this.invInertiaSolve=new f,this.invInertiaWorldSolve=new st,this.fixedRotation=typeof t.fixedRotation<"u"?t.fixedRotation:!1,this.angularDamping=typeof t.angularDamping<"u"?t.angularDamping:.01,this.linearFactor=new f(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new f(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new D,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new f,this.isTrigger=Boolean(t.isTrigger),t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=R.AWAKE,this.wakeUpAfterNarrowphase=!1,t===R.SLEEPING&&this.dispatchEvent(R.wakeupEvent)}sleep(){this.sleepState=R.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,n=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),s=this.sleepSpeedLimit**2;e===R.AWAKE&&n<s?(this.sleepState=R.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(R.sleepyEvent)):e===R.SLEEPY&&n>s?this.wakeUp():e===R.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(R.sleepEvent))}}updateSolveMassProperties(){this.sleepState===R.SLEEPING||this.type===R.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return e===void 0&&(e=new f),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return e===void 0&&(e=new f),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return e===void 0&&(e=new f),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return e===void 0&&(e=new f),this.quaternion.vmult(t,e),e}addShape(t,e,n){const s=new f,i=new Y;return e&&s.copy(e),n&&i.copy(n),this.shapes.push(t),this.shapeOffsets.push(s),this.shapeOrientations.push(i),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return e===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,n=t.length;let s=0;for(let i=0;i!==n;i++){const r=t[i];r.updateBoundingSphereRadius();const l=e[i].length(),o=r.boundingSphereRadius;l+o>s&&(s=l+o)}this.boundingRadius=s}updateAABB(){const t=this.shapes,e=this.shapeOffsets,n=this.shapeOrientations,s=t.length,i=us,r=ds,l=this.quaternion,o=this.aabb,a=fs;for(let h=0;h!==s;h++){const u=t[h];l.vmult(e[h],i),i.vadd(this.position,i),l.mult(n[h],r),u.calculateWorldAABB(i,r,a.lowerBound,a.upperBound),h===0?o.copy(a):o.extend(a)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(!(e.x===e.y&&e.y===e.z&&!t)){const n=ps,s=ms;n.setRotationFromQuaternion(this.quaternion),n.transpose(s),n.scale(e,n),n.mmult(s,this.invInertiaWorld)}}applyForce(t,e){if(e===void 0&&(e=new f),this.type!==R.DYNAMIC)return;this.sleepState===R.SLEEPING&&this.wakeUp();const n=vs;e.cross(t,n),this.force.vadd(t,this.force),this.torque.vadd(n,this.torque)}applyLocalForce(t,e){if(e===void 0&&(e=new f),this.type!==R.DYNAMIC)return;const n=ys,s=gs;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,s),this.applyForce(n,s)}applyTorque(t){this.type===R.DYNAMIC&&(this.sleepState===R.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(e===void 0&&(e=new f),this.type!==R.DYNAMIC)return;this.sleepState===R.SLEEPING&&this.wakeUp();const n=e,s=xs;s.copy(t),s.scale(this.invMass,s),this.velocity.vadd(s,this.velocity);const i=bs;n.cross(t,i),this.invInertiaWorld.vmult(i,i),this.angularVelocity.vadd(i,this.angularVelocity)}applyLocalImpulse(t,e){if(e===void 0&&(e=new f),this.type!==R.DYNAMIC)return;const n=Es,s=_s;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,s),this.applyImpulse(n,s)}updateMassProperties(){const t=zs;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,n=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),Nt.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!n?1/e.x:0,e.y>0&&!n?1/e.y:0,e.z>0&&!n?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const n=new f;return t.vsub(this.position,n),this.angularVelocity.cross(n,e),this.velocity.vadd(e,e),e}integrate(t,e,n){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===R.DYNAMIC||this.type===R.KINEMATIC)||this.sleepState===R.SLEEPING)return;const s=this.velocity,i=this.angularVelocity,r=this.position,l=this.force,o=this.torque,a=this.quaternion,h=this.invMass,u=this.invInertiaWorld,c=this.linearFactor,d=h*t;s.x+=l.x*d*c.x,s.y+=l.y*d*c.y,s.z+=l.z*d*c.z;const p=u.elements,m=this.angularFactor,v=o.x*m.x,y=o.y*m.y,w=o.z*m.z;i.x+=t*(p[0]*v+p[1]*y+p[2]*w),i.y+=t*(p[3]*v+p[4]*y+p[5]*w),i.z+=t*(p[6]*v+p[7]*y+p[8]*w),r.x+=s.x*t,r.y+=s.y*t,r.z+=s.z*t,a.integrate(this.angularVelocity,t,this.angularFactor,a),e&&(n?a.normalizeFast():a.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}R.idCounter=0;R.COLLIDE_EVENT_NAME="collide";R.DYNAMIC=xe.DYNAMIC;R.STATIC=xe.STATIC;R.KINEMATIC=xe.KINEMATIC;R.AWAKE=be.AWAKE;R.SLEEPY=be.SLEEPY;R.SLEEPING=be.SLEEPING;R.wakeupEvent={type:"wakeup"};R.sleepyEvent={type:"sleepy"};R.sleepEvent={type:"sleep"};const us=new f,ds=new Y,fs=new D,ps=new st,ms=new st,ws=new st,vs=new f,ys=new f,gs=new f,xs=new f,bs=new f,Es=new f,_s=new f,zs=new f;class Cs{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,n){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return!((t.collisionFilterGroup&e.collisionFilterMask)===0||(e.collisionFilterGroup&t.collisionFilterMask)===0||((t.type&R.STATIC)!==0||t.sleepState===R.SLEEPING)&&((e.type&R.STATIC)!==0||e.sleepState===R.SLEEPING))}intersectionTest(t,e,n,s){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,n,s):this.doBoundingSphereBroadphase(t,e,n,s)}doBoundingSphereBroadphase(t,e,n,s){const i=As;e.position.vsub(t.position,i);const r=(t.boundingRadius+e.boundingRadius)**2;i.lengthSquared()<r&&(n.push(t),s.push(e))}doBoundingBoxBroadphase(t,e,n,s){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(n.push(t),s.push(e))}makePairsUnique(t,e){const n=Ms,s=Ts,i=Bs,r=t.length;for(let l=0;l!==r;l++)s[l]=t[l],i[l]=e[l];t.length=0,e.length=0;for(let l=0;l!==r;l++){const o=s[l].id,a=i[l].id,h=o<a?`${o},${a}`:`${a},${o}`;n[h]=l,n.keys.push(h)}for(let l=0;l!==n.keys.length;l++){const o=n.keys.pop(),a=n[o];t.push(s[a]),e.push(i[a]),delete n[o]}}setWorld(t){}static boundingSphereCheck(t,e){const n=new f;t.position.vsub(e.position,n);const s=t.shapes[0],i=e.shapes[0];return Math.pow(s.boundingSphereRadius+i.boundingSphereRadius,2)>n.lengthSquared()}aabbQuery(t,e,n){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const As=new f;new f;new Y;new f;const Ms={keys:[]},Ts=[],Bs=[];new f;new f;new f;class Ss extends Cs{constructor(){super()}collisionPairs(t,e,n){const s=t.bodies,i=s.length;let r,l;for(let o=0;o!==i;o++)for(let a=0;a!==o;a++)r=s[o],l=s[a],this.needBroadphaseCollision(r,l)&&this.intersectionTest(r,l,e,n)}aabbQuery(t,e,n){n===void 0&&(n=[]);for(let s=0;s<t.bodies.length;s++){const i=t.bodies[s];i.aabbNeedsUpdate&&i.updateAABB(),i.aabb.overlaps(e)&&n.push(i)}return n}}class Jt{constructor(){this.rayFromWorld=new f,this.rayToWorld=new f,this.hitNormalWorld=new f,this.hitPointWorld=new f,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,n,s,i,r,l){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(s),this.shape=i,this.body=r,this.distance=l}}let zn,Cn,An,Mn,Tn,Bn,Sn;const Ee={CLOSEST:1,ANY:2,ALL:4};zn=F.types.SPHERE;Cn=F.types.PLANE;An=F.types.BOX;Mn=F.types.CYLINDER;Tn=F.types.CONVEXPOLYHEDRON;Bn=F.types.HEIGHTFIELD;Sn=F.types.TRIMESH;class ${get[zn](){return this._intersectSphere}get[Cn](){return this._intersectPlane}get[An](){return this._intersectBox}get[Mn](){return this._intersectConvex}get[Tn](){return this._intersectConvex}get[Bn](){return this._intersectHeightfield}get[Sn](){return this._intersectTrimesh}constructor(t,e){t===void 0&&(t=new f),e===void 0&&(e=new f),this.from=t.clone(),this.to=e.clone(),this.direction=new f,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=$.ANY,this.result=new Jt,this.hasHit=!1,this.callback=n=>{}}intersectWorld(t,e){return this.mode=e.mode||$.ANY,this.result=e.result||new Jt,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=typeof e.collisionFilterMask<"u"?e.collisionFilterMask:-1,this.collisionFilterGroup=typeof e.collisionFilterGroup<"u"?e.collisionFilterGroup:-1,this.checkCollisionResponse=typeof e.checkCollisionResponse<"u"?e.checkCollisionResponse:!0,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(Re),ae.length=0,t.broadphase.aabbQuery(t,Re,ae),this.intersectBodies(ae),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const n=this.checkCollisionResponse;if(n&&!t.collisionResponse||(this.collisionFilterGroup&t.collisionFilterMask)===0||(t.collisionFilterGroup&this.collisionFilterMask)===0)return;const s=Ps,i=Fs;for(let r=0,l=t.shapes.length;r<l;r++){const o=t.shapes[r];if(!(n&&!o.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[r],i),t.quaternion.vmult(t.shapeOffsets[r],s),s.vadd(t.position,s),this.intersectShape(o,i,s,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let n=0,s=t.length;!this.result.shouldStop&&n<s;n++)this.intersectBody(t[n])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,n,s){const i=this.from;if(Ys(i,this.direction,n)>t.boundingSphereRadius)return;const l=this[t.type];l&&l.call(this,t,e,n,s,t)}_intersectBox(t,e,n,s,i){return this._intersectConvex(t.convexPolyhedronRepresentation,e,n,s,i)}_intersectPlane(t,e,n,s,i){const r=this.from,l=this.to,o=this.direction,a=new f(0,0,1);e.vmult(a,a);const h=new f;r.vsub(n,h);const u=h.dot(a);l.vsub(n,h);const c=h.dot(a);if(u*c>0||r.distanceTo(l)<u)return;const d=a.dot(o);if(Math.abs(d)<this.precision)return;const p=new f,m=new f,v=new f;r.vsub(n,p);const y=-a.dot(p)/d;o.scale(y,m),r.vadd(m,v),this.reportIntersection(a,v,i,s,-1)}getAABB(t){const{lowerBound:e,upperBound:n}=t,s=this.to,i=this.from;e.x=Math.min(s.x,i.x),e.y=Math.min(s.y,i.y),e.z=Math.min(s.z,i.z),n.x=Math.max(s.x,i.x),n.y=Math.max(s.y,i.y),n.z=Math.max(s.z,i.z)}_intersectHeightfield(t,e,n,s,i){t.data,t.elementSize;const r=Is;r.from.copy(this.from),r.to.copy(this.to),j.pointToLocalFrame(n,e,r.from,r.from),j.pointToLocalFrame(n,e,r.to,r.to),r.updateDirection();const l=Ns;let o,a,h,u;o=a=0,h=u=t.data.length-1;const c=new D;r.getAABB(c),t.getIndexOfPosition(c.lowerBound.x,c.lowerBound.y,l,!0),o=Math.max(o,l[0]),a=Math.max(a,l[1]),t.getIndexOfPosition(c.upperBound.x,c.upperBound.y,l,!0),h=Math.min(h,l[0]+1),u=Math.min(u,l[1]+1);for(let d=o;d<h;d++)for(let p=a;p<u;p++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(d,p,c),!!c.overlapsRay(r)){if(t.getConvexTrianglePillar(d,p,!1),j.pointToWorldFrame(n,e,t.pillarOffset,kt),this._intersectConvex(t.pillarConvex,e,kt,s,i,qe),this.result.shouldStop)return;t.getConvexTrianglePillar(d,p,!0),j.pointToWorldFrame(n,e,t.pillarOffset,kt),this._intersectConvex(t.pillarConvex,e,kt,s,i,qe)}}}_intersectSphere(t,e,n,s,i){const r=this.from,l=this.to,o=t.radius,a=(l.x-r.x)**2+(l.y-r.y)**2+(l.z-r.z)**2,h=2*((l.x-r.x)*(r.x-n.x)+(l.y-r.y)*(r.y-n.y)+(l.z-r.z)*(r.z-n.z)),u=(r.x-n.x)**2+(r.y-n.y)**2+(r.z-n.z)**2-o**2,c=h**2-4*a*u,d=Rs,p=qs;if(!(c<0))if(c===0)r.lerp(l,c,d),d.vsub(n,p),p.normalize(),this.reportIntersection(p,d,i,s,-1);else{const m=(-h-Math.sqrt(c))/(2*a),v=(-h+Math.sqrt(c))/(2*a);if(m>=0&&m<=1&&(r.lerp(l,m,d),d.vsub(n,p),p.normalize(),this.reportIntersection(p,d,i,s,-1)),this.result.shouldStop)return;v>=0&&v<=1&&(r.lerp(l,v,d),d.vsub(n,p),p.normalize(),this.reportIntersection(p,d,i,s,-1))}}_intersectConvex(t,e,n,s,i,r){const l=Vs,o=Ve,a=r&&r.faceList||null,h=t.faces,u=t.vertices,c=t.faceNormals,d=this.direction,p=this.from,m=this.to,v=p.distanceTo(m),y=a?a.length:h.length,w=this.result;for(let b=0;!w.shouldStop&&b<y;b++){const E=a?a[b]:b,x=h[E],C=c[E],T=e,S=n;o.copy(u[x[0]]),T.vmult(o,o),o.vadd(S,o),o.vsub(p,o),T.vmult(C,l);const N=d.dot(l);if(Math.abs(N)<this.precision)continue;const z=l.dot(o)/N;if(!(z<0)){d.scale(z,J),J.vadd(p,J),et.copy(u[x[0]]),T.vmult(et,et),S.vadd(et,et);for(let M=1;!w.shouldStop&&M<x.length-1;M++){ot.copy(u[x[M]]),rt.copy(u[x[M+1]]),T.vmult(ot,ot),T.vmult(rt,rt),S.vadd(ot,ot),S.vadd(rt,rt);const I=J.distanceTo(p);!($.pointInTriangle(J,et,ot,rt)||$.pointInTriangle(J,ot,et,rt))||I>v||this.reportIntersection(l,J,i,s,E)}}}}_intersectTrimesh(t,e,n,s,i,r){const l=Ls,o=Gs,a=Ds,h=Ve,u=ks,c=Os,d=js,p=Ws,m=Hs,v=t.indices;t.vertices;const y=this.from,w=this.to,b=this.direction;a.position.copy(n),a.quaternion.copy(e),j.vectorToLocalFrame(n,e,b,u),j.pointToLocalFrame(n,e,y,c),j.pointToLocalFrame(n,e,w,d),d.x*=t.scale.x,d.y*=t.scale.y,d.z*=t.scale.z,c.x*=t.scale.x,c.y*=t.scale.y,c.z*=t.scale.z,d.vsub(c,u),u.normalize();const E=c.distanceSquared(d);t.tree.rayQuery(this,a,o);for(let x=0,C=o.length;!this.result.shouldStop&&x!==C;x++){const T=o[x];t.getNormal(T,l),t.getVertex(v[T*3],et),et.vsub(c,h);const S=u.dot(l),N=l.dot(h)/S;if(N<0)continue;u.scale(N,J),J.vadd(c,J),t.getVertex(v[T*3+1],ot),t.getVertex(v[T*3+2],rt);const z=J.distanceSquared(c);!($.pointInTriangle(J,ot,et,rt)||$.pointInTriangle(J,et,ot,rt))||z>E||(j.vectorToWorldFrame(e,l,m),j.pointToWorldFrame(n,e,J,p),this.reportIntersection(m,p,i,s,T))}o.length=0}reportIntersection(t,e,n,s,i){const r=this.from,l=this.to,o=r.distanceTo(e),a=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(a.hitFaceIndex=typeof i<"u"?i:-1,this.mode){case $.ALL:this.hasHit=!0,a.set(r,l,t,e,n,s,o),a.hasHit=!0,this.callback(a);break;case $.CLOSEST:(o<a.distance||!a.hasHit)&&(this.hasHit=!0,a.hasHit=!0,a.set(r,l,t,e,n,s,o));break;case $.ANY:this.hasHit=!0,a.hasHit=!0,a.set(r,l,t,e,n,s,o),a.shouldStop=!0;break}}static pointInTriangle(t,e,n,s){s.vsub(e,gt),n.vsub(e,Tt),t.vsub(e,ce);const i=gt.dot(gt),r=gt.dot(Tt),l=gt.dot(ce),o=Tt.dot(Tt),a=Tt.dot(ce);let h,u;return(h=o*l-r*a)>=0&&(u=i*a-r*l)>=0&&h+u<i*o-r*r}}$.CLOSEST=Ee.CLOSEST;$.ANY=Ee.ANY;$.ALL=Ee.ALL;const Re=new D,ae=[],Tt=new f,ce=new f,Ps=new f,Fs=new Y,J=new f,et=new f,ot=new f,rt=new f;new f;new Jt;const qe={faceList:[0]},kt=new f,Is=new $,Ns=[],Rs=new f,qs=new f,Vs=new f;new f;new f;const Ve=new f,Ls=new f,ks=new f,Os=new f,js=new f,Hs=new f,Ws=new f;new D;const Gs=[],Ds=new j,gt=new f,Ot=new f;function Ys(g,t,e){e.vsub(g,gt);const n=gt.dot(t);return t.scale(n,Ot),Ot.vadd(g,Ot),e.distanceTo(Ot)}class Pn{static defaults(t,e){t===void 0&&(t={});for(let n in e)n in t||(t[n]=e[n]);return t}}class Le{constructor(){this.spatial=new f,this.rotational=new f}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class Rt{constructor(t,e,n,s){n===void 0&&(n=-1e6),s===void 0&&(s=1e6),this.id=Rt.idCounter++,this.minForce=n,this.maxForce=s,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new Le,this.jacobianElementB=new Le,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,n){const s=e,i=t,r=n;this.a=4/(r*(1+4*s)),this.b=4*s/(1+4*s),this.eps=4/(r*r*i*(1+4*s))}computeB(t,e,n){const s=this.computeGW(),i=this.computeGq(),r=this.computeGiMf();return-i*t-s*e-r*n}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,s=this.bj,i=n.position,r=s.position;return t.spatial.dot(i)+e.spatial.dot(r)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,s=this.bj,i=n.velocity,r=s.velocity,l=n.angularVelocity,o=s.angularVelocity;return t.multiplyVectors(i,l)+e.multiplyVectors(r,o)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,s=this.bj,i=n.vlambda,r=s.vlambda,l=n.wlambda,o=s.wlambda;return t.multiplyVectors(i,l)+e.multiplyVectors(r,o)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,s=this.bj,i=n.force,r=n.torque,l=s.force,o=s.torque,a=n.invMassSolve,h=s.invMassSolve;return i.scale(a,ke),l.scale(h,Oe),n.invInertiaWorldSolve.vmult(r,je),s.invInertiaWorldSolve.vmult(o,He),t.multiplyVectors(ke,je)+e.multiplyVectors(Oe,He)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,s=this.bj,i=n.invMassSolve,r=s.invMassSolve,l=n.invInertiaWorldSolve,o=s.invInertiaWorldSolve;let a=i+r;return l.vmult(t.rotational,jt),a+=jt.dot(t.rotational),o.vmult(e.rotational,jt),a+=jt.dot(e.rotational),a}addToWlambda(t){const e=this.jacobianElementA,n=this.jacobianElementB,s=this.bi,i=this.bj,r=Us;s.vlambda.addScaledVector(s.invMassSolve*t,e.spatial,s.vlambda),i.vlambda.addScaledVector(i.invMassSolve*t,n.spatial,i.vlambda),s.invInertiaWorldSolve.vmult(e.rotational,r),s.wlambda.addScaledVector(t,r,s.wlambda),i.invInertiaWorldSolve.vmult(n.rotational,r),i.wlambda.addScaledVector(t,r,i.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}Rt.idCounter=0;const ke=new f,Oe=new f,je=new f,He=new f,jt=new f,Us=new f;class Xs extends Rt{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,0,n),this.restitution=0,this.ri=new f,this.rj=new f,this.ni=new f}computeB(t){const e=this.a,n=this.b,s=this.bi,i=this.bj,r=this.ri,l=this.rj,o=$s,a=Ks,h=s.velocity,u=s.angularVelocity;s.force,s.torque;const c=i.velocity,d=i.angularVelocity;i.force,i.torque;const p=Zs,m=this.jacobianElementA,v=this.jacobianElementB,y=this.ni;r.cross(y,o),l.cross(y,a),y.negate(m.spatial),o.negate(m.rotational),v.spatial.copy(y),v.rotational.copy(a),p.copy(i.position),p.vadd(l,p),p.vsub(s.position,p),p.vsub(r,p);const w=y.dot(p),b=this.restitution+1,E=b*c.dot(y)-b*h.dot(y)+d.dot(a)-u.dot(o),x=this.computeGiMf();return-w*e-E*n-t*x}getImpactVelocityAlongNormal(){const t=Qs,e=Js,n=ti,s=ei,i=ni;return this.bi.position.vadd(this.ri,n),this.bj.position.vadd(this.rj,s),this.bi.getVelocityAtWorldPoint(n,t),this.bj.getVelocityAtWorldPoint(s,e),t.vsub(e,i),this.ni.dot(i)}}const $s=new f,Ks=new f,Zs=new f,Qs=new f,Js=new f,ti=new f,ei=new f,ni=new f;new f;new f;new f;new f;new f;new f;new f;new f;new f;new f;class We extends Rt{constructor(t,e,n){super(t,e,-n,n),this.ri=new f,this.rj=new f,this.t=new f}computeB(t){this.a;const e=this.b;this.bi,this.bj;const n=this.ri,s=this.rj,i=si,r=ii,l=this.t;n.cross(l,i),s.cross(l,r);const o=this.jacobianElementA,a=this.jacobianElementB;l.negate(o.spatial),i.negate(o.rotational),a.spatial.copy(l),a.rotational.copy(r);const h=this.computeGW(),u=this.computeGiMf();return-h*e-t*u}}const si=new f,ii=new f;class ne{constructor(t,e,n){n=Pn.defaults(n,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=ne.idCounter++,this.materials=[t,e],this.friction=n.friction,this.restitution=n.restitution,this.contactEquationStiffness=n.contactEquationStiffness,this.contactEquationRelaxation=n.contactEquationRelaxation,this.frictionEquationStiffness=n.frictionEquationStiffness,this.frictionEquationRelaxation=n.frictionEquationRelaxation}}ne.idCounter=0;class se{constructor(t){t===void 0&&(t={});let e="";typeof t=="string"&&(e=t,t={}),this.name=e,this.id=se.idCounter++,this.friction=typeof t.friction<"u"?t.friction:-1,this.restitution=typeof t.restitution<"u"?t.restitution:-1}}se.idCounter=0;new f;new f;new f;new f;new f;new f;new f;new f;new f;new f;new f;new f;new f;new f;new f;new f;new f;new f;new f;new $;new f;new f;new f;new f(1,0,0),new f(0,1,0),new f(0,0,1);new f;new f;new f;new f;new f;new f;new f;new f;new f;new f;new f;class Fn extends F{constructor(t){if(super({type:F.types.SPHERE}),this.radius=t!==void 0?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){e===void 0&&(e=new f);const n=2*t*this.radius*this.radius/5;return e.x=n,e.y=n,e.z=n,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,n,s){const i=this.radius,r=["x","y","z"];for(let l=0;l<r.length;l++){const o=r[l];n[o]=t[o]-i,s[o]=t[o]+i}}}new f;new f;new f;new f;new f;new f;new f;new f;new f;class In extends at{constructor(t,e,n,s){if(t===void 0&&(t=1),e===void 0&&(e=1),n===void 0&&(n=1),s===void 0&&(s=8),t<0)throw new Error("The cylinder radiusTop cannot be negative.");if(e<0)throw new Error("The cylinder radiusBottom cannot be negative.");const i=s,r=[],l=[],o=[],a=[],h=[],u=Math.cos,c=Math.sin;r.push(new f(-e*c(0),-n*.5,e*u(0))),a.push(0),r.push(new f(-t*c(0),n*.5,t*u(0))),h.push(1);for(let p=0;p<i;p++){const m=2*Math.PI/i*(p+1),v=2*Math.PI/i*(p+.5);p<i-1?(r.push(new f(-e*c(m),-n*.5,e*u(m))),a.push(2*p+2),r.push(new f(-t*c(m),n*.5,t*u(m))),h.push(2*p+3),o.push([2*p,2*p+1,2*p+3,2*p+2])):o.push([2*p,2*p+1,1,0]),(i%2===1||p<i/2)&&l.push(new f(-c(v),0,u(v)))}o.push(a),l.push(new f(0,1,0));const d=[];for(let p=0;p<h.length;p++)d.push(h[h.length-p-1]);o.push(d),super({vertices:r,faces:o,axes:l}),this.type=F.types.CYLINDER,this.radiusTop=t,this.radiusBottom=e,this.height=n,this.numSegments=s}}class Nn extends F{constructor(){super({type:F.types.PLANE}),this.worldNormal=new f,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(t){const e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(t,e){return e===void 0&&(e=new f),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,n,s){ct.set(0,0,1),e.vmult(ct,ct);const i=Number.MAX_VALUE;n.set(-i,-i,-i),s.set(i,i,i),ct.x===1?s.x=t.x:ct.x===-1&&(n.x=t.x),ct.y===1?s.y=t.y:ct.y===-1&&(n.y=t.y),ct.z===1?s.z=t.z:ct.z===-1&&(n.z=t.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const ct=new f;class oi extends F{constructor(t,e){e===void 0&&(e={}),e=Pn.defaults(e,{maxValue:null,minValue:null,elementSize:1}),super({type:F.types.HEIGHTFIELD}),this.data=t,this.maxValue=e.maxValue,this.minValue=e.minValue,this.elementSize=e.elementSize,e.minValue===null&&this.updateMinValue(),e.maxValue===null&&this.updateMaxValue(),this.cacheEnabled=!0,this.pillarConvex=new at,this.pillarOffset=new f,this.updateBoundingSphereRadius(),this._cachedPillars={}}update(){this._cachedPillars={}}updateMinValue(){const t=this.data;let e=t[0][0];for(let n=0;n!==t.length;n++)for(let s=0;s!==t[n].length;s++){const i=t[n][s];i<e&&(e=i)}this.minValue=e}updateMaxValue(){const t=this.data;let e=t[0][0];for(let n=0;n!==t.length;n++)for(let s=0;s!==t[n].length;s++){const i=t[n][s];i>e&&(e=i)}this.maxValue=e}setHeightValueAtIndex(t,e,n){const s=this.data;s[t][e]=n,this.clearCachedConvexTrianglePillar(t,e,!1),t>0&&(this.clearCachedConvexTrianglePillar(t-1,e,!0),this.clearCachedConvexTrianglePillar(t-1,e,!1)),e>0&&(this.clearCachedConvexTrianglePillar(t,e-1,!0),this.clearCachedConvexTrianglePillar(t,e-1,!1)),e>0&&t>0&&this.clearCachedConvexTrianglePillar(t-1,e-1,!0)}getRectMinMax(t,e,n,s,i){i===void 0&&(i=[]);const r=this.data;let l=this.minValue;for(let o=t;o<=n;o++)for(let a=e;a<=s;a++){const h=r[o][a];h>l&&(l=h)}i[0]=this.minValue,i[1]=l}getIndexOfPosition(t,e,n,s){const i=this.elementSize,r=this.data;let l=Math.floor(t/i),o=Math.floor(e/i);return n[0]=l,n[1]=o,s&&(l<0&&(l=0),o<0&&(o=0),l>=r.length-1&&(l=r.length-1),o>=r[0].length-1&&(o=r[0].length-1)),!(l<0||o<0||l>=r.length-1||o>=r[0].length-1)}getTriangleAt(t,e,n,s,i,r){const l=Ge;this.getIndexOfPosition(t,e,l,n);let o=l[0],a=l[1];const h=this.data;n&&(o=Math.min(h.length-2,Math.max(0,o)),a=Math.min(h[0].length-2,Math.max(0,a)));const u=this.elementSize,c=(t/u-o)**2+(e/u-a)**2,d=(t/u-(o+1))**2+(e/u-(a+1))**2,p=c>d;return this.getTriangle(o,a,p,s,i,r),p}getNormalAt(t,e,n,s){const i=ci,r=hi,l=ui,o=di,a=fi;this.getTriangleAt(t,e,n,i,r,l),r.vsub(i,o),l.vsub(i,a),o.cross(a,s),s.normalize()}getAabbAtIndex(t,e,n){let{lowerBound:s,upperBound:i}=n;const r=this.data,l=this.elementSize;s.set(t*l,e*l,r[t][e]),i.set((t+1)*l,(e+1)*l,r[t+1][e+1])}getHeightAt(t,e,n){const s=this.data,i=ri,r=li,l=ai,o=Ge;this.getIndexOfPosition(t,e,o,n);let a=o[0],h=o[1];n&&(a=Math.min(s.length-2,Math.max(0,a)),h=Math.min(s[0].length-2,Math.max(0,h)));const u=this.getTriangleAt(t,e,n,i,r,l);pi(t,e,i.x,i.y,r.x,r.y,l.x,l.y,De);const c=De;return u?s[a+1][h+1]*c.x+s[a][h+1]*c.y+s[a+1][h]*c.z:s[a][h]*c.x+s[a+1][h]*c.y+s[a][h+1]*c.z}getCacheConvexTrianglePillarKey(t,e,n){return`${t}_${e}_${n?1:0}`}getCachedConvexTrianglePillar(t,e,n){return this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,n)]}setCachedConvexTrianglePillar(t,e,n,s,i){this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,n)]={convex:s,offset:i}}clearCachedConvexTrianglePillar(t,e,n){delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,n)]}getTriangle(t,e,n,s,i,r){const l=this.data,o=this.elementSize;n?(s.set((t+1)*o,(e+1)*o,l[t+1][e+1]),i.set(t*o,(e+1)*o,l[t][e+1]),r.set((t+1)*o,e*o,l[t+1][e])):(s.set(t*o,e*o,l[t][e]),i.set((t+1)*o,e*o,l[t+1][e]),r.set(t*o,(e+1)*o,l[t][e+1]))}getConvexTrianglePillar(t,e,n){let s=this.pillarConvex,i=this.pillarOffset;if(this.cacheEnabled){const u=this.getCachedConvexTrianglePillar(t,e,n);if(u){this.pillarConvex=u.convex,this.pillarOffset=u.offset;return}s=new at,i=new f,this.pillarConvex=s,this.pillarOffset=i}const r=this.data,l=this.elementSize,o=s.faces;s.vertices.length=6;for(let u=0;u<6;u++)s.vertices[u]||(s.vertices[u]=new f);o.length=5;for(let u=0;u<5;u++)o[u]||(o[u]=[]);const a=s.vertices,h=(Math.min(r[t][e],r[t+1][e],r[t][e+1],r[t+1][e+1])-this.minValue)/2+this.minValue;n?(i.set((t+.75)*l,(e+.75)*l,h),a[0].set(.25*l,.25*l,r[t+1][e+1]-h),a[1].set(-.75*l,.25*l,r[t][e+1]-h),a[2].set(.25*l,-.75*l,r[t+1][e]-h),a[3].set(.25*l,.25*l,-Math.abs(h)-1),a[4].set(-.75*l,.25*l,-Math.abs(h)-1),a[5].set(.25*l,-.75*l,-Math.abs(h)-1),o[0][0]=0,o[0][1]=1,o[0][2]=2,o[1][0]=5,o[1][1]=4,o[1][2]=3,o[2][0]=2,o[2][1]=5,o[2][2]=3,o[2][3]=0,o[3][0]=3,o[3][1]=4,o[3][2]=1,o[3][3]=0,o[4][0]=1,o[4][1]=4,o[4][2]=5,o[4][3]=2):(i.set((t+.25)*l,(e+.25)*l,h),a[0].set(-.25*l,-.25*l,r[t][e]-h),a[1].set(.75*l,-.25*l,r[t+1][e]-h),a[2].set(-.25*l,.75*l,r[t][e+1]-h),a[3].set(-.25*l,-.25*l,-Math.abs(h)-1),a[4].set(.75*l,-.25*l,-Math.abs(h)-1),a[5].set(-.25*l,.75*l,-Math.abs(h)-1),o[0][0]=0,o[0][1]=1,o[0][2]=2,o[1][0]=5,o[1][1]=4,o[1][2]=3,o[2][0]=0,o[2][1]=2,o[2][2]=5,o[2][3]=3,o[3][0]=1,o[3][1]=0,o[3][2]=3,o[3][3]=4,o[4][0]=4,o[4][1]=5,o[4][2]=2,o[4][3]=1),s.computeNormals(),s.computeEdges(),s.updateBoundingSphereRadius(),this.setCachedConvexTrianglePillar(t,e,n,s,i)}calculateLocalInertia(t,e){return e===void 0&&(e=new f),e.set(0,0,0),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,n,s){n.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),s.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)}updateBoundingSphereRadius(){const t=this.data,e=this.elementSize;this.boundingSphereRadius=new f(t.length*e,t[0].length*e,Math.max(Math.abs(this.maxValue),Math.abs(this.minValue))).length()}setHeightsFromImage(t,e){const{x:n,z:s,y:i}=e,r=document.createElement("canvas");r.width=t.width,r.height=t.height;const l=r.getContext("2d");l.drawImage(t,0,0);const o=l.getImageData(0,0,t.width,t.height),a=this.data;a.length=0,this.elementSize=Math.abs(n)/o.width;for(let h=0;h<o.height;h++){const u=[];for(let c=0;c<o.width;c++){const d=o.data[(h*o.height+c)*4],p=o.data[(h*o.height+c)*4+1],m=o.data[(h*o.height+c)*4+2],v=(d+p+m)/4/255*s;n<0?u.push(v):u.unshift(v)}i<0?a.unshift(u):a.push(u)}this.updateMaxValue(),this.updateMinValue(),this.update()}}const Ge=[],De=new f,ri=new f,li=new f,ai=new f,ci=new f,hi=new f,ui=new f,di=new f,fi=new f;function pi(g,t,e,n,s,i,r,l,o){o.x=((i-l)*(g-r)+(r-s)*(t-l))/((i-l)*(e-r)+(r-s)*(n-l)),o.y=((l-n)*(g-r)+(e-r)*(t-l))/((i-l)*(e-r)+(r-s)*(n-l)),o.z=1-o.x-o.y}class lt{constructor(t){t===void 0&&(t={}),this.root=t.root||null,this.aabb=t.aabb?t.aabb.clone():new D,this.data=[],this.children=[]}reset(){this.children.length=this.data.length=0}insert(t,e,n){n===void 0&&(n=0);const s=this.data;if(!this.aabb.contains(t))return!1;const i=this.children,r=this.maxDepth||this.root.maxDepth;if(n<r){let l=!1;i.length||(this.subdivide(),l=!0);for(let o=0;o!==8;o++)if(i[o].insert(t,e,n+1))return!0;l&&(i.length=0)}return s.push(e),!0}subdivide(){const t=this.aabb,e=t.lowerBound,n=t.upperBound,s=this.children;s.push(new lt({aabb:new D({lowerBound:new f(0,0,0)})}),new lt({aabb:new D({lowerBound:new f(1,0,0)})}),new lt({aabb:new D({lowerBound:new f(1,1,0)})}),new lt({aabb:new D({lowerBound:new f(1,1,1)})}),new lt({aabb:new D({lowerBound:new f(0,1,1)})}),new lt({aabb:new D({lowerBound:new f(0,0,1)})}),new lt({aabb:new D({lowerBound:new f(1,0,1)})}),new lt({aabb:new D({lowerBound:new f(0,1,0)})})),n.vsub(e,wt),wt.scale(.5,wt);const i=this.root||this;for(let r=0;r!==8;r++){const l=s[r];l.root=i;const o=l.aabb.lowerBound;o.x*=wt.x,o.y*=wt.y,o.z*=wt.z,o.vadd(e,o),o.vadd(wt,l.aabb.upperBound)}}aabbQuery(t,e){this.data,this.children;const n=[this];for(;n.length;){const s=n.pop();s.aabb.overlaps(t)&&Array.prototype.push.apply(e,s.data),Array.prototype.push.apply(n,s.children)}return e}rayQuery(t,e,n){return t.getAABB(Ht),Ht.toLocalFrame(e,Ht),this.aabbQuery(Ht,n),n}removeEmptyNodes(){for(let t=this.children.length-1;t>=0;t--)this.children[t].removeEmptyNodes(),!this.children[t].children.length&&!this.children[t].data.length&&this.children.splice(t,1)}}class mi extends lt{constructor(t,e){e===void 0&&(e={}),super({root:null,aabb:t}),this.maxDepth=typeof e.maxDepth<"u"?e.maxDepth:8}}const wt=new f,Ht=new D;class It extends F{constructor(t,e){super({type:F.types.TRIMESH}),this.vertices=new Float32Array(t),this.indices=new Int16Array(e),this.normals=new Float32Array(e.length),this.aabb=new D,this.edges=null,this.scale=new f(1,1,1),this.tree=new mi,this.updateEdges(),this.updateNormals(),this.updateAABB(),this.updateBoundingSphereRadius(),this.updateTree()}updateTree(){const t=this.tree;t.reset(),t.aabb.copy(this.aabb);const e=this.scale;t.aabb.lowerBound.x*=1/e.x,t.aabb.lowerBound.y*=1/e.y,t.aabb.lowerBound.z*=1/e.z,t.aabb.upperBound.x*=1/e.x,t.aabb.upperBound.y*=1/e.y,t.aabb.upperBound.z*=1/e.z;const n=new D,s=new f,i=new f,r=new f,l=[s,i,r];for(let o=0;o<this.indices.length/3;o++){const a=o*3;this._getUnscaledVertex(this.indices[a],s),this._getUnscaledVertex(this.indices[a+1],i),this._getUnscaledVertex(this.indices[a+2],r),n.setFromPoints(l),t.insert(n,o)}t.removeEmptyNodes()}getTrianglesInAABB(t,e){Wt.copy(t);const n=this.scale,s=n.x,i=n.y,r=n.z,l=Wt.lowerBound,o=Wt.upperBound;return l.x/=s,l.y/=i,l.z/=r,o.x/=s,o.y/=i,o.z/=r,this.tree.aabbQuery(Wt,e)}setScale(t){const e=this.scale.x===this.scale.y&&this.scale.y===this.scale.z,n=t.x===t.y&&t.y===t.z;e&&n||this.updateNormals(),this.scale.copy(t),this.updateAABB(),this.updateBoundingSphereRadius()}updateNormals(){const t=wi,e=this.normals;for(let n=0;n<this.indices.length/3;n++){const s=n*3,i=this.indices[s],r=this.indices[s+1],l=this.indices[s+2];this.getVertex(i,Xe),this.getVertex(r,$e),this.getVertex(l,Ke),It.computeNormal($e,Xe,Ke,t),e[s]=t.x,e[s+1]=t.y,e[s+2]=t.z}}updateEdges(){const t={},e=(s,i)=>{const r=s<i?`${s}_${i}`:`${i}_${s}`;t[r]=!0};for(let s=0;s<this.indices.length/3;s++){const i=s*3,r=this.indices[i],l=this.indices[i+1],o=this.indices[i+2];e(r,l),e(l,o),e(o,r)}const n=Object.keys(t);this.edges=new Int16Array(n.length*2);for(let s=0;s<n.length;s++){const i=n[s].split("_");this.edges[2*s]=parseInt(i[0],10),this.edges[2*s+1]=parseInt(i[1],10)}}getEdgeVertex(t,e,n){const s=this.edges[t*2+(e?1:0)];this.getVertex(s,n)}getEdgeVector(t,e){const n=vi,s=yi;this.getEdgeVertex(t,0,n),this.getEdgeVertex(t,1,s),s.vsub(n,e)}static computeNormal(t,e,n,s){e.vsub(t,Ue),n.vsub(e,Ye),Ye.cross(Ue,s),s.isZero()||s.normalize()}getVertex(t,e){const n=this.scale;return this._getUnscaledVertex(t,e),e.x*=n.x,e.y*=n.y,e.z*=n.z,e}_getUnscaledVertex(t,e){const n=t*3,s=this.vertices;return e.set(s[n],s[n+1],s[n+2])}getWorldVertex(t,e,n,s){return this.getVertex(t,s),j.pointToWorldFrame(e,n,s,s),s}getTriangleVertices(t,e,n,s){const i=t*3;this.getVertex(this.indices[i],e),this.getVertex(this.indices[i+1],n),this.getVertex(this.indices[i+2],s)}getNormal(t,e){const n=t*3;return e.set(this.normals[n],this.normals[n+1],this.normals[n+2])}calculateLocalInertia(t,e){this.computeLocalAABB(vt);const n=vt.upperBound.x-vt.lowerBound.x,s=vt.upperBound.y-vt.lowerBound.y,i=vt.upperBound.z-vt.lowerBound.z;return e.set(1/12*t*(2*s*2*s+2*i*2*i),1/12*t*(2*n*2*n+2*i*2*i),1/12*t*(2*s*2*s+2*n*2*n))}computeLocalAABB(t){const e=t.lowerBound,n=t.upperBound,s=this.vertices.length;this.vertices;const i=gi;this.getVertex(0,i),e.copy(i),n.copy(i);for(let r=0;r!==s;r++)this.getVertex(r,i),i.x<e.x?e.x=i.x:i.x>n.x&&(n.x=i.x),i.y<e.y?e.y=i.y:i.y>n.y&&(n.y=i.y),i.z<e.z?e.z=i.z:i.z>n.z&&(n.z=i.z)}updateAABB(){this.computeLocalAABB(this.aabb)}updateBoundingSphereRadius(){let t=0;const e=this.vertices,n=new f;for(let s=0,i=e.length/3;s!==i;s++){this.getVertex(s,n);const r=n.lengthSquared();r>t&&(t=r)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,n,s){const i=xi,r=bi;i.position=t,i.quaternion=e,this.aabb.toWorldFrame(i,r),n.copy(r.lowerBound),s.copy(r.upperBound)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}static createTorus(t,e,n,s,i){t===void 0&&(t=1),e===void 0&&(e=.5),n===void 0&&(n=8),s===void 0&&(s=6),i===void 0&&(i=Math.PI*2);const r=[],l=[];for(let o=0;o<=n;o++)for(let a=0;a<=s;a++){const h=a/s*i,u=o/n*Math.PI*2,c=(t+e*Math.cos(u))*Math.cos(h),d=(t+e*Math.cos(u))*Math.sin(h),p=e*Math.sin(u);r.push(c,d,p)}for(let o=1;o<=n;o++)for(let a=1;a<=s;a++){const h=(s+1)*o+a-1,u=(s+1)*(o-1)+a-1,c=(s+1)*(o-1)+a,d=(s+1)*o+a;l.push(h,u,d),l.push(u,c,d)}return new It(r,l)}}const wi=new f,Wt=new D,vi=new f,yi=new f,Ye=new f,Ue=new f,Xe=new f,$e=new f,Ke=new f,vt=new D,gi=new f,xi=new j,bi=new D;class Ei{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){t.enabled&&!t.bi.isTrigger&&!t.bj.isTrigger&&this.equations.push(t)}removeEquation(t){const e=this.equations,n=e.indexOf(t);n!==-1&&e.splice(n,1)}removeAllEquations(){this.equations.length=0}}class _i extends Ei{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let n=0;const s=this.iterations,i=this.tolerance*this.tolerance,r=this.equations,l=r.length,o=e.bodies,a=o.length,h=t;let u,c,d,p,m,v;if(l!==0)for(let E=0;E!==a;E++)o[E].updateSolveMassProperties();const y=Ci,w=Ai,b=zi;y.length=l,w.length=l,b.length=l;for(let E=0;E!==l;E++){const x=r[E];b[E]=0,w[E]=x.computeB(h),y[E]=1/x.computeC()}if(l!==0){for(let C=0;C!==a;C++){const T=o[C],S=T.vlambda,N=T.wlambda;S.set(0,0,0),N.set(0,0,0)}for(n=0;n!==s;n++){p=0;for(let C=0;C!==l;C++){const T=r[C];u=w[C],c=y[C],v=b[C],m=T.computeGWlambda(),d=c*(u-m-T.eps*v),v+d<T.minForce?d=T.minForce-v:v+d>T.maxForce&&(d=T.maxForce-v),b[C]+=d,p+=d>0?d:-d,T.addToWlambda(d)}if(p*p<i)break}for(let C=0;C!==a;C++){const T=o[C],S=T.velocity,N=T.angularVelocity;T.vlambda.vmul(T.linearFactor,T.vlambda),S.vadd(T.vlambda,S),T.wlambda.vmul(T.angularFactor,T.wlambda),N.vadd(T.wlambda,N)}let E=r.length;const x=1/h;for(;E--;)r[E].multiplier=b[E]*x}return n}}const zi=[],Ci=[],Ai=[];R.STATIC;class Mi{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class Ti extends Mi{constructor(){super(...arguments),this.type=f}constructObject(){return new f}}const G={sphereSphere:F.types.SPHERE,spherePlane:F.types.SPHERE|F.types.PLANE,boxBox:F.types.BOX|F.types.BOX,sphereBox:F.types.SPHERE|F.types.BOX,planeBox:F.types.PLANE|F.types.BOX,convexConvex:F.types.CONVEXPOLYHEDRON,sphereConvex:F.types.SPHERE|F.types.CONVEXPOLYHEDRON,planeConvex:F.types.PLANE|F.types.CONVEXPOLYHEDRON,boxConvex:F.types.BOX|F.types.CONVEXPOLYHEDRON,sphereHeightfield:F.types.SPHERE|F.types.HEIGHTFIELD,boxHeightfield:F.types.BOX|F.types.HEIGHTFIELD,convexHeightfield:F.types.CONVEXPOLYHEDRON|F.types.HEIGHTFIELD,sphereParticle:F.types.PARTICLE|F.types.SPHERE,planeParticle:F.types.PLANE|F.types.PARTICLE,boxParticle:F.types.BOX|F.types.PARTICLE,convexParticle:F.types.PARTICLE|F.types.CONVEXPOLYHEDRON,cylinderCylinder:F.types.CYLINDER,sphereCylinder:F.types.SPHERE|F.types.CYLINDER,planeCylinder:F.types.PLANE|F.types.CYLINDER,boxCylinder:F.types.BOX|F.types.CYLINDER,convexCylinder:F.types.CONVEXPOLYHEDRON|F.types.CYLINDER,heightfieldCylinder:F.types.HEIGHTFIELD|F.types.CYLINDER,particleCylinder:F.types.PARTICLE|F.types.CYLINDER,sphereTrimesh:F.types.SPHERE|F.types.TRIMESH,planeTrimesh:F.types.PLANE|F.types.TRIMESH};class Bi{get[G.sphereSphere](){return this.sphereSphere}get[G.spherePlane](){return this.spherePlane}get[G.boxBox](){return this.boxBox}get[G.sphereBox](){return this.sphereBox}get[G.planeBox](){return this.planeBox}get[G.convexConvex](){return this.convexConvex}get[G.sphereConvex](){return this.sphereConvex}get[G.planeConvex](){return this.planeConvex}get[G.boxConvex](){return this.boxConvex}get[G.sphereHeightfield](){return this.sphereHeightfield}get[G.boxHeightfield](){return this.boxHeightfield}get[G.convexHeightfield](){return this.convexHeightfield}get[G.sphereParticle](){return this.sphereParticle}get[G.planeParticle](){return this.planeParticle}get[G.boxParticle](){return this.boxParticle}get[G.convexParticle](){return this.convexParticle}get[G.cylinderCylinder](){return this.convexConvex}get[G.sphereCylinder](){return this.sphereConvex}get[G.planeCylinder](){return this.planeConvex}get[G.boxCylinder](){return this.boxConvex}get[G.convexCylinder](){return this.convexConvex}get[G.heightfieldCylinder](){return this.heightfieldCylinder}get[G.particleCylinder](){return this.particleCylinder}get[G.sphereTrimesh](){return this.sphereTrimesh}get[G.planeTrimesh](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new Ti,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,n,s,i,r){let l;this.contactPointPool.length?(l=this.contactPointPool.pop(),l.bi=t,l.bj=e):l=new Xs(t,e),l.enabled=t.collisionResponse&&e.collisionResponse&&n.collisionResponse&&s.collisionResponse;const o=this.currentContactMaterial;l.restitution=o.restitution,l.setSpookParams(o.contactEquationStiffness,o.contactEquationRelaxation,this.world.dt);const a=n.material||t.material,h=s.material||e.material;return a&&h&&a.restitution>=0&&h.restitution>=0&&(l.restitution=a.restitution*h.restitution),l.si=i||n,l.sj=r||s,l}createFrictionEquationsFromContact(t,e){const n=t.bi,s=t.bj,i=t.si,r=t.sj,l=this.world,o=this.currentContactMaterial;let a=o.friction;const h=i.material||n.material,u=r.material||s.material;if(h&&u&&h.friction>=0&&u.friction>=0&&(a=h.friction*u.friction),a>0){const c=a*(l.frictionGravity||l.gravity).length();let d=n.invMass+s.invMass;d>0&&(d=1/d);const p=this.frictionEquationPool,m=p.length?p.pop():new We(n,s,c*d),v=p.length?p.pop():new We(n,s,c*d);return m.bi=v.bi=n,m.bj=v.bj=s,m.minForce=v.minForce=-c*d,m.maxForce=v.maxForce=c*d,m.ri.copy(t.ri),m.rj.copy(t.rj),v.ri.copy(t.ri),v.rj.copy(t.rj),t.ni.tangents(m.t,v.t),m.setSpookParams(o.frictionEquationStiffness,o.frictionEquationRelaxation,l.dt),v.setSpookParams(o.frictionEquationStiffness,o.frictionEquationRelaxation,l.dt),m.enabled=v.enabled=t.enabled,e.push(m,v),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||t===1)return;const n=this.frictionResult[this.frictionResult.length-2],s=this.frictionResult[this.frictionResult.length-1];yt.setZero(),_t.setZero(),zt.setZero();const i=e.bi;e.bj;for(let l=0;l!==t;l++)e=this.result[this.result.length-1-l],e.bi!==i?(yt.vadd(e.ni,yt),_t.vadd(e.ri,_t),zt.vadd(e.rj,zt)):(yt.vsub(e.ni,yt),_t.vadd(e.rj,_t),zt.vadd(e.ri,zt));const r=1/t;_t.scale(r,n.ri),zt.scale(r,n.rj),s.ri.copy(n.ri),s.rj.copy(n.rj),yt.normalize(),yt.tangents(n.t,s.t)}getContacts(t,e,n,s,i,r,l){this.contactPointPool=i,this.frictionEquationPool=l,this.result=s,this.frictionResult=r;const o=Fi,a=Ii,h=Si,u=Pi;for(let c=0,d=t.length;c!==d;c++){const p=t[c],m=e[c];let v=null;p.material&&m.material&&(v=n.getContactMaterial(p.material,m.material)||null);const y=p.type&R.KINEMATIC&&m.type&R.STATIC||p.type&R.STATIC&&m.type&R.KINEMATIC||p.type&R.KINEMATIC&&m.type&R.KINEMATIC;for(let w=0;w<p.shapes.length;w++){p.quaternion.mult(p.shapeOrientations[w],o),p.quaternion.vmult(p.shapeOffsets[w],h),h.vadd(p.position,h);const b=p.shapes[w];for(let E=0;E<m.shapes.length;E++){m.quaternion.mult(m.shapeOrientations[E],a),m.quaternion.vmult(m.shapeOffsets[E],u),u.vadd(m.position,u);const x=m.shapes[E];if(!(b.collisionFilterMask&x.collisionFilterGroup&&x.collisionFilterMask&b.collisionFilterGroup)||h.distanceTo(u)>b.boundingSphereRadius+x.boundingSphereRadius)continue;let C=null;b.material&&x.material&&(C=n.getContactMaterial(b.material,x.material)||null),this.currentContactMaterial=C||v||n.defaultContactMaterial;const T=b.type|x.type,S=this[T];if(S){let N=!1;b.type<x.type?N=S.call(this,b,x,h,u,o,a,p,m,b,x,y):N=S.call(this,x,b,u,h,a,o,m,p,b,x,y),N&&y&&(n.shapeOverlapKeeper.set(b.id,x.id),n.bodyOverlapKeeper.set(p.id,m.id))}}}}}sphereSphere(t,e,n,s,i,r,l,o,a,h,u){if(u)return n.distanceSquared(s)<(t.radius+e.radius)**2;const c=this.createContactEquation(l,o,t,e,a,h);s.vsub(n,c.ni),c.ni.normalize(),c.ri.copy(c.ni),c.rj.copy(c.ni),c.ri.scale(t.radius,c.ri),c.rj.scale(-e.radius,c.rj),c.ri.vadd(n,c.ri),c.ri.vsub(l.position,c.ri),c.rj.vadd(s,c.rj),c.rj.vsub(o.position,c.rj),this.result.push(c),this.createFrictionEquationsFromContact(c,this.frictionResult)}spherePlane(t,e,n,s,i,r,l,o,a,h,u){const c=this.createContactEquation(l,o,t,e,a,h);if(c.ni.set(0,0,1),r.vmult(c.ni,c.ni),c.ni.negate(c.ni),c.ni.normalize(),c.ni.scale(t.radius,c.ri),n.vsub(s,Gt),c.ni.scale(c.ni.dot(Gt),Ze),Gt.vsub(Ze,c.rj),-Gt.dot(c.ni)<=t.radius){if(u)return!0;const d=c.ri,p=c.rj;d.vadd(n,d),d.vsub(l.position,d),p.vadd(s,p),p.vsub(o.position,p),this.result.push(c),this.createFrictionEquationsFromContact(c,this.frictionResult)}}boxBox(t,e,n,s,i,r,l,o,a,h,u){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,n,s,i,r,l,o,t,e,u)}sphereBox(t,e,n,s,i,r,l,o,a,h,u){const c=this.v3pool,d=oo;n.vsub(s,Dt),e.getSideNormals(d,r);const p=t.radius;let m=!1;const v=lo,y=ao,w=co;let b=null,E=0,x=0,C=0,T=null;for(let A=0,V=d.length;A!==V&&m===!1;A++){const q=no;q.copy(d[A]);const k=q.length();q.normalize();const W=Dt.dot(q);if(W<k+p&&W>0){const X=so,L=io;X.copy(d[(A+1)%3]),L.copy(d[(A+2)%3]);const Et=X.length(),Lt=L.length();X.normalize(),L.normalize();const ie=Dt.dot(X),oe=Dt.dot(L);if(ie<Et&&ie>-Et&&oe<Lt&&oe>-Lt){const ze=Math.abs(W-k-p);if((T===null||ze<T)&&(T=ze,x=ie,C=oe,b=k,v.copy(q),y.copy(X),w.copy(L),E++,u))return!0}}}if(E){m=!0;const A=this.createContactEquation(l,o,t,e,a,h);v.scale(-p,A.ri),A.ni.copy(v),A.ni.negate(A.ni),v.scale(b,v),y.scale(x,y),v.vadd(y,v),w.scale(C,w),v.vadd(w,A.rj),A.ri.vadd(n,A.ri),A.ri.vsub(l.position,A.ri),A.rj.vadd(s,A.rj),A.rj.vsub(o.position,A.rj),this.result.push(A),this.createFrictionEquationsFromContact(A,this.frictionResult)}let S=c.get();const N=ro;for(let A=0;A!==2&&!m;A++)for(let V=0;V!==2&&!m;V++)for(let q=0;q!==2&&!m;q++)if(S.set(0,0,0),A?S.vadd(d[0],S):S.vsub(d[0],S),V?S.vadd(d[1],S):S.vsub(d[1],S),q?S.vadd(d[2],S):S.vsub(d[2],S),s.vadd(S,N),N.vsub(n,N),N.lengthSquared()<p*p){if(u)return!0;m=!0;const k=this.createContactEquation(l,o,t,e,a,h);k.ri.copy(N),k.ri.normalize(),k.ni.copy(k.ri),k.ri.scale(p,k.ri),k.rj.copy(S),k.ri.vadd(n,k.ri),k.ri.vsub(l.position,k.ri),k.rj.vadd(s,k.rj),k.rj.vsub(o.position,k.rj),this.result.push(k),this.createFrictionEquationsFromContact(k,this.frictionResult)}c.release(S),S=null;const z=c.get(),M=c.get(),I=c.get(),_=c.get(),B=c.get(),P=d.length;for(let A=0;A!==P&&!m;A++)for(let V=0;V!==P&&!m;V++)if(A%3!==V%3){d[V].cross(d[A],z),z.normalize(),d[A].vadd(d[V],M),I.copy(n),I.vsub(M,I),I.vsub(s,I);const q=I.dot(z);z.scale(q,_);let k=0;for(;k===A%3||k===V%3;)k++;B.copy(n),B.vsub(_,B),B.vsub(M,B),B.vsub(s,B);const W=Math.abs(q),X=B.length();if(W<d[k].length()&&X<p){if(u)return!0;m=!0;const L=this.createContactEquation(l,o,t,e,a,h);M.vadd(_,L.rj),L.rj.copy(L.rj),B.negate(L.ni),L.ni.normalize(),L.ri.copy(L.rj),L.ri.vadd(s,L.ri),L.ri.vsub(n,L.ri),L.ri.normalize(),L.ri.scale(p,L.ri),L.ri.vadd(n,L.ri),L.ri.vsub(l.position,L.ri),L.rj.vadd(s,L.rj),L.rj.vsub(o.position,L.rj),this.result.push(L),this.createFrictionEquationsFromContact(L,this.frictionResult)}}c.release(z,M,I,_,B)}planeBox(t,e,n,s,i,r,l,o,a,h,u){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,n,s,i,r,l,o,t,e,u)}convexConvex(t,e,n,s,i,r,l,o,a,h,u,c,d){const p=Co;if(!(n.distanceTo(s)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,n,i,s,r,p,c,d)){const m=[],v=Ao;t.clipAgainstHull(n,i,e,s,r,p,-100,100,m);let y=0;for(let w=0;w!==m.length;w++){if(u)return!0;const b=this.createContactEquation(l,o,t,e,a,h),E=b.ri,x=b.rj;p.negate(b.ni),m[w].normal.negate(v),v.scale(m[w].depth,v),m[w].point.vadd(v,E),x.copy(m[w].point),E.vsub(n,E),x.vsub(s,x),E.vadd(n,E),E.vsub(l.position,E),x.vadd(s,x),x.vsub(o.position,x),this.result.push(b),y++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(b,this.frictionResult)}this.enableFrictionReduction&&y&&this.createFrictionFromAverage(y)}}sphereConvex(t,e,n,s,i,r,l,o,a,h,u){const c=this.v3pool;n.vsub(s,ho);const d=e.faceNormals,p=e.faces,m=e.vertices,v=t.radius;let y=!1;for(let w=0;w!==m.length;w++){const b=m[w],E=mo;r.vmult(b,E),s.vadd(E,E);const x=po;if(E.vsub(n,x),x.lengthSquared()<v*v){if(u)return!0;y=!0;const C=this.createContactEquation(l,o,t,e,a,h);C.ri.copy(x),C.ri.normalize(),C.ni.copy(C.ri),C.ri.scale(v,C.ri),E.vsub(s,C.rj),C.ri.vadd(n,C.ri),C.ri.vsub(l.position,C.ri),C.rj.vadd(s,C.rj),C.rj.vsub(o.position,C.rj),this.result.push(C),this.createFrictionEquationsFromContact(C,this.frictionResult);return}}for(let w=0,b=p.length;w!==b&&y===!1;w++){const E=d[w],x=p[w],C=wo;r.vmult(E,C);const T=vo;r.vmult(m[x[0]],T),T.vadd(s,T);const S=yo;C.scale(-v,S),n.vadd(S,S);const N=go;S.vsub(T,N);const z=N.dot(C),M=xo;if(n.vsub(T,M),z<0&&M.dot(C)>0){const I=[];for(let _=0,B=x.length;_!==B;_++){const P=c.get();r.vmult(m[x[_]],P),s.vadd(P,P),I.push(P)}if(eo(I,C,n)){if(u)return!0;y=!0;const _=this.createContactEquation(l,o,t,e,a,h);C.scale(-v,_.ri),C.negate(_.ni);const B=c.get();C.scale(-z,B);const P=c.get();C.scale(-v,P),n.vsub(s,_.rj),_.rj.vadd(P,_.rj),_.rj.vadd(B,_.rj),_.rj.vadd(s,_.rj),_.rj.vsub(o.position,_.rj),_.ri.vadd(n,_.ri),_.ri.vsub(l.position,_.ri),c.release(B),c.release(P),this.result.push(_),this.createFrictionEquationsFromContact(_,this.frictionResult);for(let A=0,V=I.length;A!==V;A++)c.release(I[A]);return}else for(let _=0;_!==x.length;_++){const B=c.get(),P=c.get();r.vmult(m[x[(_+1)%x.length]],B),r.vmult(m[x[(_+2)%x.length]],P),s.vadd(B,B),s.vadd(P,P);const A=uo;P.vsub(B,A);const V=fo;A.unit(V);const q=c.get(),k=c.get();n.vsub(B,k);const W=k.dot(V);V.scale(W,q),q.vadd(B,q);const X=c.get();if(q.vsub(n,X),W>0&&W*W<A.lengthSquared()&&X.lengthSquared()<v*v){if(u)return!0;const L=this.createContactEquation(l,o,t,e,a,h);q.vsub(s,L.rj),q.vsub(n,L.ni),L.ni.normalize(),L.ni.scale(v,L.ri),L.rj.vadd(s,L.rj),L.rj.vsub(o.position,L.rj),L.ri.vadd(n,L.ri),L.ri.vsub(l.position,L.ri),this.result.push(L),this.createFrictionEquationsFromContact(L,this.frictionResult);for(let Et=0,Lt=I.length;Et!==Lt;Et++)c.release(I[Et]);c.release(B),c.release(P),c.release(q),c.release(X),c.release(k);return}c.release(B),c.release(P),c.release(q),c.release(X),c.release(k)}for(let _=0,B=I.length;_!==B;_++)c.release(I[_])}}}planeConvex(t,e,n,s,i,r,l,o,a,h,u){const c=bo,d=Eo;d.set(0,0,1),i.vmult(d,d);let p=0;const m=_o;for(let v=0;v!==e.vertices.length;v++)if(c.copy(e.vertices[v]),r.vmult(c,c),s.vadd(c,c),c.vsub(n,m),d.dot(m)<=0){if(u)return!0;const w=this.createContactEquation(l,o,t,e,a,h),b=zo;d.scale(d.dot(m),b),c.vsub(b,b),b.vsub(n,w.ri),w.ni.copy(d),c.vsub(s,w.rj),w.ri.vadd(n,w.ri),w.ri.vsub(l.position,w.ri),w.rj.vadd(s,w.rj),w.rj.vsub(o.position,w.rj),this.result.push(w),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(w,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,n,s,i,r,l,o,a,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,n,s,i,r,l,o,t,e,u)}sphereHeightfield(t,e,n,s,i,r,l,o,a,h,u){const c=e.data,d=t.radius,p=e.elementSize,m=Lo,v=Vo;j.pointToLocalFrame(s,r,n,v);let y=Math.floor((v.x-d)/p)-1,w=Math.ceil((v.x+d)/p)+1,b=Math.floor((v.y-d)/p)-1,E=Math.ceil((v.y+d)/p)+1;if(w<0||E<0||y>c.length||b>c[0].length)return;y<0&&(y=0),w<0&&(w=0),b<0&&(b=0),E<0&&(E=0),y>=c.length&&(y=c.length-1),w>=c.length&&(w=c.length-1),E>=c[0].length&&(E=c[0].length-1),b>=c[0].length&&(b=c[0].length-1);const x=[];e.getRectMinMax(y,b,w,E,x);const C=x[0],T=x[1];if(v.z-d>T||v.z+d<C)return;const S=this.result;for(let N=y;N<w;N++)for(let z=b;z<E;z++){const M=S.length;let I=!1;if(e.getConvexTrianglePillar(N,z,!1),j.pointToWorldFrame(s,r,e.pillarOffset,m),n.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(I=this.sphereConvex(t,e.pillarConvex,n,m,i,r,l,o,t,e,u)),u&&I||(e.getConvexTrianglePillar(N,z,!0),j.pointToWorldFrame(s,r,e.pillarOffset,m),n.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(I=this.sphereConvex(t,e.pillarConvex,n,m,i,r,l,o,t,e,u)),u&&I))return!0;if(S.length-M>2)return}}boxHeightfield(t,e,n,s,i,r,l,o,a,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,n,s,i,r,l,o,t,e,u)}convexHeightfield(t,e,n,s,i,r,l,o,a,h,u){const c=e.data,d=e.elementSize,p=t.boundingSphereRadius,m=Ro,v=qo,y=No;j.pointToLocalFrame(s,r,n,y);let w=Math.floor((y.x-p)/d)-1,b=Math.ceil((y.x+p)/d)+1,E=Math.floor((y.y-p)/d)-1,x=Math.ceil((y.y+p)/d)+1;if(b<0||x<0||w>c.length||E>c[0].length)return;w<0&&(w=0),b<0&&(b=0),E<0&&(E=0),x<0&&(x=0),w>=c.length&&(w=c.length-1),b>=c.length&&(b=c.length-1),x>=c[0].length&&(x=c[0].length-1),E>=c[0].length&&(E=c[0].length-1);const C=[];e.getRectMinMax(w,E,b,x,C);const T=C[0],S=C[1];if(!(y.z-p>S||y.z+p<T))for(let N=w;N<b;N++)for(let z=E;z<x;z++){let M=!1;if(e.getConvexTrianglePillar(N,z,!1),j.pointToWorldFrame(s,r,e.pillarOffset,m),n.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(M=this.convexConvex(t,e.pillarConvex,n,m,i,r,l,o,null,null,u,v,null)),u&&M||(e.getConvexTrianglePillar(N,z,!0),j.pointToWorldFrame(s,r,e.pillarOffset,m),n.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(M=this.convexConvex(t,e.pillarConvex,n,m,i,r,l,o,null,null,u,v,null)),u&&M))return!0}}sphereParticle(t,e,n,s,i,r,l,o,a,h,u){const c=So;if(c.set(0,0,1),s.vsub(n,c),c.lengthSquared()<=t.radius*t.radius){if(u)return!0;const p=this.createContactEquation(o,l,e,t,a,h);c.normalize(),p.rj.copy(c),p.rj.scale(t.radius,p.rj),p.ni.copy(c),p.ni.negate(p.ni),p.ri.set(0,0,0),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}}planeParticle(t,e,n,s,i,r,l,o,a,h,u){const c=Mo;c.set(0,0,1),l.quaternion.vmult(c,c);const d=To;if(s.vsub(l.position,d),c.dot(d)<=0){if(u)return!0;const m=this.createContactEquation(o,l,e,t,a,h);m.ni.copy(c),m.ni.negate(m.ni),m.ri.set(0,0,0);const v=Bo;c.scale(c.dot(s),v),s.vsub(v,v),m.rj.copy(v),this.result.push(m),this.createFrictionEquationsFromContact(m,this.frictionResult)}}boxParticle(t,e,n,s,i,r,l,o,a,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,n,s,i,r,l,o,t,e,u)}convexParticle(t,e,n,s,i,r,l,o,a,h,u){let c=-1;const d=Fo,p=Io;let m=null;const v=Po;if(v.copy(s),v.vsub(n,v),i.conjugate(Qe),Qe.vmult(v,v),t.pointIsInside(v)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(n,i),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(i);for(let y=0,w=t.faces.length;y!==w;y++){const b=[t.worldVertices[t.faces[y][0]]],E=t.worldFaceNormals[y];s.vsub(b[0],Je);const x=-E.dot(Je);if(m===null||Math.abs(x)<Math.abs(m)){if(u)return!0;m=x,c=y,d.copy(E)}}if(c!==-1){const y=this.createContactEquation(o,l,e,t,a,h);d.scale(m,p),p.vadd(s,p),p.vsub(n,p),y.rj.copy(p),d.negate(y.ni),y.ri.set(0,0,0);const w=y.ri,b=y.rj;w.vadd(s,w),w.vsub(o.position,w),b.vadd(n,b),b.vsub(l.position,b),this.result.push(y),this.createFrictionEquationsFromContact(y,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,n,s,i,r,l,o,a,h,u){return this.convexHeightfield(e,t,s,n,r,i,o,l,a,h,u)}particleCylinder(t,e,n,s,i,r,l,o,a,h,u){return this.convexParticle(e,t,s,n,r,i,o,l,a,h,u)}sphereTrimesh(t,e,n,s,i,r,l,o,a,h,u){const c=ji,d=Hi,p=Wi,m=Gi,v=Di,y=Yi,w=Ki,b=Oi,E=Li,x=Zi;j.pointToLocalFrame(s,r,n,v);const C=t.radius;w.lowerBound.set(v.x-C,v.y-C,v.z-C),w.upperBound.set(v.x+C,v.y+C,v.z+C),e.getTrianglesInAABB(w,x);const T=ki,S=t.radius*t.radius;for(let _=0;_<x.length;_++)for(let B=0;B<3;B++)if(e.getVertex(e.indices[x[_]*3+B],T),T.vsub(v,E),E.lengthSquared()<=S){if(b.copy(T),j.pointToWorldFrame(s,r,b,T),T.vsub(n,E),u)return!0;let P=this.createContactEquation(l,o,t,e,a,h);P.ni.copy(E),P.ni.normalize(),P.ri.copy(P.ni),P.ri.scale(t.radius,P.ri),P.ri.vadd(n,P.ri),P.ri.vsub(l.position,P.ri),P.rj.copy(T),P.rj.vsub(o.position,P.rj),this.result.push(P),this.createFrictionEquationsFromContact(P,this.frictionResult)}for(let _=0;_<x.length;_++)for(let B=0;B<3;B++){e.getVertex(e.indices[x[_]*3+B],c),e.getVertex(e.indices[x[_]*3+(B+1)%3],d),d.vsub(c,p),v.vsub(d,y);const P=y.dot(p);v.vsub(c,y);let A=y.dot(p);if(A>0&&P<0&&(v.vsub(c,y),m.copy(p),m.normalize(),A=y.dot(m),m.scale(A,y),y.vadd(c,y),y.distanceTo(v)<t.radius)){if(u)return!0;const q=this.createContactEquation(l,o,t,e,a,h);y.vsub(v,q.ni),q.ni.normalize(),q.ni.scale(t.radius,q.ri),q.ri.vadd(n,q.ri),q.ri.vsub(l.position,q.ri),j.pointToWorldFrame(s,r,y,y),y.vsub(o.position,q.rj),j.vectorToWorldFrame(r,q.ni,q.ni),j.vectorToWorldFrame(r,q.ri,q.ri),this.result.push(q),this.createFrictionEquationsFromContact(q,this.frictionResult)}}const N=Ui,z=Xi,M=$i,I=Vi;for(let _=0,B=x.length;_!==B;_++){e.getTriangleVertices(x[_],N,z,M),e.getNormal(x[_],I),v.vsub(N,y);let P=y.dot(I);if(I.scale(P,y),v.vsub(y,y),P=y.distanceTo(v),$.pointInTriangle(y,N,z,M)&&P<t.radius){if(u)return!0;let A=this.createContactEquation(l,o,t,e,a,h);y.vsub(v,A.ni),A.ni.normalize(),A.ni.scale(t.radius,A.ri),A.ri.vadd(n,A.ri),A.ri.vsub(l.position,A.ri),j.pointToWorldFrame(s,r,y,y),y.vsub(o.position,A.rj),j.vectorToWorldFrame(r,A.ni,A.ni),j.vectorToWorldFrame(r,A.ri,A.ri),this.result.push(A),this.createFrictionEquationsFromContact(A,this.frictionResult)}}x.length=0}planeTrimesh(t,e,n,s,i,r,l,o,a,h,u){const c=new f,d=Ni;d.set(0,0,1),i.vmult(d,d);for(let p=0;p<e.vertices.length/3;p++){e.getVertex(p,c);const m=new f;m.copy(c),j.pointToWorldFrame(s,r,m,c);const v=Ri;if(c.vsub(n,v),d.dot(v)<=0){if(u)return!0;const w=this.createContactEquation(l,o,t,e,a,h);w.ni.copy(d);const b=qi;d.scale(v.dot(d),b),c.vsub(b,b),w.ri.copy(b),w.ri.vsub(l.position,w.ri),w.rj.copy(c),w.rj.vsub(o.position,w.rj),this.result.push(w),this.createFrictionEquationsFromContact(w,this.frictionResult)}}}}const yt=new f,_t=new f,zt=new f,Si=new f,Pi=new f,Fi=new Y,Ii=new Y,Ni=new f,Ri=new f,qi=new f,Vi=new f,Li=new f;new f;const ki=new f,Oi=new f,ji=new f,Hi=new f,Wi=new f,Gi=new f,Di=new f,Yi=new f,Ui=new f,Xi=new f,$i=new f,Ki=new D,Zi=[],Gt=new f,Ze=new f,Qi=new f,Ji=new f,to=new f;function eo(g,t,e){let n=null;const s=g.length;for(let i=0;i!==s;i++){const r=g[i],l=Qi;g[(i+1)%s].vsub(r,l);const o=Ji;l.cross(t,o);const a=to;e.vsub(r,a);const h=o.dot(a);if(n===null||h>0&&n===!0||h<=0&&n===!1){n===null&&(n=h>0);continue}else return!1}return!0}const Dt=new f,no=new f,so=new f,io=new f,oo=[new f,new f,new f,new f,new f,new f],ro=new f,lo=new f,ao=new f,co=new f,ho=new f,uo=new f,fo=new f,po=new f,mo=new f,wo=new f,vo=new f,yo=new f,go=new f,xo=new f;new f;new f;const bo=new f,Eo=new f,_o=new f,zo=new f,Co=new f,Ao=new f,Mo=new f,To=new f,Bo=new f,So=new f,Qe=new Y,Po=new f;new f;const Fo=new f,Je=new f,Io=new f,No=new f,Ro=new f,qo=[0],Vo=new f,Lo=new f;class tn{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const n=e;e=t,t=n}return t<<16|e}set(t,e){const n=this.getKey(t,e),s=this.current;let i=0;for(;n>s[i];)i++;if(n!==s[i]){for(let r=s.length-1;r>=i;r--)s[r+1]=s[r];s[i]=n}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const n=this.current,s=this.previous,i=n.length,r=s.length;let l=0;for(let o=0;o<i;o++){let a=!1;const h=n[o];for(;h>s[l];)l++;a=h===s[l],a||en(t,h)}l=0;for(let o=0;o<r;o++){let a=!1;const h=s[o];for(;h>n[l];)l++;a=n[l]===h,a||en(e,h)}}}function en(g,t){g.push((t&4294901760)>>16,t&65535)}const he=(g,t)=>g<t?`${g}-${t}`:`${t}-${g}`;class ko{constructor(){this.data={keys:[]}}get(t,e){const n=he(t,e);return this.data[n]}set(t,e,n){const s=he(t,e);this.get(t,e)||this.data.keys.push(s),this.data[s]=n}delete(t,e){const n=he(t,e),s=this.data.keys.indexOf(n);s!==-1&&this.data.keys.splice(s,1),delete this.data[n]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){const n=e.pop();delete t[n]}}}class Oo extends _n{constructor(t){t===void 0&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=t.quatNormalizeSkip!==void 0?t.quatNormalizeSkip:0,this.quatNormalizeFast=t.quatNormalizeFast!==void 0?t.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new f,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new f,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=t.broadphase!==void 0?t.broadphase:new Ss,this.bodies=[],this.hasActiveBodies=!1,this.solver=t.solver!==void 0?t.solver:new _i,this.constraints=[],this.narrowphase=new Bi(this),this.collisionMatrix=new Ie,this.collisionMatrixPrevious=new Ie,this.bodyOverlapKeeper=new tn,this.shapeOverlapKeeper=new tn,this.contactmaterials=[],this.contactMaterialTable=new ko,this.defaultMaterial=new se("default"),this.defaultContactMaterial=new ne(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);e!==-1&&this.constraints.splice(e,1)}rayTest(t,e,n){n instanceof Jt?this.raycastClosest(t,e,{skipBackfaces:!0},n):this.raycastAll(t,e,{skipBackfaces:!0},n)}raycastAll(t,e,n,s){return n===void 0&&(n={}),n.mode=$.ALL,n.from=t,n.to=e,n.callback=s,ue.intersectWorld(this,n)}raycastAny(t,e,n,s){return n===void 0&&(n={}),n.mode=$.ANY,n.from=t,n.to=e,n.result=s,ue.intersectWorld(this,n)}raycastClosest(t,e,n,s){return n===void 0&&(n={}),n.mode=$.CLOSEST,n.from=t,n.to=e,n.result=s,ue.intersectWorld(this,n)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof R&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,n=this.bodies,s=n.indexOf(t);if(s!==-1){n.splice(s,1);for(let i=0;i!==n.length;i++)n[i].index=i;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let n=0;n<e.length;n++){const s=e[n].shapes;for(let i=0;i<s.length;i++){const r=s[i];if(r.id===t)return r}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);e!==-1&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){t===void 0&&(t=1/60),e===void 0&&(e=10);const n=K.now()/1e3;if(!this.lastCallTime)this.step(t,void 0,e);else{const s=n-this.lastCallTime;this.step(t,s,e)}this.lastCallTime=n}step(t,e,n){if(n===void 0&&(n=10),e===void 0)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const s=K.now();let i=0;for(;this.accumulator>=t&&i<n&&(this.internalStep(t),this.accumulator-=t,i++,!(K.now()-s>t*1e3)););this.accumulator=this.accumulator%t;const r=this.accumulator/t;for(let l=0;l!==this.bodies.length;l++){const o=this.bodies[l];o.previousPosition.lerp(o.position,r,o.interpolatedPosition),o.previousQuaternion.slerp(o.quaternion,r,o.interpolatedQuaternion),o.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,n=Do,s=Yo,i=this.bodies.length,r=this.bodies,l=this.solver,o=this.gravity,a=this.doProfiling,h=this.profile,u=R.DYNAMIC;let c=-1/0;const d=this.constraints,p=Go;o.length();const m=o.x,v=o.y,y=o.z;let w=0;for(a&&(c=K.now()),w=0;w!==i;w++){const _=r[w];if(_.type===u){const B=_.force,P=_.mass;B.x+=P*m,B.y+=P*v,B.z+=P*y}}for(let _=0,B=this.subsystems.length;_!==B;_++)this.subsystems[_].update();a&&(c=K.now()),n.length=0,s.length=0,this.broadphase.collisionPairs(this,n,s),a&&(h.broadphase=K.now()-c);let b=d.length;for(w=0;w!==b;w++){const _=d[w];if(!_.collideConnected)for(let B=n.length-1;B>=0;B-=1)(_.bodyA===n[B]&&_.bodyB===s[B]||_.bodyB===n[B]&&_.bodyA===s[B])&&(n.splice(B,1),s.splice(B,1))}this.collisionMatrixTick(),a&&(c=K.now());const E=Wo,x=e.length;for(w=0;w!==x;w++)E.push(e[w]);e.length=0;const C=this.frictionEquations.length;for(w=0;w!==C;w++)p.push(this.frictionEquations[w]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(n,s,this,e,E,this.frictionEquations,p),a&&(h.narrowphase=K.now()-c),a&&(c=K.now()),w=0;w<this.frictionEquations.length;w++)l.addEquation(this.frictionEquations[w]);const T=e.length;for(let _=0;_!==T;_++){const B=e[_],P=B.bi,A=B.bj,V=B.si,q=B.sj;let k;if(P.material&&A.material?k=this.getContactMaterial(P.material,A.material)||this.defaultContactMaterial:k=this.defaultContactMaterial,k.friction,P.material&&A.material&&(P.material.friction>=0&&A.material.friction>=0&&P.material.friction*A.material.friction,P.material.restitution>=0&&A.material.restitution>=0&&(B.restitution=P.material.restitution*A.material.restitution)),l.addEquation(B),P.allowSleep&&P.type===R.DYNAMIC&&P.sleepState===R.SLEEPING&&A.sleepState===R.AWAKE&&A.type!==R.STATIC){const W=A.velocity.lengthSquared()+A.angularVelocity.lengthSquared(),X=A.sleepSpeedLimit**2;W>=X*2&&(P.wakeUpAfterNarrowphase=!0)}if(A.allowSleep&&A.type===R.DYNAMIC&&A.sleepState===R.SLEEPING&&P.sleepState===R.AWAKE&&P.type!==R.STATIC){const W=P.velocity.lengthSquared()+P.angularVelocity.lengthSquared(),X=P.sleepSpeedLimit**2;W>=X*2&&(A.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(P,A,!0),this.collisionMatrixPrevious.get(P,A)||(Bt.body=A,Bt.contact=B,P.dispatchEvent(Bt),Bt.body=P,A.dispatchEvent(Bt)),this.bodyOverlapKeeper.set(P.id,A.id),this.shapeOverlapKeeper.set(V.id,q.id)}for(this.emitContactEvents(),a&&(h.makeContactConstraints=K.now()-c,c=K.now()),w=0;w!==i;w++){const _=r[w];_.wakeUpAfterNarrowphase&&(_.wakeUp(),_.wakeUpAfterNarrowphase=!1)}for(b=d.length,w=0;w!==b;w++){const _=d[w];_.update();for(let B=0,P=_.equations.length;B!==P;B++){const A=_.equations[B];l.addEquation(A)}}l.solve(t,this),a&&(h.solve=K.now()-c),l.removeAllEquations();const S=Math.pow;for(w=0;w!==i;w++){const _=r[w];if(_.type&u){const B=S(1-_.linearDamping,t),P=_.velocity;P.scale(B,P);const A=_.angularVelocity;if(A){const V=S(1-_.angularDamping,t);A.scale(V,A)}}}this.dispatchEvent(Ho),a&&(c=K.now());const z=this.stepnumber%(this.quatNormalizeSkip+1)===0,M=this.quatNormalizeFast;for(w=0;w!==i;w++)r[w].integrate(t,z,M);this.clearForces(),this.broadphase.dirty=!0,a&&(h.integrate=K.now()-c),this.stepnumber+=1,this.dispatchEvent(jo);let I=!0;if(this.allowSleep)for(I=!1,w=0;w!==i;w++){const _=r[w];_.sleepTick(this.time),_.sleepState!==R.SLEEPING&&(I=!0)}this.hasActiveBodies=I}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(ht,ut),t){for(let i=0,r=ht.length;i<r;i+=2)St.bodyA=this.getBodyById(ht[i]),St.bodyB=this.getBodyById(ht[i+1]),this.dispatchEvent(St);St.bodyA=St.bodyB=null}if(e){for(let i=0,r=ut.length;i<r;i+=2)Pt.bodyA=this.getBodyById(ut[i]),Pt.bodyB=this.getBodyById(ut[i+1]),this.dispatchEvent(Pt);Pt.bodyA=Pt.bodyB=null}ht.length=ut.length=0;const n=this.hasAnyEventListener("beginShapeContact"),s=this.hasAnyEventListener("endShapeContact");if((n||s)&&this.shapeOverlapKeeper.getDiff(ht,ut),n){for(let i=0,r=ht.length;i<r;i+=2){const l=this.getShapeById(ht[i]),o=this.getShapeById(ht[i+1]);dt.shapeA=l,dt.shapeB=o,l&&(dt.bodyA=l.body),o&&(dt.bodyB=o.body),this.dispatchEvent(dt)}dt.bodyA=dt.bodyB=dt.shapeA=dt.shapeB=null}if(s){for(let i=0,r=ut.length;i<r;i+=2){const l=this.getShapeById(ut[i]),o=this.getShapeById(ut[i+1]);ft.shapeA=l,ft.shapeB=o,l&&(ft.bodyA=l.body),o&&(ft.bodyB=o.body),this.dispatchEvent(ft)}ft.bodyA=ft.bodyB=ft.shapeA=ft.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let n=0;n!==e;n++){const s=t[n];s.force,s.torque,s.force.set(0,0,0),s.torque.set(0,0,0)}}}new D;const ue=new $,K=globalThis.performance||{};if(!K.now){let g=Date.now();K.timing&&K.timing.navigationStart&&(g=K.timing.navigationStart),K.now=()=>Date.now()-g}new f;const jo={type:"postStep"},Ho={type:"preStep"},Bt={type:R.COLLIDE_EVENT_NAME,body:null,contact:null},Wo=[],Go=[],Do=[],Yo=[],ht=[],ut=[],St={type:"beginContact",bodyA:null,bodyB:null},Pt={type:"endContact",bodyA:null,bodyB:null},dt={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},ft={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null};class Uo{constructor(){O(this,"ui");O(this,"stats")}begin(){this.stats&&this.stats.begin()}end(){this.stats&&this.stats.end()}}class Xo{constructor(){const t=new Vt,e=t.scene,n=t.physics,s=new Qt(100,100),i=new Ln({}),r=new tt(s,i);r.receiveShadow=!0,r.rotateX(-Math.PI*.5),r.position.y=-3,e.add(r);const l=new Nn,o=new R({mass:0});o.addShape(l),n.addBody(o),o.position.set(r.position.x,r.position.y,r.position.z),o.quaternion.set(r.quaternion.x,r.quaternion.y,r.quaternion.z,r.quaternion.w)}}const pt=11102230246251565e-32,Z=134217729,$o=(3+8*pt)*pt;function de(g,t,e,n,s){let i,r,l,o,a=t[0],h=n[0],u=0,c=0;h>a==h>-a?(i=a,a=t[++u]):(i=h,h=n[++c]);let d=0;if(u<g&&c<e)for(h>a==h>-a?(r=a+i,l=i-(r-a),a=t[++u]):(r=h+i,l=i-(r-h),h=n[++c]),i=r,l!==0&&(s[d++]=l);u<g&&c<e;)h>a==h>-a?(r=i+a,o=r-i,l=i-(r-o)+(a-o),a=t[++u]):(r=i+h,o=r-i,l=i-(r-o)+(h-o),h=n[++c]),i=r,l!==0&&(s[d++]=l);for(;u<g;)r=i+a,o=r-i,l=i-(r-o)+(a-o),a=t[++u],i=r,l!==0&&(s[d++]=l);for(;c<e;)r=i+h,o=r-i,l=i-(r-o)+(h-o),h=n[++c],i=r,l!==0&&(s[d++]=l);return(i!==0||d===0)&&(s[d++]=i),d}function Ko(g,t){let e=t[0];for(let n=1;n<g;n++)e+=t[n];return e}function qt(g){return new Float64Array(g)}const Zo=(3+16*pt)*pt,Qo=(2+12*pt)*pt,Jo=(9+64*pt)*pt*pt,Ct=qt(4),nn=qt(8),sn=qt(12),on=qt(16),Q=qt(4);function tr(g,t,e,n,s,i,r){let l,o,a,h,u,c,d,p,m,v,y,w,b,E,x,C,T,S;const N=g-s,z=e-s,M=t-i,I=n-i;E=N*I,c=Z*N,d=c-(c-N),p=N-d,c=Z*I,m=c-(c-I),v=I-m,x=p*v-(E-d*m-p*m-d*v),C=M*z,c=Z*M,d=c-(c-M),p=M-d,c=Z*z,m=c-(c-z),v=z-m,T=p*v-(C-d*m-p*m-d*v),y=x-T,u=x-y,Ct[0]=x-(y+u)+(u-T),w=E+y,u=w-E,b=E-(w-u)+(y-u),y=b-C,u=b-y,Ct[1]=b-(y+u)+(u-C),S=w+y,u=S-w,Ct[2]=w-(S-u)+(y-u),Ct[3]=S;let _=Ko(4,Ct),B=Qo*r;if(_>=B||-_>=B||(u=g-N,l=g-(N+u)+(u-s),u=e-z,a=e-(z+u)+(u-s),u=t-M,o=t-(M+u)+(u-i),u=n-I,h=n-(I+u)+(u-i),l===0&&o===0&&a===0&&h===0)||(B=Jo*r+$o*Math.abs(_),_+=N*h+I*l-(M*a+z*o),_>=B||-_>=B))return _;E=l*I,c=Z*l,d=c-(c-l),p=l-d,c=Z*I,m=c-(c-I),v=I-m,x=p*v-(E-d*m-p*m-d*v),C=o*z,c=Z*o,d=c-(c-o),p=o-d,c=Z*z,m=c-(c-z),v=z-m,T=p*v-(C-d*m-p*m-d*v),y=x-T,u=x-y,Q[0]=x-(y+u)+(u-T),w=E+y,u=w-E,b=E-(w-u)+(y-u),y=b-C,u=b-y,Q[1]=b-(y+u)+(u-C),S=w+y,u=S-w,Q[2]=w-(S-u)+(y-u),Q[3]=S;const P=de(4,Ct,4,Q,nn);E=N*h,c=Z*N,d=c-(c-N),p=N-d,c=Z*h,m=c-(c-h),v=h-m,x=p*v-(E-d*m-p*m-d*v),C=M*a,c=Z*M,d=c-(c-M),p=M-d,c=Z*a,m=c-(c-a),v=a-m,T=p*v-(C-d*m-p*m-d*v),y=x-T,u=x-y,Q[0]=x-(y+u)+(u-T),w=E+y,u=w-E,b=E-(w-u)+(y-u),y=b-C,u=b-y,Q[1]=b-(y+u)+(u-C),S=w+y,u=S-w,Q[2]=w-(S-u)+(y-u),Q[3]=S;const A=de(P,nn,4,Q,sn);E=l*h,c=Z*l,d=c-(c-l),p=l-d,c=Z*h,m=c-(c-h),v=h-m,x=p*v-(E-d*m-p*m-d*v),C=o*a,c=Z*o,d=c-(c-o),p=o-d,c=Z*a,m=c-(c-a),v=a-m,T=p*v-(C-d*m-p*m-d*v),y=x-T,u=x-y,Q[0]=x-(y+u)+(u-T),w=E+y,u=w-E,b=E-(w-u)+(y-u),y=b-C,u=b-y,Q[1]=b-(y+u)+(u-C),S=w+y,u=S-w,Q[2]=w-(S-u)+(y-u),Q[3]=S;const V=de(A,sn,4,Q,on);return on[V-1]}function Yt(g,t,e,n,s,i){const r=(t-i)*(e-s),l=(g-s)*(n-i),o=r-l;if(r===0||l===0||r>0!=l>0)return o;const a=Math.abs(r+l);return Math.abs(o)>=Zo*a?o:-tr(g,t,e,n,s,i,a)}const rn=Math.pow(2,-52),Ut=new Uint32Array(512);class te{static from(t,e=or,n=rr){const s=t.length,i=new Float64Array(s*2);for(let r=0;r<s;r++){const l=t[r];i[2*r]=e(l),i[2*r+1]=n(l)}return new te(i)}constructor(t){const e=t.length>>1;if(e>0&&typeof t[0]!="number")throw new Error("Expected coords to contain numbers.");this.coords=t;const n=Math.max(2*e-5,0);this._triangles=new Uint32Array(n*3),this._halfedges=new Int32Array(n*3),this._hashSize=Math.ceil(Math.sqrt(e)),this._hullPrev=new Uint32Array(e),this._hullNext=new Uint32Array(e),this._hullTri=new Uint32Array(e),this._hullHash=new Int32Array(this._hashSize).fill(-1),this._ids=new Uint32Array(e),this._dists=new Float64Array(e),this.update()}update(){const{coords:t,_hullPrev:e,_hullNext:n,_hullTri:s,_hullHash:i}=this,r=t.length>>1;let l=1/0,o=1/0,a=-1/0,h=-1/0;for(let z=0;z<r;z++){const M=t[2*z],I=t[2*z+1];M<l&&(l=M),I<o&&(o=I),M>a&&(a=M),I>h&&(h=I),this._ids[z]=z}const u=(l+a)/2,c=(o+h)/2;let d=1/0,p,m,v;for(let z=0;z<r;z++){const M=fe(u,c,t[2*z],t[2*z+1]);M<d&&(p=z,d=M)}const y=t[2*p],w=t[2*p+1];d=1/0;for(let z=0;z<r;z++){if(z===p)continue;const M=fe(y,w,t[2*z],t[2*z+1]);M<d&&M>0&&(m=z,d=M)}let b=t[2*m],E=t[2*m+1],x=1/0;for(let z=0;z<r;z++){if(z===p||z===m)continue;const M=sr(y,w,b,E,t[2*z],t[2*z+1]);M<x&&(v=z,x=M)}let C=t[2*v],T=t[2*v+1];if(x===1/0){for(let I=0;I<r;I++)this._dists[I]=t[2*I]-t[0]||t[2*I+1]-t[1];Mt(this._ids,this._dists,0,r-1);const z=new Uint32Array(r);let M=0;for(let I=0,_=-1/0;I<r;I++){const B=this._ids[I];this._dists[B]>_&&(z[M++]=B,_=this._dists[B])}this.hull=z.subarray(0,M),this.triangles=new Uint32Array(0),this.halfedges=new Uint32Array(0);return}if(Yt(y,w,b,E,C,T)<0){const z=m,M=b,I=E;m=v,b=C,E=T,v=z,C=M,T=I}const S=ir(y,w,b,E,C,T);this._cx=S.x,this._cy=S.y;for(let z=0;z<r;z++)this._dists[z]=fe(t[2*z],t[2*z+1],S.x,S.y);Mt(this._ids,this._dists,0,r-1),this._hullStart=p;let N=3;n[p]=e[v]=m,n[m]=e[p]=v,n[v]=e[m]=p,s[p]=0,s[m]=1,s[v]=2,i.fill(-1),i[this._hashKey(y,w)]=p,i[this._hashKey(b,E)]=m,i[this._hashKey(C,T)]=v,this.trianglesLen=0,this._addTriangle(p,m,v,-1,-1,-1);for(let z=0,M,I;z<this._ids.length;z++){const _=this._ids[z],B=t[2*_],P=t[2*_+1];if(z>0&&Math.abs(B-M)<=rn&&Math.abs(P-I)<=rn||(M=B,I=P,_===p||_===m||_===v))continue;let A=0;for(let X=0,L=this._hashKey(B,P);X<this._hashSize&&(A=i[(L+X)%this._hashSize],!(A!==-1&&A!==n[A]));X++);A=e[A];let V=A,q;for(;q=n[V],Yt(B,P,t[2*V],t[2*V+1],t[2*q],t[2*q+1])>=0;)if(V=q,V===A){V=-1;break}if(V===-1)continue;let k=this._addTriangle(V,_,n[V],-1,-1,s[V]);s[_]=this._legalize(k+2),s[V]=k,N++;let W=n[V];for(;q=n[W],Yt(B,P,t[2*W],t[2*W+1],t[2*q],t[2*q+1])<0;)k=this._addTriangle(W,_,q,s[_],-1,s[W]),s[_]=this._legalize(k+2),n[W]=W,N--,W=q;if(V===A)for(;q=e[V],Yt(B,P,t[2*q],t[2*q+1],t[2*V],t[2*V+1])<0;)k=this._addTriangle(q,_,V,-1,s[V],s[q]),this._legalize(k+2),s[q]=k,n[V]=V,N--,V=q;this._hullStart=e[_]=V,n[V]=e[W]=_,n[_]=W,i[this._hashKey(B,P)]=_,i[this._hashKey(t[2*V],t[2*V+1])]=V}this.hull=new Uint32Array(N);for(let z=0,M=this._hullStart;z<N;z++)this.hull[z]=M,M=n[M];this.triangles=this._triangles.subarray(0,this.trianglesLen),this.halfedges=this._halfedges.subarray(0,this.trianglesLen)}_hashKey(t,e){return Math.floor(er(t-this._cx,e-this._cy)*this._hashSize)%this._hashSize}_legalize(t){const{_triangles:e,_halfedges:n,coords:s}=this;let i=0,r=0;for(;;){const l=n[t],o=t-t%3;if(r=o+(t+2)%3,l===-1){if(i===0)break;t=Ut[--i];continue}const a=l-l%3,h=o+(t+1)%3,u=a+(l+2)%3,c=e[r],d=e[t],p=e[h],m=e[u];if(nr(s[2*c],s[2*c+1],s[2*d],s[2*d+1],s[2*p],s[2*p+1],s[2*m],s[2*m+1])){e[t]=m,e[l]=c;const y=n[u];if(y===-1){let b=this._hullStart;do{if(this._hullTri[b]===u){this._hullTri[b]=t;break}b=this._hullPrev[b]}while(b!==this._hullStart)}this._link(t,y),this._link(l,n[r]),this._link(r,u);const w=a+(l+1)%3;i<Ut.length&&(Ut[i++]=w)}else{if(i===0)break;t=Ut[--i]}}return r}_link(t,e){this._halfedges[t]=e,e!==-1&&(this._halfedges[e]=t)}_addTriangle(t,e,n,s,i,r){const l=this.trianglesLen;return this._triangles[l]=t,this._triangles[l+1]=e,this._triangles[l+2]=n,this._link(l,s),this._link(l+1,i),this._link(l+2,r),this.trianglesLen+=3,l}}function er(g,t){const e=g/(Math.abs(g)+Math.abs(t));return(t>0?3-e:1+e)/4}function fe(g,t,e,n){const s=g-e,i=t-n;return s*s+i*i}function nr(g,t,e,n,s,i,r,l){const o=g-r,a=t-l,h=e-r,u=n-l,c=s-r,d=i-l,p=o*o+a*a,m=h*h+u*u,v=c*c+d*d;return o*(u*v-m*d)-a*(h*v-m*c)+p*(h*d-u*c)<0}function sr(g,t,e,n,s,i){const r=e-g,l=n-t,o=s-g,a=i-t,h=r*r+l*l,u=o*o+a*a,c=.5/(r*a-l*o),d=(a*h-l*u)*c,p=(r*u-o*h)*c;return d*d+p*p}function ir(g,t,e,n,s,i){const r=e-g,l=n-t,o=s-g,a=i-t,h=r*r+l*l,u=o*o+a*a,c=.5/(r*a-l*o),d=g+(a*h-l*u)*c,p=t+(r*u-o*h)*c;return{x:d,y:p}}function Mt(g,t,e,n){if(n-e<=20)for(let s=e+1;s<=n;s++){const i=g[s],r=t[i];let l=s-1;for(;l>=e&&t[g[l]]>r;)g[l+1]=g[l--];g[l+1]=i}else{const s=e+n>>1;let i=e+1,r=n;Ft(g,s,i),t[g[e]]>t[g[n]]&&Ft(g,e,n),t[g[i]]>t[g[n]]&&Ft(g,i,n),t[g[e]]>t[g[i]]&&Ft(g,e,i);const l=g[i],o=t[l];for(;;){do i++;while(t[g[i]]<o);do r--;while(t[g[r]]>o);if(r<i)break;Ft(g,i,r)}g[e+1]=g[r],g[r]=l,n-i+1>=r-e?(Mt(g,t,i,n),Mt(g,t,e,r-1)):(Mt(g,t,e,r-1),Mt(g,t,i,n))}}function Ft(g,t,e){const n=g[t];g[t]=g[e],g[e]=n}function or(g){return g[0]}function rr(g){return g[1]}const ln=1e-6;class bt{constructor(){this._x0=this._y0=this._x1=this._y1=null,this._=""}moveTo(t,e){this._+=`M${this._x0=this._x1=+t},${this._y0=this._y1=+e}`}closePath(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")}lineTo(t,e){this._+=`L${this._x1=+t},${this._y1=+e}`}arc(t,e,n){t=+t,e=+e,n=+n;const s=t+n,i=e;if(n<0)throw new Error("negative radius");this._x1===null?this._+=`M${s},${i}`:(Math.abs(this._x1-s)>ln||Math.abs(this._y1-i)>ln)&&(this._+="L"+s+","+i),n&&(this._+=`A${n},${n},0,1,1,${t-n},${e}A${n},${n},0,1,1,${this._x1=s},${this._y1=i}`)}rect(t,e,n,s){this._+=`M${this._x0=this._x1=+t},${this._y0=this._y1=+e}h${+n}v${+s}h${-n}Z`}value(){return this._||null}}class ge{constructor(){this._=[]}moveTo(t,e){this._.push([t,e])}closePath(){this._.push(this._[0].slice())}lineTo(t,e){this._.push([t,e])}value(){return this._.length?this._:null}}class lr{constructor(t,[e,n,s,i]=[0,0,960,500]){if(!((s=+s)>=(e=+e))||!((i=+i)>=(n=+n)))throw new Error("invalid bounds");this.delaunay=t,this._circumcenters=new Float64Array(t.points.length*2),this.vectors=new Float64Array(t.points.length*2),this.xmax=s,this.xmin=e,this.ymax=i,this.ymin=n,this._init()}update(){return this.delaunay.update(),this._init(),this}_init(){const{delaunay:{points:t,hull:e,triangles:n},vectors:s}=this,i=this.circumcenters=this._circumcenters.subarray(0,n.length/3*2);for(let d=0,p=0,m=n.length,v,y;d<m;d+=3,p+=2){const w=n[d]*2,b=n[d+1]*2,E=n[d+2]*2,x=t[w],C=t[w+1],T=t[b],S=t[b+1],N=t[E],z=t[E+1],M=T-x,I=S-C,_=N-x,B=z-C,P=(M*B-I*_)*2;if(Math.abs(P)<1e-9){let A=1e9;const V=n[0]*2;A*=Math.sign((t[V]-x)*B-(t[V+1]-C)*_),v=(x+N)/2-A*B,y=(C+z)/2+A*_}else{const A=1/P,V=M*M+I*I,q=_*_+B*B;v=x+(B*V-I*q)*A,y=C+(M*q-_*V)*A}i[p]=v,i[p+1]=y}let r=e[e.length-1],l,o=r*4,a,h=t[2*r],u,c=t[2*r+1];s.fill(0);for(let d=0;d<e.length;++d)r=e[d],l=o,a=h,u=c,o=r*4,h=t[2*r],c=t[2*r+1],s[l+2]=s[o]=u-c,s[l+3]=s[o+1]=h-a}render(t){const e=t==null?t=new bt:void 0,{delaunay:{halfedges:n,inedges:s,hull:i},circumcenters:r,vectors:l}=this;if(i.length<=1)return null;for(let h=0,u=n.length;h<u;++h){const c=n[h];if(c<h)continue;const d=Math.floor(h/3)*2,p=Math.floor(c/3)*2,m=r[d],v=r[d+1],y=r[p],w=r[p+1];this._renderSegment(m,v,y,w,t)}let o,a=i[i.length-1];for(let h=0;h<i.length;++h){o=a,a=i[h];const u=Math.floor(s[a]/3)*2,c=r[u],d=r[u+1],p=o*4,m=this._project(c,d,l[p+2],l[p+3]);m&&this._renderSegment(c,d,m[0],m[1],t)}return e&&e.value()}renderBounds(t){const e=t==null?t=new bt:void 0;return t.rect(this.xmin,this.ymin,this.xmax-this.xmin,this.ymax-this.ymin),e&&e.value()}renderCell(t,e){const n=e==null?e=new bt:void 0,s=this._clip(t);if(s===null||!s.length)return;e.moveTo(s[0],s[1]);let i=s.length;for(;s[0]===s[i-2]&&s[1]===s[i-1]&&i>1;)i-=2;for(let r=2;r<i;r+=2)(s[r]!==s[r-2]||s[r+1]!==s[r-1])&&e.lineTo(s[r],s[r+1]);return e.closePath(),n&&n.value()}*cellPolygons(){const{delaunay:{points:t}}=this;for(let e=0,n=t.length/2;e<n;++e){const s=this.cellPolygon(e);s&&(s.index=e,yield s)}}cellPolygon(t){const e=new ge;return this.renderCell(t,e),e.value()}_renderSegment(t,e,n,s,i){let r;const l=this._regioncode(t,e),o=this._regioncode(n,s);l===0&&o===0?(i.moveTo(t,e),i.lineTo(n,s)):(r=this._clipSegment(t,e,n,s,l,o))&&(i.moveTo(r[0],r[1]),i.lineTo(r[2],r[3]))}contains(t,e,n){return e=+e,e!==e||(n=+n,n!==n)?!1:this.delaunay._step(t,e,n)===t}*neighbors(t){const e=this._clip(t);if(e)for(const n of this.delaunay.neighbors(t)){const s=this._clip(n);if(s){t:for(let i=0,r=e.length;i<r;i+=2)for(let l=0,o=s.length;l<o;l+=2)if(e[i]==s[l]&&e[i+1]==s[l+1]&&e[(i+2)%r]==s[(l+o-2)%o]&&e[(i+3)%r]==s[(l+o-1)%o]){yield n;break t}}}}_cell(t){const{circumcenters:e,delaunay:{inedges:n,halfedges:s,triangles:i}}=this,r=n[t];if(r===-1)return null;const l=[];let o=r;do{const a=Math.floor(o/3);if(l.push(e[a*2],e[a*2+1]),o=o%3===2?o-2:o+1,i[o]!==t)break;o=s[o]}while(o!==r&&o!==-1);return l}_clip(t){if(t===0&&this.delaunay.hull.length===1)return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];const e=this._cell(t);if(e===null)return null;const{vectors:n}=this,s=t*4;return n[s]||n[s+1]?this._clipInfinite(t,e,n[s],n[s+1],n[s+2],n[s+3]):this._clipFinite(t,e)}_clipFinite(t,e){const n=e.length;let s=null,i,r,l=e[n-2],o=e[n-1],a,h=this._regioncode(l,o),u,c=0;for(let d=0;d<n;d+=2)if(i=l,r=o,l=e[d],o=e[d+1],a=h,h=this._regioncode(l,o),a===0&&h===0)u=c,c=0,s?s.push(l,o):s=[l,o];else{let p,m,v,y,w;if(a===0){if((p=this._clipSegment(i,r,l,o,a,h))===null)continue;[m,v,y,w]=p}else{if((p=this._clipSegment(l,o,i,r,h,a))===null)continue;[y,w,m,v]=p,u=c,c=this._edgecode(m,v),u&&c&&this._edge(t,u,c,s,s.length),s?s.push(m,v):s=[m,v]}u=c,c=this._edgecode(y,w),u&&c&&this._edge(t,u,c,s,s.length),s?s.push(y,w):s=[y,w]}if(s)u=c,c=this._edgecode(s[0],s[1]),u&&c&&this._edge(t,u,c,s,s.length);else if(this.contains(t,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2))return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];return s}_clipSegment(t,e,n,s,i,r){for(;;){if(i===0&&r===0)return[t,e,n,s];if(i&r)return null;let l,o,a=i||r;a&8?(l=t+(n-t)*(this.ymax-e)/(s-e),o=this.ymax):a&4?(l=t+(n-t)*(this.ymin-e)/(s-e),o=this.ymin):a&2?(o=e+(s-e)*(this.xmax-t)/(n-t),l=this.xmax):(o=e+(s-e)*(this.xmin-t)/(n-t),l=this.xmin),i?(t=l,e=o,i=this._regioncode(t,e)):(n=l,s=o,r=this._regioncode(n,s))}}_clipInfinite(t,e,n,s,i,r){let l=Array.from(e),o;if((o=this._project(l[0],l[1],n,s))&&l.unshift(o[0],o[1]),(o=this._project(l[l.length-2],l[l.length-1],i,r))&&l.push(o[0],o[1]),l=this._clipFinite(t,l))for(let a=0,h=l.length,u,c=this._edgecode(l[h-2],l[h-1]);a<h;a+=2)u=c,c=this._edgecode(l[a],l[a+1]),u&&c&&(a=this._edge(t,u,c,l,a),h=l.length);else this.contains(t,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2)&&(l=[this.xmin,this.ymin,this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax]);return l}_edge(t,e,n,s,i){for(;e!==n;){let r,l;switch(e){case 5:e=4;continue;case 4:e=6,r=this.xmax,l=this.ymin;break;case 6:e=2;continue;case 2:e=10,r=this.xmax,l=this.ymax;break;case 10:e=8;continue;case 8:e=9,r=this.xmin,l=this.ymax;break;case 9:e=1;continue;case 1:e=5,r=this.xmin,l=this.ymin;break}(s[i]!==r||s[i+1]!==l)&&this.contains(t,r,l)&&(s.splice(i,0,r,l),i+=2)}if(s.length>4)for(let r=0;r<s.length;r+=2){const l=(r+2)%s.length,o=(r+4)%s.length;(s[r]===s[l]&&s[l]===s[o]||s[r+1]===s[l+1]&&s[l+1]===s[o+1])&&(s.splice(l,2),r-=2)}return i}_project(t,e,n,s){let i=1/0,r,l,o;if(s<0){if(e<=this.ymin)return null;(r=(this.ymin-e)/s)<i&&(o=this.ymin,l=t+(i=r)*n)}else if(s>0){if(e>=this.ymax)return null;(r=(this.ymax-e)/s)<i&&(o=this.ymax,l=t+(i=r)*n)}if(n>0){if(t>=this.xmax)return null;(r=(this.xmax-t)/n)<i&&(l=this.xmax,o=e+(i=r)*s)}else if(n<0){if(t<=this.xmin)return null;(r=(this.xmin-t)/n)<i&&(l=this.xmin,o=e+(i=r)*s)}return[l,o]}_edgecode(t,e){return(t===this.xmin?1:t===this.xmax?2:0)|(e===this.ymin?4:e===this.ymax?8:0)}_regioncode(t,e){return(t<this.xmin?1:t>this.xmax?2:0)|(e<this.ymin?4:e>this.ymax?8:0)}}const ar=2*Math.PI,At=Math.pow;function cr(g){return g[0]}function hr(g){return g[1]}function ur(g){const{triangles:t,coords:e}=g;for(let n=0;n<t.length;n+=3){const s=2*t[n],i=2*t[n+1],r=2*t[n+2];if((e[r]-e[s])*(e[i+1]-e[s+1])-(e[i]-e[s])*(e[r+1]-e[s+1])>1e-10)return!1}return!0}function dr(g,t,e){return[g+Math.sin(g+t)*e,t+Math.cos(g-t)*e]}class _e{static from(t,e=cr,n=hr,s){return new _e("length"in t?fr(t,e,n,s):Float64Array.from(pr(t,e,n,s)))}constructor(t){this._delaunator=new te(t),this.inedges=new Int32Array(t.length/2),this._hullIndex=new Int32Array(t.length/2),this.points=this._delaunator.coords,this._init()}update(){return this._delaunator.update(),this._init(),this}_init(){const t=this._delaunator,e=this.points;if(t.hull&&t.hull.length>2&&ur(t)){this.collinear=Int32Array.from({length:e.length/2},(c,d)=>d).sort((c,d)=>e[2*c]-e[2*d]||e[2*c+1]-e[2*d+1]);const o=this.collinear[0],a=this.collinear[this.collinear.length-1],h=[e[2*o],e[2*o+1],e[2*a],e[2*a+1]],u=1e-8*Math.hypot(h[3]-h[1],h[2]-h[0]);for(let c=0,d=e.length/2;c<d;++c){const p=dr(e[2*c],e[2*c+1],u);e[2*c]=p[0],e[2*c+1]=p[1]}this._delaunator=new te(e)}else delete this.collinear;const n=this.halfedges=this._delaunator.halfedges,s=this.hull=this._delaunator.hull,i=this.triangles=this._delaunator.triangles,r=this.inedges.fill(-1),l=this._hullIndex.fill(-1);for(let o=0,a=n.length;o<a;++o){const h=i[o%3===2?o-2:o+1];(n[o]===-1||r[h]===-1)&&(r[h]=o)}for(let o=0,a=s.length;o<a;++o)l[s[o]]=o;s.length<=2&&s.length>0&&(this.triangles=new Int32Array(3).fill(-1),this.halfedges=new Int32Array(3).fill(-1),this.triangles[0]=s[0],r[s[0]]=1,s.length===2&&(r[s[1]]=0,this.triangles[1]=s[1],this.triangles[2]=s[1]))}voronoi(t){return new lr(this,t)}*neighbors(t){const{inedges:e,hull:n,_hullIndex:s,halfedges:i,triangles:r,collinear:l}=this;if(l){const u=l.indexOf(t);u>0&&(yield l[u-1]),u<l.length-1&&(yield l[u+1]);return}const o=e[t];if(o===-1)return;let a=o,h=-1;do{if(yield h=r[a],a=a%3===2?a-2:a+1,r[a]!==t)return;if(a=i[a],a===-1){const u=n[(s[t]+1)%n.length];u!==h&&(yield u);return}}while(a!==o)}find(t,e,n=0){if(t=+t,t!==t||(e=+e,e!==e))return-1;const s=n;let i;for(;(i=this._step(n,t,e))>=0&&i!==n&&i!==s;)n=i;return i}_step(t,e,n){const{inedges:s,hull:i,_hullIndex:r,halfedges:l,triangles:o,points:a}=this;if(s[t]===-1||!a.length)return(t+1)%(a.length>>1);let h=t,u=At(e-a[t*2],2)+At(n-a[t*2+1],2);const c=s[t];let d=c;do{let p=o[d];const m=At(e-a[p*2],2)+At(n-a[p*2+1],2);if(m<u&&(u=m,h=p),d=d%3===2?d-2:d+1,o[d]!==t)break;if(d=l[d],d===-1){if(d=i[(r[t]+1)%i.length],d!==p&&At(e-a[d*2],2)+At(n-a[d*2+1],2)<u)return d;break}}while(d!==c);return h}render(t){const e=t==null?t=new bt:void 0,{points:n,halfedges:s,triangles:i}=this;for(let r=0,l=s.length;r<l;++r){const o=s[r];if(o<r)continue;const a=i[r]*2,h=i[o]*2;t.moveTo(n[a],n[a+1]),t.lineTo(n[h],n[h+1])}return this.renderHull(t),e&&e.value()}renderPoints(t,e){e===void 0&&(!t||typeof t.moveTo!="function")&&(e=t,t=null),e=e==null?2:+e;const n=t==null?t=new bt:void 0,{points:s}=this;for(let i=0,r=s.length;i<r;i+=2){const l=s[i],o=s[i+1];t.moveTo(l+e,o),t.arc(l,o,e,0,ar)}return n&&n.value()}renderHull(t){const e=t==null?t=new bt:void 0,{hull:n,points:s}=this,i=n[0]*2,r=n.length;t.moveTo(s[i],s[i+1]);for(let l=1;l<r;++l){const o=2*n[l];t.lineTo(s[o],s[o+1])}return t.closePath(),e&&e.value()}hullPolygon(){const t=new ge;return this.renderHull(t),t.value()}renderTriangle(t,e){const n=e==null?e=new bt:void 0,{points:s,triangles:i}=this,r=i[t*=3]*2,l=i[t+1]*2,o=i[t+2]*2;return e.moveTo(s[r],s[r+1]),e.lineTo(s[l],s[l+1]),e.lineTo(s[o],s[o+1]),e.closePath(),n&&n.value()}*trianglePolygons(){const{triangles:t}=this;for(let e=0,n=t.length/3;e<n;++e)yield this.trianglePolygon(e)}trianglePolygon(t){const e=new ge;return this.renderTriangle(t,e),e.value()}}function fr(g,t,e,n){const s=g.length,i=new Float64Array(s*2);for(let r=0;r<s;++r){const l=g[r];i[r*2]=t.call(n,l,r,g),i[r*2+1]=e.call(n,l,r,g)}return i}function*pr(g,t,e,n){let s=0;for(const i of g)yield t.call(n,i,s,g),yield e.call(n,i,s,g),++s}const Zt=0,mr=1,wr=new H,an=new wn,pe=new vn,cn=new H,Xt=new yn;class hn{constructor(){this.tolerance=-1,this.faces=[],this.newFaces=[],this.assigned=new un,this.unassigned=new un,this.vertices=[]}setFromPoints(t){if(t.length>=4){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.vertices.push(new vr(t[e]));this.compute()}return this}setFromObject(t){const e=[];return t.updateMatrixWorld(!0),t.traverse(function(n){const s=n.geometry;if(s!==void 0){const i=s.attributes.position;if(i!==void 0)for(let r=0,l=i.count;r<l;r++){const o=new H;o.fromBufferAttribute(i,r).applyMatrix4(n.matrixWorld),e.push(o)}}}),this.setFromPoints(e)}containsPoint(t){const e=this.faces;for(let n=0,s=e.length;n<s;n++)if(e[n].distanceToPoint(t)>this.tolerance)return!1;return!0}intersectRay(t,e){const n=this.faces;let s=-1/0,i=1/0;for(let r=0,l=n.length;r<l;r++){const o=n[r],a=o.distanceToPoint(t.origin),h=o.normal.dot(t.direction);if(a>0&&h>=0)return null;const u=h!==0?-a/h:0;if(!(u<=0)&&(h>0?i=Math.min(u,i):s=Math.max(u,s),s>i))return null}return s!==-1/0?t.at(s,e):t.at(i,e),e}intersectsRay(t){return this.intersectRay(t,wr)!==null}makeEmpty(){return this.faces=[],this.vertices=[],this}addVertexToFace(t,e){return t.face=e,e.outside===null?this.assigned.append(t):this.assigned.insertBefore(e.outside,t),e.outside=t,this}removeVertexFromFace(t,e){return t===e.outside&&(t.next!==null&&t.next.face===e?e.outside=t.next:e.outside=null),this.assigned.remove(t),this}removeAllVerticesFromFace(t){if(t.outside!==null){const e=t.outside;let n=t.outside;for(;n.next!==null&&n.next.face===t;)n=n.next;return this.assigned.removeSubList(e,n),e.prev=n.next=null,t.outside=null,e}}deleteFaceVertices(t,e){const n=this.removeAllVerticesFromFace(t);if(n!==void 0)if(e===void 0)this.unassigned.appendChain(n);else{let s=n;do{const i=s.next;e.distanceToPoint(s.point)>this.tolerance?this.addVertexToFace(s,e):this.unassigned.append(s),s=i}while(s!==null)}return this}resolveUnassignedPoints(t){if(this.unassigned.isEmpty()===!1){let e=this.unassigned.first();do{const n=e.next;let s=this.tolerance,i=null;for(let r=0;r<t.length;r++){const l=t[r];if(l.mark===Zt){const o=l.distanceToPoint(e.point);if(o>s&&(s=o,i=l),s>1e3*this.tolerance)break}}i!==null&&this.addVertexToFace(e,i),e=n}while(e!==null)}return this}computeExtremes(){const t=new H,e=new H,n=[],s=[];for(let i=0;i<3;i++)n[i]=s[i]=this.vertices[0];t.copy(this.vertices[0].point),e.copy(this.vertices[0].point);for(let i=0,r=this.vertices.length;i<r;i++){const l=this.vertices[i],o=l.point;for(let a=0;a<3;a++)o.getComponent(a)<t.getComponent(a)&&(t.setComponent(a,o.getComponent(a)),n[a]=l);for(let a=0;a<3;a++)o.getComponent(a)>e.getComponent(a)&&(e.setComponent(a,o.getComponent(a)),s[a]=l)}return this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(t.x),Math.abs(e.x))+Math.max(Math.abs(t.y),Math.abs(e.y))+Math.max(Math.abs(t.z),Math.abs(e.z))),{min:n,max:s}}computeInitialHull(){const t=this.vertices,e=this.computeExtremes(),n=e.min,s=e.max;let i=0,r=0;for(let c=0;c<3;c++){const d=s[c].point.getComponent(c)-n[c].point.getComponent(c);d>i&&(i=d,r=c)}const l=n[r],o=s[r];let a,h;i=0,an.set(l.point,o.point);for(let c=0,d=this.vertices.length;c<d;c++){const p=t[c];if(p!==l&&p!==o){an.closestPointToPoint(p.point,!0,cn);const m=cn.distanceToSquared(p.point);m>i&&(i=m,a=p)}}i=-1,pe.setFromCoplanarPoints(l.point,o.point,a.point);for(let c=0,d=this.vertices.length;c<d;c++){const p=t[c];if(p!==l&&p!==o&&p!==a){const m=Math.abs(pe.distanceToPoint(p.point));m>i&&(i=m,h=p)}}const u=[];if(pe.distanceToPoint(h.point)<0){u.push(nt.create(l,o,a),nt.create(h,o,l),nt.create(h,a,o),nt.create(h,l,a));for(let c=0;c<3;c++){const d=(c+1)%3;u[c+1].getEdge(2).setTwin(u[0].getEdge(d)),u[c+1].getEdge(1).setTwin(u[d+1].getEdge(0))}}else{u.push(nt.create(l,a,o),nt.create(h,l,o),nt.create(h,o,a),nt.create(h,a,l));for(let c=0;c<3;c++){const d=(c+1)%3;u[c+1].getEdge(2).setTwin(u[0].getEdge((3-c)%3)),u[c+1].getEdge(0).setTwin(u[d+1].getEdge(1))}}for(let c=0;c<4;c++)this.faces.push(u[c]);for(let c=0,d=t.length;c<d;c++){const p=t[c];if(p!==l&&p!==o&&p!==a&&p!==h){i=this.tolerance;let m=null;for(let v=0;v<4;v++){const y=this.faces[v].distanceToPoint(p.point);y>i&&(i=y,m=this.faces[v])}m!==null&&this.addVertexToFace(p,m)}}return this}reindexFaces(){const t=[];for(let e=0;e<this.faces.length;e++){const n=this.faces[e];n.mark===Zt&&t.push(n)}return this.faces=t,this}nextVertexToAdd(){if(this.assigned.isEmpty()===!1){let t,e=0;const n=this.assigned.first().face;let s=n.outside;do{const i=n.distanceToPoint(s.point);i>e&&(e=i,t=s),s=s.next}while(s!==null&&s.face===n);return t}}computeHorizon(t,e,n,s){this.deleteFaceVertices(n),n.mark=mr;let i;e===null?i=e=n.getEdge(0):i=e.next;do{const r=i.twin,l=r.face;l.mark===Zt&&(l.distanceToPoint(t)>this.tolerance?this.computeHorizon(t,r,l,s):s.push(i)),i=i.next}while(i!==e);return this}addAdjoiningFace(t,e){const n=nt.create(t,e.tail(),e.head());return this.faces.push(n),n.getEdge(-1).setTwin(e.twin),n.getEdge(0)}addNewFaces(t,e){this.newFaces=[];let n=null,s=null;for(let i=0;i<e.length;i++){const r=e[i],l=this.addAdjoiningFace(t,r);n===null?n=l:l.next.setTwin(s),this.newFaces.push(l.face),s=l}return n.next.setTwin(s),this}addVertexToHull(t){const e=[];return this.unassigned.clear(),this.removeVertexFromFace(t,t.face),this.computeHorizon(t.point,null,t.face,e),this.addNewFaces(t,e),this.resolveUnassignedPoints(this.newFaces),this}cleanup(){return this.assigned.clear(),this.unassigned.clear(),this.newFaces=[],this}compute(){let t;for(this.computeInitialHull();(t=this.nextVertexToAdd())!==void 0;)this.addVertexToHull(t);return this.reindexFaces(),this.cleanup(),this}}class nt{constructor(){this.normal=new H,this.midpoint=new H,this.area=0,this.constant=0,this.outside=null,this.mark=Zt,this.edge=null}static create(t,e,n){const s=new nt,i=new me(t,s),r=new me(e,s),l=new me(n,s);return i.next=l.prev=r,r.next=i.prev=l,l.next=r.prev=i,s.edge=i,s.compute()}getEdge(t){let e=this.edge;for(;t>0;)e=e.next,t--;for(;t<0;)e=e.prev,t++;return e}compute(){const t=this.edge.tail(),e=this.edge.head(),n=this.edge.next.head();return Xt.set(t.point,e.point,n.point),Xt.getNormal(this.normal),Xt.getMidpoint(this.midpoint),this.area=Xt.getArea(),this.constant=this.normal.dot(this.midpoint),this}distanceToPoint(t){return this.normal.dot(t)-this.constant}}class me{constructor(t,e){this.vertex=t,this.prev=null,this.next=null,this.twin=null,this.face=e}head(){return this.vertex}tail(){return this.prev?this.prev.vertex:null}length(){const t=this.head(),e=this.tail();return e!==null?e.point.distanceTo(t.point):-1}lengthSquared(){const t=this.head(),e=this.tail();return e!==null?e.point.distanceToSquared(t.point):-1}setTwin(t){return this.twin=t,t.twin=this,this}}class vr{constructor(t){this.point=t,this.prev=null,this.next=null,this.face=null}}class un{constructor(){this.head=null,this.tail=null}first(){return this.head}last(){return this.tail}clear(){return this.head=this.tail=null,this}insertBefore(t,e){return e.prev=t.prev,e.next=t,e.prev===null?this.head=e:e.prev.next=e,t.prev=e,this}insertAfter(t,e){return e.prev=t,e.next=t.next,e.next===null?this.tail=e:e.next.prev=e,t.next=e,this}append(t){return this.head===null?this.head=t:this.tail.next=t,t.prev=this.tail,t.next=null,this.tail=t,this}appendChain(t){for(this.head===null?this.head=t:this.tail.next=t,t.prev=this.tail;t.next!==null;)t=t.next;return this.tail=t,this}remove(t){return t.prev===null?this.head=t.next:t.prev.next=t.next,t.next===null?this.tail=t.prev:t.next.prev=t.prev,this}removeSubList(t,e){return t.prev===null?this.head=e.next:t.prev.next=e.next,e.next===null?this.tail=t.prev:e.next.prev=t.prev,this}isEmpty(){return this.head===null}}class yr extends xt{constructor(t=[]){super();const e=[],n=[];hn===void 0&&console.error("THREE.ConvexGeometry: ConvexGeometry relies on ConvexHull");const i=new hn().setFromPoints(t).faces;for(let r=0;r<i.length;r++){const l=i[r];let o=l.edge;do{const a=o.head().point;e.push(a.x,a.y,a.z),n.push(l.normal.x,l.normal.y,l.normal.z),o=o.next}while(o!==l.edge)}this.setAttribute("position",new Ce(e,3)),this.setAttribute("normal",new Ce(n,3))}}var gr=function(){var g=0,t=1,e=new H;function n(){this.tolerance=-1,this.faces=[],this.newFaces=[],this.assigned=new l,this.unassigned=new l,this.vertices=[]}Object.assign(n.prototype,{toJSON:function(){const o=this.faces.map(d=>d.toArray()),a=Array.from(new Set(o.flat())).sort(),h=[];for(let d=0;d<a.length;d++)h.push(this.vertices[a[d]].point.x,this.vertices[a[d]].point.y,this.vertices[a[d]].point.z);const u=new Map;for(let d=0;d<a.length;d++)u.set(a[d],d);const c=[];for(let d=0;d<o.length;d++)c.push([u.get(o[d][0]),u.get(o[d][1]),u.get(o[d][2])]);return[h,c]},setFromPoints:function(o){Array.isArray(o)!==!0&&console.error("THREE.ConvexHull: Points parameter is not an array."),o.length<4&&console.error("THREE.ConvexHull: The algorithm needs at least four points."),this.makeEmpty();for(var a=0,h=o.length;a<h;a++)this.vertices.push(new r(o[a],a));return this.compute(),this},setFromObject:function(o){var a=[];return o.updateMatrixWorld(!0),o.traverse(function(h){var u,c,d,p=h.geometry;if(p!==void 0&&(p.isGeometry&&(p=p.toBufferGeometry?p.toBufferGeometry():new BufferGeometry().fromGeometry(p)),p.isBufferGeometry)){var m=p.attributes.position;if(m!==void 0)for(u=0,c=m.count;u<c;u++)d=new H,d.fromBufferAttribute(m,u).applyMatrix4(h.matrixWorld),a.push(d)}}),this.setFromPoints(a)},containsPoint:function(o){for(var a=this.faces,h=0,u=a.length;h<u;h++){var c=a[h];if(c.distanceToPoint(o)>this.tolerance)return!1}return!0},intersectRay:function(o,a){for(var h=this.faces,u=-1/0,c=1/0,d=0,p=h.length;d<p;d++){var m=h[d],v=m.distanceToPoint(o.origin),y=m.normal.dot(o.direction);if(v>0&&y>=0)return null;var w=y!==0?-v/y:0;if(!(w<=0)&&(y>0?c=Math.min(w,c):u=Math.max(w,u),u>c))return null}return u!==-1/0?o.at(u,a):o.at(c,a),a},intersectsRay:function(o){return this.intersectRay(o,e)!==null},makeEmpty:function(){return this.faces=[],this.vertices=[],this},addVertexToFace:function(o,a){return o.face=a,a.outside===null?this.assigned.append(o):this.assigned.insertBefore(a.outside,o),a.outside=o,this},removeVertexFromFace:function(o,a){return o===a.outside&&(o.next!==null&&o.next.face===a?a.outside=o.next:a.outside=null),this.assigned.remove(o),this},removeAllVerticesFromFace:function(o){if(o.outside!==null){for(var a=o.outside,h=o.outside;h.next!==null&&h.next.face===o;)h=h.next;return this.assigned.removeSubList(a,h),a.prev=h.next=null,o.outside=null,a}},deleteFaceVertices:function(o,a){var h=this.removeAllVerticesFromFace(o);if(h!==void 0)if(a===void 0)this.unassigned.appendChain(h);else{var u=h;do{var c=u.next,d=a.distanceToPoint(u.point);d>this.tolerance?this.addVertexToFace(u,a):this.unassigned.append(u),u=c}while(u!==null)}return this},resolveUnassignedPoints:function(o){if(this.unassigned.isEmpty()===!1){var a=this.unassigned.first();do{for(var h=a.next,u=this.tolerance,c=null,d=0;d<o.length;d++){var p=o[d];if(p.mark===g){var m=p.distanceToPoint(a.point);if(m>u&&(u=m,c=p),u>1e3*this.tolerance)break}}c!==null&&this.addVertexToFace(a,c),a=h}while(a!==null)}return this},computeExtremes:function(){var o=new H,a=new H,h=[],u=[],c,d,p;for(c=0;c<3;c++)h[c]=u[c]=this.vertices[0];for(o.copy(this.vertices[0].point),a.copy(this.vertices[0].point),c=0,d=this.vertices.length;c<d;c++){var m=this.vertices[c],v=m.point;for(p=0;p<3;p++)v.getComponent(p)<o.getComponent(p)&&(o.setComponent(p,v.getComponent(p)),h[p]=m);for(p=0;p<3;p++)v.getComponent(p)>a.getComponent(p)&&(a.setComponent(p,v.getComponent(p)),u[p]=m)}return this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(o.x),Math.abs(a.x))+Math.max(Math.abs(o.y),Math.abs(a.y))+Math.max(Math.abs(o.z),Math.abs(a.z))),{min:h,max:u}},computeInitialHull:function(){var o,a,h;return function(){o===void 0&&(o=new wn,a=new vn,h=new H);var c,d=this.vertices,p=this.computeExtremes(),m=p.min,v=p.max,y,w,b,E,x,C,T,S,N=0,z=0;for(x=0;x<3;x++)S=v[x].point.getComponent(x)-m[x].point.getComponent(x),S>N&&(N=S,z=x);for(y=m[z],w=v[z],N=0,o.set(y.point,w.point),x=0,C=this.vertices.length;x<C;x++)c=d[x],c!==y&&c!==w&&(o.closestPointToPoint(c.point,!0,h),S=h.distanceToSquared(c.point),S>N&&(N=S,b=c));for(N=-1,a.setFromCoplanarPoints(y.point,w.point,b.point),x=0,C=this.vertices.length;x<C;x++)c=d[x],c!==y&&c!==w&&c!==b&&(S=Math.abs(a.distanceToPoint(c.point)),S>N&&(N=S,E=c));var M=[];if(a.distanceToPoint(E.point)<0)for(M.push(s.create(y,w,b),s.create(E,w,y),s.create(E,b,w),s.create(E,y,b)),x=0;x<3;x++)T=(x+1)%3,M[x+1].getEdge(2).setTwin(M[0].getEdge(T)),M[x+1].getEdge(1).setTwin(M[T+1].getEdge(0));else for(M.push(s.create(y,b,w),s.create(E,y,w),s.create(E,w,b),s.create(E,b,y)),x=0;x<3;x++)T=(x+1)%3,M[x+1].getEdge(2).setTwin(M[0].getEdge((3-x)%3)),M[x+1].getEdge(0).setTwin(M[T+1].getEdge(1));for(x=0;x<4;x++)this.faces.push(M[x]);for(x=0,C=d.length;x<C;x++)if(c=d[x],c!==y&&c!==w&&c!==b&&c!==E){N=this.tolerance;var I=null;for(T=0;T<4;T++)S=this.faces[T].distanceToPoint(c.point),S>N&&(N=S,I=this.faces[T]);I!==null&&this.addVertexToFace(c,I)}return this}}(),reindexFaces:function(){for(var o=[],a=0;a<this.faces.length;a++){var h=this.faces[a];h.mark===g&&o.push(h)}return this.faces=o,this},nextVertexToAdd:function(){if(this.assigned.isEmpty()===!1){var o,a=0,h=this.assigned.first().face,u=h.outside;do{var c=h.distanceToPoint(u.point);c>a&&(a=c,o=u),u=u.next}while(u!==null&&u.face===h);return o}},computeHorizon:function(o,a,h,u){this.deleteFaceVertices(h),h.mark=t;var c;a===null?c=a=h.getEdge(0):c=a.next;do{var d=c.twin,p=d.face;p.mark===g&&(p.distanceToPoint(o)>this.tolerance?this.computeHorizon(o,d,p,u):u.push(c)),c=c.next}while(c!==a);return this},addAdjoiningFace:function(o,a){var h=s.create(o,a.tail(),a.head());return this.faces.push(h),h.getEdge(-1).setTwin(a.twin),h.getEdge(0)},addNewFaces:function(o,a){this.newFaces=[];for(var h=null,u=null,c=0;c<a.length;c++){var d=a[c],p=this.addAdjoiningFace(o,d);h===null?h=p:p.next.setTwin(u),this.newFaces.push(p.face),u=p}return h.next.setTwin(u),this},addVertexToHull:function(o){var a=[];return this.unassigned.clear(),this.removeVertexFromFace(o,o.face),this.computeHorizon(o.point,null,o.face,a),this.addNewFaces(o,a),this.resolveUnassignedPoints(this.newFaces),this},cleanup:function(){return this.assigned.clear(),this.unassigned.clear(),this.newFaces=[],this},compute:function(){var o;for(this.computeInitialHull();(o=this.nextVertexToAdd())!==void 0;)this.addVertexToHull(o);return this.reindexFaces(),this.cleanup(),this}});function s(){this.normal=new H,this.midpoint=new H,this.area=0,this.constant=0,this.outside=null,this.mark=g,this.edge=null}Object.assign(s,{create:function(o,a,h){var u=new s,c=new i(o,u),d=new i(a,u),p=new i(h,u);return c.next=p.prev=d,d.next=c.prev=p,p.next=d.prev=c,u.edge=c,u.compute()}}),Object.assign(s.prototype,{toArray:function(){const o=[];let a=this.edge;do o.push(a.head().index),a=a.next;while(a!==this.edge);return o},getEdge:function(o){for(var a=this.edge;o>0;)a=a.next,o--;for(;o<0;)a=a.prev,o++;return a},compute:function(){var o;return function(){o===void 0&&(o=new yn);var h=this.edge.tail(),u=this.edge.head(),c=this.edge.next.head();return o.set(h.point,u.point,c.point),o.getNormal(this.normal),o.getMidpoint(this.midpoint),this.area=o.getArea(),this.constant=this.normal.dot(this.midpoint),this}}(),distanceToPoint:function(o){return this.normal.dot(o)-this.constant}});function i(o,a){this.vertex=o,this.prev=null,this.next=null,this.twin=null,this.face=a}Object.assign(i.prototype,{head:function(){return this.vertex},tail:function(){return this.prev?this.prev.vertex:null},length:function(){var o=this.head(),a=this.tail();return a!==null?a.point.distanceTo(o.point):-1},lengthSquared:function(){var o=this.head(),a=this.tail();return a!==null?a.point.distanceToSquared(o.point):-1},setTwin:function(o){return this.twin=o,o.twin=this,this}});function r(o,a){this.point=o,this.index=a,this.prev=null,this.next=null,this.face=null}function l(){this.head=null,this.tail=null}return Object.assign(l.prototype,{first:function(){return this.head},last:function(){return this.tail},clear:function(){return this.head=this.tail=null,this},insertBefore:function(o,a){return a.prev=o.prev,a.next=o,a.prev===null?this.head=a:a.prev.next=a,o.prev=a,this},insertAfter:function(o,a){return a.prev=o,a.next=o.next,a.next===null?this.tail=a:a.next.prev=a,o.next=a,this},append:function(o){return this.head===null?this.head=o:this.tail.next=o,o.prev=this.tail,o.next=null,this.tail=o,this},appendChain:function(o){for(this.head===null?this.head=o:this.tail.next=o,o.prev=this.tail;o.next!==null;)o=o.next;return this.tail=o,this},remove:function(o){return o.prev===null?this.head=o.next:o.prev.next=o.next,o.next===null?this.tail=o.prev:o.next.prev=o.prev,this},removeSubList:function(o,a){return o.prev===null?this.head=a.next:o.prev.next=a.next,a.next===null?this.tail=o.prev:a.next.prev=o.prev,this},isEmpty:function(){return this.head===null}}),n}();const xr=new H,$t=new H,br=new kn;function ee(g){const t=_r(g);if(t.length===0)return null;if(t.length===1)return dn(t[0]);let e;const n=[];for(;e=t.pop();)n.push(zr(dn(e)));return Er(n)}function dn(g){let t=g.geometry;return t.toBufferGeometry?t=t.toBufferGeometry():t=t.clone(),g.updateMatrixWorld(),g.matrixWorld.decompose(xr,br,$t),t.scale($t.x,$t.y,$t.z),t}function Er(g){let t=0;for(let s=0;s<g.length;s++){const i=g[s].attributes.position;i&&i.itemSize===3&&(t+=i.count)}const e=new Float32Array(t*3);let n=0;for(let s=0;s<g.length;s++){const i=g[s].attributes.position;if(i&&i.itemSize===3)for(let r=0;r<i.count;r++)e[n++]=i.getX(r),e[n++]=i.getY(r),e[n++]=i.getZ(r)}return new xt().setAttribute("position",new xn(e,3))}function Rn(g){const t=g.attributes.position,e=new Float32Array(t.count*3);for(let n=0;n<t.count;n++)e[n*3]=t.getX(n),e[n*3+1]=t.getY(n),e[n*3+2]=t.getZ(n);return e}function _r(g){const t=[];return g.traverse(function(e){e.isMesh&&t.push(e)}),t}function Kt(g,t){switch(t){case"x":return g.x;case"y":return g.y;case"z":return g.z}throw new Error(`Unexpected component ${t}`)}function zr(g,t=1e-4){t=Math.max(t,Number.EPSILON);const e={},n=g.getIndex(),s=g.getAttribute("position"),i=n?n.count:s.count;let r=0;const l=[],o=[],a=Math.log10(1/t),h=Math.pow(10,a);for(let d=0;d<i;d++){const p=n?n.getX(d):d;let m="";m+=`${~~(s.getX(p)*h)},`,m+=`${~~(s.getY(p)*h)},`,m+=`${~~(s.getZ(p)*h)},`,m in e?l.push(e[m]):(o.push(s.getX(p)),o.push(s.getY(p)),o.push(s.getZ(p)),e[m]=r,l.push(r),r++)}const u=new xn(new Float32Array(o),s.itemSize,s.normalized),c=new xt;return c.setAttribute("position",u),c.setIndex(l),c}const fn=Math.PI/2;var U;(function(g){g.BOX="Box",g.CYLINDER="Cylinder",g.SPHERE="Sphere",g.HULL="ConvexPolyhedron",g.MESH="Trimesh"})(U||(U={}));const Cr=function(t,e={}){let n;if(e.type===U.BOX)return mn(t);if(e.type===U.CYLINDER)return Nr(t,e);if(e.type===U.SPHERE)return Vr(t,e);if(e.type===U.HULL)return Fr(t);if(e.type===U.MESH)return n=ee(t),n?Lr(n):null;if(e.type)throw new Error(`[CANNON.getShapeParameters] Invalid type "${e.type}".`);if(n=ee(t),!n)return null;switch(n.type){case"BoxGeometry":case"BoxBufferGeometry":return pn(n);case"CylinderGeometry":case"CylinderBufferGeometry":return Ir(n);case"PlaneGeometry":case"PlaneBufferGeometry":return Rr(n);case"SphereGeometry":case"SphereBufferGeometry":return qr(n);case"TubeGeometry":case"BufferGeometry":return mn(t);default:return console.warn('Unrecognized geometry: "%s". Using bounding box as shape.',n.type),pn(n)}},Ar=function(t,e={}){const n=Cr(t,e);if(!n)return null;const{type:s,params:i,offset:r,orientation:l}=n;let o;return s===U.BOX?o=Mr(i):s===U.CYLINDER?o=Tr(i):s===U.SPHERE?o=Br(i):s===U.HULL?o=Sr(i):o=Pr(i),{shape:o,offset:r,orientation:l}};function Mr(g){const{x:t,y:e,z:n}=g;return new Nt(new f(t,e,n))}function Tr(g){const{radiusTop:t,radiusBottom:e,height:n,segments:s}=g,i=new In(t,e,n,s);return i.radiusTop=e,i.radiusBottom=e,i.height=n,i.numSegments=s,i}function Br(g){return new Fn(g.radius)}function Sr(g){const{faces:t,vertices:e}=g,n=[];for(let i=0;i<e.length;i+=3)n.push(new f(e[i],e[i+1],e[i+2]));return new at({faces:t,vertices:n})}function Pr(g){const{vertices:t,indices:e}=g;return new It(t,e)}function pn(g){if(!Rn(g).length)return null;g.computeBoundingBox();const e=g.boundingBox;return{type:U.BOX,params:{x:(e.max.x-e.min.x)/2,y:(e.max.y-e.min.y)/2,z:(e.max.z-e.min.z)/2}}}function mn(g){const t=g.clone();t.quaternion.set(0,0,0,1),t.updateMatrixWorld();const e=new gn().setFromObject(t);if(!isFinite(e.min.lengthSq()))return null;const n=e.translate(t.position.negate()).getCenter(new H);return{type:U.BOX,params:{x:(e.max.x-e.min.x)/2,y:(e.max.y-e.min.y)/2,z:(e.max.z-e.min.z)/2},offset:n.lengthSq()?new f(n.x,n.y,n.z):void 0}}function Fr(g){const t=ee(g);if(!t)return null;const e=1e-4;for(let i=0;i<t.attributes.position.count;i++)t.attributes.position.setXYZ(i,t.attributes.position.getX(i)+(Math.random()-.5)*e,t.attributes.position.getY(i)+(Math.random()-.5)*e,t.attributes.position.getZ(i)+(Math.random()-.5)*e);const[n,s]=new gr().setFromObject(new tt(t)).toJSON();return{type:U.HULL,params:{vertices:new Float32Array(n),faces:s}}}function Ir(g){const t=g.parameters;return{type:U.CYLINDER,params:{radiusTop:t.radiusTop,radiusBottom:t.radiusBottom,height:t.height,segments:t.radialSegments},orientation:new Y().setFromEuler(On.degToRad(-90),0,0,"XYZ").normalize()}}function Nr(g,t){const e=["x","y","z"],n=t.cylinderAxis||"y",s=e.splice(e.indexOf(n),1)&&e,i=new gn().setFromObject(g);if(!isFinite(i.min.lengthSq()))return null;const r=i.max[n]-i.min[n],l=.5*Math.max(Kt(i.max,s[0])-Kt(i.min,s[0]),Kt(i.max,s[1])-Kt(i.min,s[1])),o=n==="y"?fn:0,a=n==="z"?fn:0;return{type:U.CYLINDER,params:{radiusTop:l,radiusBottom:l,height:r,segments:12},orientation:new Y().setFromEuler(o,a,0,"XYZ").normalize()}}function Rr(g){g.computeBoundingBox();const t=g.boundingBox;return{type:U.BOX,params:{x:(t.max.x-t.min.x)/2||.1,y:(t.max.y-t.min.y)/2||.1,z:(t.max.z-t.min.z)/2||.1}}}function qr(g){return{type:U.SPHERE,params:{radius:g.parameters.radius}}}function Vr(g,t){if(t.sphereRadius)return{type:U.SPHERE,params:{radius:t.sphereRadius}};const e=ee(g);return e?(e.computeBoundingSphere(),{type:U.SPHERE,params:{radius:e.boundingSphere.radius}}):null}function Lr(g){const t=Rn(g);if(!t.length)return null;const e=new Uint32Array(t.length);for(let n=0;n<t.length;n++)e[n]=n;return{type:U.MESH,params:{vertices:t,indices:e}}}const we=3,ve=3;class kr{constructor(){O(this,"scene");O(this,"items",[]);const t=new Vt;this.scene=t.scene;const e=[...new Array(30)].map(()=>[Math.random()*we,Math.random()*ve]),s=_e.from(e).voronoi([0,0,we,ve]);let i=0;const r=[];for(;;){const l=s.cellPolygon(i);if(l[0][0]==null)break;i++,r.push(l)}r.forEach(l=>{const o=new jn,a=l.shift();o.moveTo(a[0],a[1]);let h=0,u=0;l.forEach(E=>{o.lineTo(E[0],E[1]),h+=E[0],u+=E[1]}),h/=l.length,u/=l.length;const d=new Hn(o,{steps:1,depth:.1,bevelEnabled:!1}).getAttribute("position").array,p=[];for(let E=0;E<d.length;E+=3)p.push(new H(d[E]-h,d[E+2],d[E+1]-u));const m=new yr(p),v=new bn({color:new Wn(Math.random(),Math.random(),Math.random()),wireframe:!1}),y=new tt(m,v);y.position.x+=h,y.position.z+=u,this.scene.add(y);const w=Ar(y).shape,b=new R({mass:1});b.addShape(w),b.angularVelocity.set(3,2,u),b.angularDamping=.8,t.physics.addBody(b),this.items.push({mesh:y,body:b})}),this.apply()}update(){this.items.forEach(t=>{t.mesh.position.set(t.body.position.x,t.body.position.y,t.body.position.z),t.mesh.quaternion.set(t.body.quaternion.x,t.body.quaternion.y,t.body.quaternion.z,t.body.quaternion.w)})}apply(){this.items.forEach(t=>{t.body.position.set(t.mesh.position.x,t.mesh.position.y,t.mesh.position.z),t.body.quaternion.set(t.mesh.quaternion.x,t.mesh.quaternion.y,t.mesh.quaternion.z,t.mesh.quaternion.w)})}renderVoronoi(t){const e=document.createElement("canvas");document.body.appendChild(e),e.style.backgroundColor="#ccc",e.width=we,e.height=ve;const n=e.getContext("2d");n.beginPath(),t.render(n),n.lineWidth=.25,n.strokeStyle="#ff0000",n.fillStyle="#ffff33",n.stroke()}}class Or{constructor(){O(this,"scene");O(this,"camera");O(this,"renderer");O(this,"mesh");const t=new Vt;this.scene=new En,this.camera=t.oCamera,this.renderer=t.renderer;const e=new Qt(2,2),n=new Gn({...es});this.mesh=new tt(e,n),this.mesh.material.uniforms.resolution.value.x=1/(window.innerWidth*this.renderer.getPixelRatio()),this.mesh.material.uniforms.resolution.value.y=1/(window.innerHeight*this.renderer.getPixelRatio()),this.scene.add(this.mesh)}render(t,e){this.renderer.setRenderTarget(t),this.mesh.material.uniforms.tDiffuse.value=e,this.renderer.render(this.scene,this.camera),this.renderer.setRenderTarget(null)}}class jr{constructor(){O(this,"scene");O(this,"camera");O(this,"renderer");O(this,"target");O(this,"sample");O(this,"boxes",[]);O(this,"floor");O(this,"voronoi");O(this,"fxaa");const t=new Vt;this.scene=t.scene,this.camera=t.camera,this.renderer=t.renderer,this.target=new Dn(t.size.width*Math.min(2,window.devicePixelRatio),t.size.height*Math.min(2,window.devicePixelRatio)),this.setUp()}setUp(){const t=new Yn(2236962);this.scene.add(t);const e=new Un(16777215,.5);e.castShadow=!0;const n=1024;e.shadow.mapSize.width=n,e.shadow.mapSize.height=n,e.position.set(1,3,1),this.scene.add(e);const s=new Xn(e);this.scene.add(s),this.voronoi=new kr,this.floor=new Xo,this.fxaa=new Or}update(){this.voronoi.update(),this.renderer.setRenderTarget(this.target),this.renderer.render(this.scene,this.camera),this.fxaa.render(null,this.target.texture)}resize(){}}class Hr{constructor(t,e,n){O(this,"scene");O(this,"world");O(this,"_meshes");O(this,"_material");O(this,"_particleMaterial",new Ae);O(this,"_sphereGeometry");O(this,"_boxGeometry");O(this,"_planeGeometry");O(this,"_particleGeometry");O(this,"tmpVec0",new f);O(this,"tmpVec1",new f);O(this,"tmpVec2",new f);O(this,"tmpQuat0",new Y);this.scene=t,this.world=e,this._meshes=[],this._material=new bn({color:65280,wireframe:!0}),this._particleMaterial=new Ae({color:16711680,size:10,sizeAttenuation:!1,depthTest:!1}),this._sphereGeometry=new Me(1),this._boxGeometry=new Te(1,1,1),this._planeGeometry=new Qt(10,10,10,10),this._particleGeometry=new xt,this._particleGeometry.setFromPoints([new H(0,0,0)])}update(){const t=this.world.bodies,e=this._meshes,n=this.tmpVec0,s=this.tmpQuat0;let i=0;for(let r=0;r!==t.length;r++){const l=t[r];for(let o=0;o!==l.shapes.length;o++){const a=l.shapes[o];this._updateMesh(i,l,a);const h=e[i];h&&(l.quaternion.vmult(l.shapeOffsets[o],n),l.position.vadd(n,n),l.quaternion.mult(l.shapeOrientations[o],s),h.position.x=n.x,h.position.y=n.y,h.position.z=n.z,h.quaternion.x=s.x,h.quaternion.y=s.y,h.quaternion.z=s.z,h.quaternion.w=s.w),i++}}for(let r=i;r<e.length;r++){const l=e[r];l&&this.scene.remove(l)}e.length=i}_updateMesh(t,e,n){let s=this._meshes[t];this._typeMatch(s,n)||(s&&this.scene.remove(s),s=this._meshes[t]=this._createMesh(n)),this._scaleMesh(s,n)}_typeMatch(t,e){if(!t)return!1;const n=t.geometry;return n instanceof Me&&e instanceof Fn||n instanceof Te&&e instanceof Nt||n instanceof Be&&e instanceof In||n instanceof Qt&&e instanceof Nn||e instanceof at||n.id===e.id&&e instanceof It||n.id===e.id&&e instanceof oi}_createMesh(t){let e,n,s,i,r;const l=this._material;let o=[];switch(t.type){case F.types.SPHERE:e=new tt(this._sphereGeometry,l);break;case F.types.BOX:e=new tt(this._boxGeometry,l);break;case F.types.CYLINDER:n=new Be(t.radiusTop,t.radiusBottom,t.height,t.numSegments),e=new tt(n,l);break;case F.types.PLANE:e=new tt(this._planeGeometry,l);break;case F.types.PARTICLE:e=new $n(this._particleGeometry,this._particleMaterial);break;case F.types.CONVEXPOLYHEDRON:n=new xt,t.id=n.id,o=[];for(let h=0;h<t.vertices.length;h+=1){const u=t.vertices[h];o.push(new H(u.x,u.y,u.z))}n.setFromPoints(o);const a=[];for(let h=0;h<t.faces.length;h++){const u=t.faces[h],c=u[0];for(let d=1;d<u.length-1;d++){const p=u[d],m=u[d+1];a.push(c,p,m)}}n.setIndex(a),e=new tt(n,l);break;case F.types.TRIMESH:n=new xt,t.id=n.id,o=[];for(let h=0;h<t.vertices.length;h+=3)o.push(new H(t.vertices[h],t.vertices[h+1],t.vertices[h+2]));n.setFromPoints(o),e=new tt(n,l);break;case F.types.HEIGHTFIELD:n=new xt,s=this.tmpVec0,i=this.tmpVec1,r=this.tmpVec2;for(let h=0;h<t.data.length-1;h++)for(let u=0;u<t.data[h].length-1;u++)for(let c=0;c<2;c++)t.getConvexTrianglePillar(h,u,c===0),s.copy(t.pillarConvex.vertices[0]),i.copy(t.pillarConvex.vertices[1]),r.copy(t.pillarConvex.vertices[2]),s.vadd(t.pillarOffset,s),i.vadd(t.pillarOffset,i),r.vadd(t.pillarOffset,r),o.push(new H(s.x,s.y,s.z),new H(i.x,i.y,i.z),new H(r.x,r.y,r.z));n.setFromPoints(o),e=new tt(n,l),t.id=n.id;break;default:e=new tt;break}return e&&e.geometry&&this.scene.add(e),e}_scaleMesh(t,e){let n,s,i;switch(e.type){case F.types.SPHERE:n=e.radius,t.scale.set(n,n,n);break;case F.types.BOX:s=e.halfExtents,t.scale.copy(new H(s.x,s.y,s.z)),t.scale.multiplyScalar(2);break;case F.types.CONVEXPOLYHEDRON:t.scale.set(1,1,1);break;case F.types.TRIMESH:i=e.scale,t.scale.copy(new H(i.x,i.y,i.z));break;case F.types.HEIGHTFIELD:t.scale.set(1,1,1);break}}}let ye;class Vt{constructor(t){O(this,"scene");O(this,"camera");O(this,"oCamera");O(this,"renderer");O(this,"world");O(this,"physics");O(this,"dd");O(this,"size");O(this,"debug");if(ye)return ye;!t||(ye=this,this.init(t))}init(t){this.debug=new Uo,this.size={width:window.innerWidth,height:window.innerHeight},this.scene=new En,this.camera=new Kn(45,this.size.width/this.size.height,.1,100),this.camera.position.set(0,6,8),this.camera.lookAt(0,0,0),this.oCamera=new Zn(-1,1,1,-1,1,10),this.oCamera.position.set(0,0,10),this.oCamera.lookAt(0,0,0),this.renderer=new Qn({canvas:t}),this.renderer.setSize(this.size.width,this.size.height),this.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio)),this.renderer.outputEncoding=Jn,this.renderer.shadowMap.enabled=!0,this.physics=new Oo,this.physics.gravity.set(0,-9.82,0),this.dd=new Hr(this.scene,this.physics),this.world=new jr,new ts(this.camera,t),this.render()}render(){this.debug.begin(),this.physics.step(1/60),this.dd.update(),this.world.update(),this.debug.end(),requestAnimationFrame(()=>this.render())}resize(){}}const Wr=document.querySelector(".webgl"),Gr=new Vt(Wr);window.addEventListener("resize",()=>{Gr.resize()});
